{"version":3,"file":"TextField.styles.js","sourceRoot":"../src/","sources":["azure/styles/TextField.styles.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,cAAc,MAAM,cAAc,CAAC;AAG/C,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,KAA2B;IACjD,IAAA,uBAAO,EAAE,yBAAQ,EAAE,uCAAe,EAAE,2BAAS,EAAE,mBAAK,CAAW;IAC/D,IAAA,qCAAc,CAAW;IACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;IAEzE,OAAO;QACL,UAAU,EAAE;YACV,CAAC,SAAS,IAAI;gBACZ,MAAM,EAAE,cAAc,CAAC,kBAAkB;aAC1C;YACD,CAAC,eAAe,IAAI;gBAClB,WAAW,EAAE,cAAc,CAAC,oBAAoB;gBAChD,SAAS,EAAE;oBACT,SAAS,EAAE;wBACT,WAAW,EAAE,sBAAsB,CAAC,YAAY;qBACjD;iBACF;aACF;YACD,CAAC,OAAO;gBACN,CAAC,QAAQ,IAAI;gBACX,SAAS,EAAE;oBACT,QAAQ,EAAE;wBACR,WAAW,EAAE,cAAc,CAAC,SAAS;qBACtC;iBACF;aACF;YACH,OAAO,IAAI;gBACT,WAAW,EAAE,cAAc,CAAC,WAAW;aACxC;YACD,QAAQ,IAAI;gBACV,WAAW,EAAE,sBAAsB,CAAC,uBAAuB;gBAC3D,eAAe,EAAE,cAAc,CAAC,+BAA+B;aAChE;YACD,eAAe,IAAI;gBACjB;oBACE,WAAW,EAAE,cAAc,CAAC,gBAAgB;iBAC7C;gBACD,OAAO,IAAI;oBACT,WAAW,EAAE,cAAc,CAAC,WAAW;oBACvC,SAAS,EAAE;wBACT,kBAAkB,EAAE;4BAClB,WAAW,EAAE,cAAc,CAAC,WAAW;yBACxC;qBACF;iBACF;aACF;SACF;QACD,IAAI,EAAE;YACJ,MAAM,EAAE,CAAC;SACV;QACD,MAAM,EAAE;YACN,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;SACtC;QACD,MAAM,EAAE;YACN,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;SACtC;QACD,KAAK,EAAE;YACL;gBACE,KAAK,EAAE,cAAc,CAAC,SAAS;gBAC/B,eAAe,EAAE,sBAAsB,CAAC,iBAAiB;gBACzD,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;gBACrC,SAAS,EAAE;oBACT,eAAe,EAAE;wBACf,KAAK,EAAE,cAAc,CAAC,oBAAoB;qBAC3C;oBACD,wBAAwB,EAAE;wBACxB,KAAK,EAAE,cAAc,CAAC,oBAAoB;qBAC3C;oBACD,6BAA6B,EAAE;wBAC7B,KAAK,EAAE,cAAc,CAAC,oBAAoB;qBAC3C;iBACF;aACF;YACD,QAAQ,IAAI;gBACV,KAAK,EAAE,cAAc,CAAC,yBAAyB;gBAC/C,eAAe,EAAE,cAAc,CAAC,+BAA+B;aAChE;SACF;QACD,YAAY,EAAE;YACZ,KAAK,EAAE,cAAc,CAAC,SAAS;SAChC;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ITextFieldStyleProps, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\nimport * as StyleConstants from '../Constants';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const TextFieldStyles = (props: ITextFieldStyleProps): Partial<ITextFieldStyles> => {\n  const { focused, disabled, hasErrorMessage, multiline, theme } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    fieldGroup: [\n      !multiline && {\n        height: StyleConstants.inputControlHeight,\n      },\n      !hasErrorMessage && {\n        borderColor: semanticColors.inputPlaceholderText,\n        selectors: {\n          '::after': {\n            borderColor: extendedSemanticColors.controlFocus,\n          },\n        },\n      },\n      !focused &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: semanticColors.inputText,\n            },\n          },\n        },\n      focused && {\n        borderColor: semanticColors.focusBorder,\n      },\n      disabled && {\n        borderColor: extendedSemanticColors.textFieldBorderDisabled,\n        backgroundColor: semanticColors.primaryButtonBackgroundDisabled,\n      },\n      hasErrorMessage && [\n        {\n          borderWidth: StyleConstants.borderWidthError,\n        },\n        focused && {\n          borderColor: semanticColors.focusBorder,\n          selectors: {\n            '&:focus, &:hover': {\n              borderColor: semanticColors.focusBorder,\n            },\n          },\n        },\n      ],\n    ],\n    icon: {\n      bottom: 2,\n    },\n    prefix: {\n      fontSize: theme.fonts.medium.fontSize,\n    },\n    suffix: {\n      fontSize: theme.fonts.medium.fontSize,\n    },\n    field: [\n      {\n        color: semanticColors.inputText,\n        backgroundColor: extendedSemanticColors.controlBackground,\n        fontSize: theme.fonts.medium.fontSize,\n        selectors: {\n          '::placeholder': {\n            color: semanticColors.inputPlaceholderText,\n          },\n          ':-ms-input-placeholder': {\n            color: semanticColors.inputPlaceholderText,\n          },\n          '::-webkit-input-placeholder': {\n            color: semanticColors.inputPlaceholderText,\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.primaryButtonTextDisabled,\n        backgroundColor: semanticColors.primaryButtonBackgroundDisabled,\n      },\n    ],\n    errorMessage: {\n      color: semanticColors.errorText,\n    },\n  };\n};\n"]}