{"version":3,"file":"DetailsList.styles.js","sourceRoot":"../src/","sources":["azure/styles/DetailsList.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckStyleProps, ICheckStyles } from 'office-ui-fabric-react/lib/Check';\nimport {\n  IDetailsRowStyleProps,\n  IDetailsRowStyles,\n  IDetailsListStyleProps,\n  IDetailsListStyles,\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { FontSizes } from '../AzureType';\nimport * as StyleConstants from '../Constants';\n\nexport const CheckStyles = (props: ICheckStyleProps): Partial<ICheckStyles> => {\n  const { theme, checked } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    circle: [\n      {\n        fontSize: 0,\n        paddingTop: 1,\n        paddingLeft: 1,\n        color: semanticColors.listBackground,\n        backgroundColor: semanticColors.listBackground,\n        borderColor: semanticColors.controlOutline,\n        borderWidth: StyleConstants.borderWidth,\n        borderStyle: StyleConstants.borderSolid,\n      },\n    ],\n    check: [\n      {\n        left: 2.5,\n        top: 1.5,\n      },\n      checked && {\n        color: semanticColors.inputText,\n      },\n      !checked && {\n        color: semanticColors.listBackground,\n      },\n    ],\n  };\n};\n\nexport const DetailsListStyles = (props: IDetailsListStyleProps): Partial<IDetailsListStyles> => {\n  const { theme } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      borderTop: StyleConstants.borderNone,\n    },\n    headerWrapper: {\n      selectors: {\n        '.ms-DetailsHeader': {\n          borderColor: extendedSemanticColors.rowBorder,\n          borderTop: StyleConstants.borderNone,\n          selectors: {\n            '.ms-DetailsHeader-cellTitle': {\n              backgroundColor: semanticColors.listBackground,\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.listBackground,\n              fontSize: FontSizes.size10,\n              fontWeight: 700,\n            },\n            ':hover .ms-DetailsHeader-cellTitle': {\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.variantBorder,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const DetailsRowStyles = (props: IDetailsRowStyleProps): Partial<IDetailsRowStyles> => {\n  const { theme, isSelected } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: [\n      {\n        borderColor: extendedSemanticColors.rowBorder,\n        color: semanticColors.listText,\n        fontSize: theme.fonts.medium.fontSize,\n      },\n      !isSelected && [\n        {\n          background: semanticColors.listBackground,\n          color: semanticColors.listText,\n          textDecoration: extendedSemanticColors.listUnderline,\n          selectors: {\n            ':hover': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n              textDecorationColor: semanticColors.buttonTextHovered,\n              selectors: {\n                '.ms-DetailsRow-cell': {\n                  color: semanticColors.buttonTextHovered,\n                },\n              },\n            },\n            ':focus': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n            },\n            ':focus:hover': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n            },\n          },\n        },\n      ],\n      isSelected && [\n        {\n          backgroundColor: extendedSemanticColors.listItemBackgroundSelected,\n          textDecoration: extendedSemanticColors.listUnderline,\n          selectors: {\n            ':hover': {\n              background: semanticColors.listItemBackgroundHovered,\n              selectors: {\n                '.ms-DetailsRow-cell': {\n                  color: semanticColors.buttonTextHovered,\n                },\n              },\n            },\n            ':focus': {\n              backgroundColor: extendedSemanticColors.listItemBackgroundSelected,\n            },\n            ':focus:hover': {\n              background: semanticColors.listItemBackgroundHovered,\n            },\n          },\n        },\n      ],\n    ],\n    cell: [\n      {\n        color: semanticColors.listText,\n      },\n    ],\n  };\n};\n"]}