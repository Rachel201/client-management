{"version":3,"file":"Toggle.styles.js","sourceRoot":"../src/","sources":["azure/styles/Toggle.styles.ts"],"names":[],"mappings":";;;IAKa,QAAA,YAAY,GAAG,UAAC,KAAwB;QAC3C,IAAA,mBAAK,EAAE,yBAAQ,EAAE,uBAAO,CAAW;QACnC,IAAA,qCAAc,CAAW;QACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;QAEzE,OAAO;YACL,SAAS,EAAE,EAAE;YACb,IAAI,EAAE;gBACJ;oBACE,MAAM,EAAE,cAAc,CAAC,WAAW;oBAClC,eAAe,EAAE,cAAc,CAAC,cAAc;oBAC9C,SAAS,EAAE;wBACT,SAAS,EAAE;4BACT,eAAe,EAAE,sBAAsB,CAAC,6BAA6B;yBACtE;qBACF;iBACF;gBACD,OAAO,IAAI;oBACT,eAAe,EAAE,sBAAsB,CAAC,aAAa;oBACrD,SAAS,EAAE;wBACT,SAAS,EAAE;4BACT,eAAe,EAAE,sBAAsB,CAAC,2BAA2B;yBACpE;qBACF;iBACF;gBACD,QAAQ,IAAI;oBACV,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;oBAC/D,SAAS,EAAE;wBACT,SAAS,EAAE;4BACT,eAAe,EAAE,KAAG,sBAAsB,CAAC,uBAAyB;yBACrE;qBACF;iBACF;gBAED,CAAC,OAAO;oBACN,QAAQ,IAAI;oBACV,MAAM,EAAE,eAAa,sBAAsB,CAAC,6BAA6B,gBAAa;oBACtF,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;iBAChE;gBACH,QAAQ;oBACN,CAAC,OAAO,IAAI;oBACV,eAAe,EAAE,sBAAsB,CAAC,gCAAgC;oBACxE,SAAS,EAAE;wBACT,SAAS,EAAE;4BACT,eAAe,EAAE,sBAAsB,CAAC,gCAAgC;yBACzE;qBACF;iBACF;aACJ;YACD,gBAAgB;YAChB,KAAK,EAAE;gBACL;oBACE,eAAe,EAAE,sBAAsB,CAAC,qBAAqB;iBAC9D;gBACD,QAAQ,IAAI;oBACV,eAAe,EAAE,sBAAsB,CAAC,+BAA+B;iBACxE;gBACD,CAAC,OAAO,IAAI;oBACV,eAAe,EAAE,sBAAsB,CAAC,yBAAyB;iBAClE;gBACD,OAAO;oBACL,CAAC,QAAQ,IAAI;oBACX,eAAe,EAAE,wBAAU,CAAC,KAAK;iBAClC;gBACH,QAAQ;oBACN,CAAC,OAAO,IAAI;oBACV,eAAe,EAAE,sBAAsB,CAAC,iCAAiC;iBAC1E;aACJ;YACD,IAAI,EAAE;gBACJ;oBACE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;oBACrC,SAAS,EAAE;wBACT,sBAAsB,EAAE;4BACtB,KAAK,EAAE,cAAc,CAAC,QAAQ;yBAC/B;qBACF;iBACF;gBACD,QAAQ,IAAI;oBACV,SAAS,EAAE;wBACT,sBAAsB,EAAE;4BACtB,KAAK,EAAE,cAAc,CAAC,gBAAgB;yBACvC;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { IToggleStyleProps, IToggleStyles } from 'office-ui-fabric-react/lib/Toggle';\nimport { BaseColors } from '../AzureColors';\nimport * as StyleConstants from '../Constants';\n\nexport const ToggleStyles = (props: IToggleStyleProps): Partial<IToggleStyles> => {\n  const { theme, disabled, checked } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    container: {},\n    pill: [\n      {\n        height: StyleConstants.inputHeight,\n        backgroundColor: semanticColors.bodyBackground,\n        selectors: {\n          '&:hover': {\n            backgroundColor: extendedSemanticColors.radioButtonPillUncheckedHover,\n          },\n        },\n      },\n      checked && {\n        backgroundColor: extendedSemanticColors.controlAccent,\n        selectors: {\n          '&:hover': {\n            backgroundColor: extendedSemanticColors.radioButtonPillCheckedHover,\n          },\n        },\n      },\n      disabled && {\n        backgroundColor: extendedSemanticColors.radioButtonPillDisabled,\n        selectors: {\n          '&:hover': {\n            backgroundColor: `${extendedSemanticColors.radioButtonPillDisabled}`,\n          },\n        },\n      },\n\n      !checked &&\n        disabled && {\n          border: `1px solid ${extendedSemanticColors.radioButtonPillBorderDisabled} !important`,\n          backgroundColor: extendedSemanticColors.radioButtonPillDisabled,\n        },\n      disabled &&\n        !checked && {\n          backgroundColor: extendedSemanticColors.radioButtonPillUncheckedDisabled,\n          selectors: {\n            '&:hover': {\n              backgroundColor: extendedSemanticColors.radioButtonPillUncheckedDisabled,\n            },\n          },\n        },\n    ],\n    // toggle circle\n    thumb: [\n      {\n        backgroundColor: extendedSemanticColors.controlOutlineHovered,\n      },\n      disabled && {\n        backgroundColor: extendedSemanticColors.radioButtonThumbCheckedDisabled,\n      },\n      !checked && {\n        backgroundColor: extendedSemanticColors.radioButtonThumbUnchecked,\n      },\n      checked &&\n        !disabled && {\n          backgroundColor: BaseColors.WHITE,\n        },\n      disabled &&\n        !checked && {\n          backgroundColor: extendedSemanticColors.radioButtonThumbUncheckedDisabled,\n        },\n    ],\n    root: [\n      {\n        fontSize: theme.fonts.medium.fontSize,\n        selectors: {\n          '.ms-Toggle-stateText': {\n            color: semanticColors.bodyText,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          '.ms-Toggle-stateText': {\n            color: semanticColors.disabledBodyText,\n          },\n        },\n      },\n    ],\n  };\n};\n"]}