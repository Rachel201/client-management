{"version":3,"file":"DetailsList.styles.js","sourceRoot":"../src/","sources":["azure/styles/DetailsList.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckStyleProps, ICheckStyles } from 'office-ui-fabric-react/lib/Check';\nimport {\n  IDetailsRowStyleProps,\n  IDetailsRowStyles,\n  IDetailsListStyleProps,\n  IDetailsListStyles,\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { FontSizes } from '../AzureType';\nimport * as StyleConstants from '../Constants';\n\nexport const CheckStyles = (props: ICheckStyleProps): Partial<ICheckStyles> => {\n  const { theme, checked } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    circle: [\n      {\n        fontSize: 0,\n        paddingTop: 1,\n        paddingLeft: 1,\n        color: semanticColors.listBackground,\n        backgroundColor: semanticColors.listBackground,\n        borderColor: semanticColors.controlOutline,\n        borderWidth: StyleConstants.borderWidth,\n        borderStyle: StyleConstants.borderSolid,\n      },\n    ],\n    check: [\n      {\n        left: 2.5,\n        top: 1.5,\n      },\n      checked && {\n        color: semanticColors.inputText,\n      },\n      !checked && {\n        color: semanticColors.listBackground,\n      },\n    ],\n  };\n};\n\nexport const DetailsListStyles = (props: IDetailsListStyleProps): Partial<IDetailsListStyles> => {\n  const { theme } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      borderTop: StyleConstants.borderNone,\n    },\n    headerWrapper: {\n      selectors: {\n        '.ms-DetailsHeader': {\n          borderColor: extendedSemanticColors.rowBorder,\n          borderTop: StyleConstants.borderNone,\n          selectors: {\n            '.ms-DetailsHeader-cellTitle': {\n              backgroundColor: semanticColors.listBackground,\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.listBackground,\n              fontSize: FontSizes.size10,\n              fontWeight: 700,\n            },\n            ':hover .ms-DetailsHeader-cellTitle': {\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.variantBorder,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const DetailsRowStyles = (props: IDetailsRowStyleProps): Partial<IDetailsRowStyles> => {\n  const { theme, isSelected } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: [\n      {\n        borderColor: extendedSemanticColors.rowBorder,\n        color: semanticColors.listText,\n        fontSize: theme.fonts.medium.fontSize,\n      },\n      !isSelected && [\n        {\n          background: semanticColors.listBackground,\n          color: semanticColors.listText,\n          textDecoration: extendedSemanticColors.listUnderline,\n          selectors: {\n            ':hover': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n              textDecorationColor: semanticColors.buttonTextHovered,\n              selectors: {\n                '.ms-DetailsRow-cell': {\n                  color: semanticColors.buttonTextHovered,\n                },\n              },\n            },\n            ':focus': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n            },\n            ':focus:hover': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n            },\n          },\n        },\n      ],\n      isSelected && [\n        {\n          backgroundColor: extendedSemanticColors.listItemBackgroundSelected,\n          textDecoration: extendedSemanticColors.listUnderline,\n          selectors: {\n            ':hover': {\n              background: semanticColors.listItemBackgroundHovered,\n              selectors: {\n                '.ms-DetailsRow-cell': {\n                  color: semanticColors.buttonTextHovered,\n                },\n              },\n            },\n            ':focus': {\n              backgroundColor: extendedSemanticColors.listItemBackgroundSelected,\n            },\n            ':focus:hover': {\n              background: semanticColors.listItemBackgroundHovered,\n            },\n          },\n        },\n      ],\n    ],\n    cell: [\n      {\n        color: semanticColors.listText,\n      },\n    ],\n  };\n};\n"]}