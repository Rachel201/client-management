define(["require", "exports", "../Constants"], function (require, exports, StyleConstants) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextFieldStyles = function (props) {
        var focused = props.focused, disabled = props.disabled, hasErrorMessage = props.hasErrorMessage, multiline = props.multiline, theme = props.theme;
        var semanticColors = theme.semanticColors;
        var extendedSemanticColors = semanticColors;
        return {
            fieldGroup: [
                !multiline && {
                    height: StyleConstants.inputControlHeight,
                },
                !hasErrorMessage && {
                    borderColor: semanticColors.inputPlaceholderText,
                    selectors: {
                        '::after': {
                            borderColor: extendedSemanticColors.controlFocus,
                        },
                    },
                },
                !focused &&
                    !disabled && {
                    selectors: {
                        ':hover': {
                            borderColor: semanticColors.inputText,
                        },
                    },
                },
                focused && {
                    borderColor: semanticColors.focusBorder,
                },
                disabled && {
                    borderColor: extendedSemanticColors.textFieldBorderDisabled,
                    backgroundColor: semanticColors.primaryButtonBackgroundDisabled,
                },
                hasErrorMessage && [
                    {
                        borderWidth: StyleConstants.borderWidthError,
                    },
                    focused && {
                        borderColor: semanticColors.focusBorder,
                        selectors: {
                            '&:focus, &:hover': {
                                borderColor: semanticColors.focusBorder,
                            },
                        },
                    },
                ],
            ],
            icon: {
                bottom: 2,
            },
            prefix: {
                fontSize: theme.fonts.medium.fontSize,
            },
            suffix: {
                fontSize: theme.fonts.medium.fontSize,
            },
            field: [
                {
                    color: semanticColors.inputText,
                    backgroundColor: extendedSemanticColors.controlBackground,
                    fontSize: theme.fonts.medium.fontSize,
                    selectors: {
                        '::placeholder': {
                            color: semanticColors.inputPlaceholderText,
                        },
                        ':-ms-input-placeholder': {
                            color: semanticColors.inputPlaceholderText,
                        },
                        '::-webkit-input-placeholder': {
                            color: semanticColors.inputPlaceholderText,
                        },
                    },
                },
                disabled && {
                    color: semanticColors.primaryButtonTextDisabled,
                    backgroundColor: semanticColors.primaryButtonBackgroundDisabled,
                },
            ],
            errorMessage: {
                color: semanticColors.errorText,
            },
        };
    };
});
//# sourceMappingURL=TextField.styles.js.map