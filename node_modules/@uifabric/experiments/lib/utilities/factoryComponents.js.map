{"version":3,"file":"factoryComponents.js","sourceRoot":"../src/","sources":["utilities/factoryComponents.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,QAAQ,IAAI,cAAc,EAC1B,IAAI,IAAI,UAAU,EAClB,KAAK,IAAI,WAAW,GAKrB,MAAM,wBAAwB,CAAC;AAChC,6EAA6E;AAC7E,OAAO,EAAE,eAAe,IAAI,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AACtG,OAAO,EAAE,aAAa,EAAyC,MAAM,eAAe,CAAC;AAErF,mHAAmH;AACnH,mHAAmH;AACnH,0GAA0G;AAC1G,4BAA4B;AAC5B,sEAAsE;AACtE,wHAAwH;AACxH,kDAAkD;AAElD,qGAAqG;AACrG,yGAAyG;AACzG,iGAAiG;AACjG,mCAAmC;AAEnC,uHAAuH;AACvH,yDAAyD;AACzD,MAAM,CAAC,IAAM,QAAQ,GAAoD,UAAA,KAAK;IAC5E,OAAA,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAC,cAAc,eAAK,KAAK,EAAI,CAAC,CAAC,CAAC,IAAI;AAArD,CAAqD,CAAC;AACxD,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,IAAM,eAAe,GAAyC,aAAa,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;AACnH,QAAQ,CAAC,MAAM,GAAG,eAAe,CAAC;AAElC,MAAM,CAAC,IAAM,IAAI,GAAgD,UAAA,KAAK;IACpE,OAAA,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAC,UAAU,eAAK,KAAK,EAAI,CAAC,CAAC,CAAC,IAAI;AAAjD,CAAiD,CAAC;AACpD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;AAC1B,IAAM,WAAW,GAAqC,aAAa,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;AACvG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;AAE1B,MAAM,CAAC,IAAM,KAAK,GAAiD,UAAA,KAAK;IACtE,OAAA,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,oBAAC,WAAW,eAAK,KAAK,EAAI,CAAC,CAAC,CAAC,IAAI;AAA5E,CAA4E,CAAC;AAC/E,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC;AAC5B,IAAM,YAAY,GAAG,aAAa,CAAC,KAAK,CAAsC,CAAC;AAC/E,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;AAE5B,MAAM,CAAC,IAAM,eAAe;AAC1B,0GAA0G;AAC1G,+FAA+F;AAC/F,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,oBAAC,qBAAqB,eAAK,KAAK,EAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAA5E,CAA4E,CAAC;AACxF,eAAe,CAAC,WAAW,GAAG,iBAAiB,CAAC;AAChD,IAAM,sBAAsB,GAAgD,aAAa,CAAC,eAAe,EAAE;IACzG,WAAW,EAAE,UAAU;CACxB,CAAC,CAAC;AACH,eAAe,CAAC,MAAM,GAAG,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  FontIcon as FabricFontIcon,\n  Icon as FabricIcon,\n  Label as FabricLabel,\n  IFontIconProps,\n  IIconProps,\n  ILabelProps,\n  IPersonaPresenceProps,\n} from 'office-ui-fabric-react';\n// PersonaPresence is not exported by OUFR, so we have to import it directly.\nimport { PersonaPresence as FabricPersonaPresence } from 'office-ui-fabric-react/lib/PersonaPresence';\nimport { createFactory, ISlottableComponentType, ISlotFactory } from '../Foundation';\n\n// TODO: All contents of this file should be moved to each respective component as they are converted to use slots.\n// TODO: createFactory should no longer have to be explicitly called with component options containing defaultProp.\n//       (Consider adding a defaultProp option to styled so that createFactory can be internalized similar\n//       to createComponent)\n// TODO: displayName will also be covered by createComponent argument.\n// TODO: These components will also have to be modified not to generate rendered output if their props don't call for it\n//       to eliminate the wrapper functions below.\n\n// Generally to avoid a bunch of \"if slot prop exists\" checks in parent components, components should\n// make sure they have content to render based on their props. For example here, if Icon has no iconName,\n// it has no rendered content and returns null. This prevents Button.view from having to check to\n// see if its icon Slot is defined.\n\n// These wrappers will temporarily add a layer to the hierarchy (identified with displayName) until their functionality\n// can be absorbed into their respective OUFR components.\nexport const FontIcon: ISlottableComponentType<IFontIconProps, string> = props =>\n  props.iconName ? <FabricFontIcon {...props} /> : null;\nFontIcon.displayName = 'FontIcon';\nconst fontIconFactory: ISlotFactory<IFontIconProps, string> = createFactory(FontIcon, { defaultProp: 'iconName' });\nFontIcon.create = fontIconFactory;\n\nexport const Icon: ISlottableComponentType<IIconProps, string> = props =>\n  props.iconName ? <FabricIcon {...props} /> : null;\nIcon.displayName = 'Icon';\nconst iconFactory: ISlotFactory<IIconProps, string> = createFactory(Icon, { defaultProp: 'iconName' });\nIcon.create = iconFactory;\n\nexport const Label: ISlottableComponentType<ILabelProps, string> = props =>\n  React.Children.count(props.children) > 0 ? <FabricLabel {...props} /> : null;\nLabel.displayName = 'Label';\nconst labelFactory = createFactory(Label) as ISlotFactory<ILabelProps, string>;\nLabel.create = labelFactory;\n\nexport const PersonaPresence: ISlottableComponentType<IPersonaPresenceProps, number> =\n  // TODO: This is a bug in PersonaPresence that needs to be fixed. 'presence' prop comment mentions that it\n  // won't render if presence is undefined, but it does render. Check for undefined here for now.\n  props => (props.presence !== undefined ? <FabricPersonaPresence {...props} /> : null);\nPersonaPresence.displayName = 'PersonaPresence';\nconst personaPresenceFactory: ISlotFactory<IPersonaPresenceProps, number> = createFactory(PersonaPresence, {\n  defaultProp: 'presence',\n});\nPersonaPresence.create = personaPresenceFactory;\n"]}