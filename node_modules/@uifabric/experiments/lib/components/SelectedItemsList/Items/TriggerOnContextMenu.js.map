{"version":3,"file":"TriggerOnContextMenu.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/Items/TriggerOnContextMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,qFAAqF;AACrF,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAgB,aAAyD;IAC3G,OAAO,UAAC,KAAsB;QACpB,IAAA,2BAAS,CAAW;QAC5B,6EAA6E;QAC7E,IAAM,OAAO,GAAG,KAAK,CAAC,WAAW,CAC/B,UAAA,CAAC;;YACC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,MAAA,SAAS,4CAAK;QAChB,CAAC,EACD,CAAC,SAAS,CAAC,CACZ,CAAC;QACF,OAAO,oBAAC,aAAa,eAAK,KAAK,IAAE,aAAa,EAAE,OAAO,IAAI,CAAC;IAC9D,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { TriggerProps } from './ItemTrigger.types';\nimport { ISelectedItemProps } from '../SelectedItemsList.types';\n\n// `extends any` to trick the parser into parsing as a type decl instead of a jsx tag\nexport const TriggerOnContextMenu = <T extends any>(ItemComponent: React.ComponentType<ISelectedItemProps<T>>) => {\n  return (props: TriggerProps<T>) => {\n    const { onTrigger } = props;\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- this is a component\n    const trigger = React.useCallback(\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onTrigger?.();\n      },\n      [onTrigger],\n    );\n    return <ItemComponent {...props} onContextMenu={trigger} />;\n  };\n};\n"]}