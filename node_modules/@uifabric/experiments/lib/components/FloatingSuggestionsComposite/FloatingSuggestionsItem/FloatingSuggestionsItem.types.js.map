{"version":3,"file":"FloatingSuggestionsItem.types.js","sourceRoot":"../src/","sources":["components/FloatingSuggestionsComposite/FloatingSuggestionsItem/FloatingSuggestionsItem.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { ITheme, IStyle } from '@uifabric/styling';\n\nexport interface IFloatingSuggestionItemProps<T> {\n  item: T;\n  isSelected: boolean;\n  onClick?: (ev: React.MouseEvent<HTMLElement>, item: IFloatingSuggestionItemProps<T>) => void;\n  onRemoveItem?: (ev: React.MouseEvent<HTMLElement>, item: IFloatingSuggestionItemProps<T>) => void;\n  displayText?: string;\n  className?: string;\n  /**\n   * Takes precedence over showSuggestionRemoveButton\n   */\n  showRemoveButton?: boolean;\n  ariaLabel?: string;\n  removeButtonAriaLabel?: string;\n  key?: string;\n  id?: string;\n  theme?: ITheme;\n  onRenderSuggestion?: (renderProps: IFloatingSuggestionOnRenderItemProps<T>) => JSX.Element;\n}\n\nexport type IFloatingSuggestionItem<T> = Omit<\n  IFloatingSuggestionItemProps<T>,\n  'onRenderSuggestion' | 'onClick' | 'onRemoveItem' | 'theme'\n>;\n\nexport type IFloatingSuggestionOnClickItemProps<T> = Pick<\n  IFloatingSuggestionItemProps<T>,\n  'item' | 'isSelected' | 'key' | 'id'\n>;\n\nexport type IFloatingSuggestionOnRenderItemProps<T> = Omit<IFloatingSuggestionItemProps<T>, 'onRenderSuggestion'>;\n\nexport interface IFloatingSuggestionItemStylesProps {\n  isSelected?: boolean;\n}\n\nexport interface IFloatingSuggestionItemStyles {\n  root: IStyle;\n  itemButton: IStyle;\n  closeButton: IStyle;\n  displayText: IStyle;\n}\n"]}