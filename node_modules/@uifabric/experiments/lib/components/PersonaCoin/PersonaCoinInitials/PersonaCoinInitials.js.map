{"version":3,"file":"PersonaCoinInitials.js","sourceRoot":"../src/","sources":["components/PersonaCoin/PersonaCoinInitials/PersonaCoinInitials.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAGpD,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAczD,MAAM,CAAC,IAAM,mBAAmB,GAAuD,UAAA,KAAK;IAC1F,IAAM,QAAQ,GACZ,CAAC,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC;QACtD,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAE9D,IAAI,QAAQ,EAAE;QACZ,OAAO,oBAAC,IAAI,IAAC,SAAS,EAAE,KAAK,CAAC,SAAS,IAAG,QAAQ,CAAQ,CAAC;KAC5D;IAED,OAAO,oBAAC,IAAI,IAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,EAAE,KAAK,CAAC,SAAS,GAAI,CAAC;AACjE,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Icon, Text } from 'office-ui-fabric-react';\nimport { ISlotProp } from '../../../Foundation';\nimport { IPersonaCoinProps } from '../PersonaCoin.types';\nimport { getInitials, getRTL } from '../../../Utilities';\n\nexport type IPersonaCoinInitialsSlot = ISlotProp<IPersonaCoinInitialsProps, string>;\n\n// TODO: Have Markus verify... className props was required, but I'm not sure if it should be.\n// If it is truly required, it seems the parent component should be ensuring that default values are\n// provided and not assume the consumer of the slot will provide them.\nexport interface IPersonaCoinInitialsProps {\n  initials: IPersonaCoinProps['initials'];\n  text: IPersonaCoinProps['text'];\n  allowPhoneInitials: IPersonaCoinProps['allowPhoneInitials'];\n  className?: string;\n}\n\nexport const PersonaCoinInitials: React.FunctionComponent<IPersonaCoinInitialsProps> = props => {\n  const initials =\n    (typeof props.initials === 'string' && props.initials) ||\n    getInitials(props.text, getRTL(), props.allowPhoneInitials);\n\n  if (initials) {\n    return <Text className={props.className}>{initials}</Text>;\n  }\n\n  return <Icon iconName=\"Contact\" className={props.className} />;\n};\n"]}