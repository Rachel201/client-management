{"version":3,"file":"PersonaCoin.types.js","sourceRoot":"../src/","sources":["components/PersonaCoin/PersonaCoin.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ImageLoadState, IBaseProps } from 'office-ui-fabric-react';\nimport { IComponentStyles, IHTMLSlot, ISlotProp, IComponent, IStyleableComponentProps } from '../../Foundation';\nimport { IPersonaPresenceSlot } from '../../utilities/factoryComponents.types';\nimport { IPersonaCoinImageSlot } from './PersonaCoinImage/PersonaCoinImage.types';\nimport { IPersonaCoinSize10Slot } from './PersonaCoinSize10/PersonaCoinSize10';\nimport { IPersonaCoinInitialsSlot } from './PersonaCoinInitials/PersonaCoinInitials';\n\nexport type IPersonaCoinComponent = IComponent<\n  IPersonaCoinProps,\n  IPersonaCoinTokens,\n  IPersonaCoinStyles,\n  IPersonaCoinViewProps\n>;\n\n// These types are redundant with IPersonaCoinComponent but are needed until TS function\n// return widening issue is resolved:\n// https://github.com/Microsoft/TypeScript/issues/241\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\nexport type IPersonaCoinTokenReturnType = ReturnType<Extract<IPersonaCoinComponent['tokens'], Function>>;\nexport type IPersonaCoinStylesReturnType = ReturnType<Extract<IPersonaCoinComponent['styles'], Function>>;\n\nexport type IPersonaCoinSlot = ISlotProp<IPersonaCoinProps, string>;\n\nexport interface IPersonaCoinSlots {\n  /**\n   * Slot for the root element.\n   */\n  root?: IHTMLSlot;\n\n  /**\n   * Slot for the image element\n   */\n  image?: IPersonaCoinImageSlot;\n\n  /**\n   * Slot for the initials element\n   */\n  initials?: IPersonaCoinInitialsSlot;\n\n  /**\n   * Slot for the presence element\n   */\n  presence?: IPersonaPresenceSlot;\n  /**\n   * Slot for the alternative coin for the smallest persona size\n   */\n  personaCoinSize10?: IPersonaCoinSize10Slot;\n}\n\nexport type PersonaCoinSize = 10 | 16 | 24 | 28 | 32 | 40 | 48 | 56 | 72 | 100;\n\n// Extending IStyleableComponentProps will automatically add stylable props for you, such as styles and theme.\n//    If you don't want these props to be included in your component, just remove this extension.\nexport interface IPersonaCoinProps\n  extends IPersonaCoinSlots,\n    IStyleableComponentProps<IPersonaCoinProps, IPersonaCoinTokens, IPersonaCoinStyles>,\n    IBaseProps<IPersonaCoinComponent> {\n  /**\n   * Whether initials are calculated for phone numbers and number sequences.\n   * Example: Set property to true to get initials for project names consisting of numbers only.\n   * @defaultvalue false\n   */\n  allowPhoneInitials?: boolean;\n\n  /**\n   * The color that should be used when rendering the coin.\n   */\n  coinColor?: string;\n\n  /**\n   * This will be used to extract initials from if `initials` is not passed.\n   */\n  text?: string;\n\n  /**\n   * Size of the coin\n   * @defaultvalue 48\n   */\n  size?: PersonaCoinSize;\n\n  /**\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\n   */\n  imageUrl?: string;\n\n  /**\n   * If true, adds the css class 'is-fadeIn' to the image.\n   * @defaultvalue true\n   */\n  imageShouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables imageShouldFadeIn.\n   * @defaultvalue true\n   */\n  imageShouldStartVisible?: boolean;\n\n  /**\n   * Alt text for the image to use. Defaults to an empty string.\n   */\n  imageAlt?: string;\n\n  /**\n   * Optional callback for when loading state of the photo changes\n   */\n  onPhotoLoadingStateChange?: (newImageLoadState: ImageLoadState) => void;\n\n  /**\n   * The color of the user's initials that are displayed.\n   * @defaultvalue 'white'\n   */\n  initialsColor?: string;\n}\n\nexport interface IPersonaCoinViewProps extends IPersonaCoinProps {\n  isPictureLoaded?: boolean;\n}\n\nexport interface IPersonaCoinTokens {}\n\nexport type IPersonaCoinStyles = IComponentStyles<IPersonaCoinSlots>;\n"]}