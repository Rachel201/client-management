{"version":3,"file":"CollapsibleSection.types.js","sourceRoot":"../src/","sources":["components/CollapsibleSection/CollapsibleSection.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IComponent, IComponentStyles, IHTMLSlot, ISlottableProps, IStyleableComponentProps } from '../../Foundation';\nimport { IBaseProps, IRefObject } from '../../Utilities';\nimport { ICollapsibleSectionTitleSlot } from './CollapsibleSectionTitle.types';\n\nexport type ICollapsibleSectionComponent = IComponent<\n  ICollapsibleSectionProps,\n  ICollapsibleSectionTokens,\n  ICollapsibleSectionStyles,\n  ICollapsibleSectionViewProps\n>;\n\n// These types are redundant with ICollapsibleSectionComponent but are needed until TS function return widening issue\n// is resolved: https://github.com/Microsoft/TypeScript/issues/241\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\nexport type ICollapsibleSectionTokenReturnType = ReturnType<Extract<ICollapsibleSectionComponent['tokens'], Function>>;\nexport type ICollapsibleSectionStylesReturnType = ReturnType<Extract<ICollapsibleSectionComponent['styles'], Function>>;\n\nexport interface ICollapsibleSectionSlots {\n  root?: IHTMLSlot;\n  title?: ICollapsibleSectionTitleSlot;\n  body?: IHTMLSlot;\n}\n\nexport interface ICollapsibleSection {}\n\nexport interface ICollapsibleSectionProps\n  extends ISlottableProps<ICollapsibleSectionSlots>,\n    IStyleableComponentProps<ICollapsibleSectionViewProps, ICollapsibleSectionStyles, ICollapsibleSectionTokens>,\n    IBaseProps<ICollapsibleSection> {\n  /**\n   * Default and initial collapsed state if collapsed prop is not provided.\n   * @default true\n   */\n  defaultCollapsed?: boolean;\n\n  /**\n   * Collapsed state. If provided, component is controlled.\n   * @default defaultCollapsed\n   */\n  collapsed?: boolean;\n\n  indent?: number;\n}\n\nexport interface ICollapsibleSectionViewProps extends ICollapsibleSectionProps {\n  /**\n   * Optional callback to access the Title element interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  titleElementRef?: IRefObject<HTMLButtonElement>;\n\n  /**\n   * Toggle input callback triggered by mouse and keyboard input.\n   */\n  onClick?: (ev: React.MouseEvent<Element>) => void;\n\n  /**\n   * Key down callback for root element of CollapsibleSection.\n   */\n  onRootKeyDown?: (ev: React.KeyboardEvent<Element>) => void;\n\n  /**\n   * Key down callback for CollapsibleSection title.\n   */\n  onKeyDown?: (ev: React.KeyboardEvent<Element>) => void;\n}\n\nexport interface ICollapsibleSectionTokens {}\n\nexport type ICollapsibleSectionStyles = IComponentStyles<ICollapsibleSectionSlots>;\n"]}