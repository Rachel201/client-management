{"version":3,"file":"ActionButton.js","sourceRoot":"../src/","sources":["components/Button/ButtonVariants/ActionButton.tsx"],"names":[],"mappings":"AACA,uEAAuE;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,wCAAwC,CAAC;AAElE,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,cAAc,IAAI,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAC1D,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAUhD,OAAO,EAAE,WAAW,IAAI,KAAK,EAAE,UAAU,IAAI,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAE1E,4CAA4C;AAE5C,IAAM,UAAU,GAA+B,UAAC,KAAK,EAAE,KAAK;IAClD,IAAA,uBAAO,EAAE,uBAAO,EAAE,qCAAc,CAAW;IAEnD,OAAO;QACL,eAAe,EAAE,aAAa;QAC9B,sBAAsB,EAAE,aAAa;QACrC,sBAAsB,EAAE,aAAa;QACrC,WAAW,EAAE,aAAa;QAC1B,kBAAkB,EAAE,aAAa;QACjC,kBAAkB,EAAE,aAAa;QACjC,YAAY,EAAE,OAAO,CAAC,cAAc;QACpC,WAAW,EAAE,OAAO;QACpB,WAAW,EAAE,CAAC;QACd,WAAW,EAAE,CAAC;QACd,KAAK,EAAE,cAAc,CAAC,UAAU;QAChC,YAAY,EAAE,OAAO,CAAC,YAAY;QAClC,YAAY,EAAE,OAAO,CAAC,KAAK;QAC3B,cAAc,EAAE,SAAS;QACzB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,MAAM;QACd,uBAAuB,EAAE,aAAa;QACtC,8BAA8B,EAAE,aAAa;QAC7C,8BAA8B,EAAE,aAAa;QAC7C,wBAAwB,EAAE,WAAW;QACrC,wBAAwB,EAAE,WAAW;QACrC,4BAA4B,EAAE,WAAW;QACzC,4BAA4B,EAAE,WAAW;QACzC,SAAS,EAAE,cAAc,CAAC,UAAU;QACpC,gBAAgB,EAAE,OAAO,CAAC,YAAY;QACtC,gBAAgB,EAAE,OAAO,CAAC,KAAK;QAC/B,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,GAAG;QACb,UAAU,EAAE,WAAW,CAAC,OAAO;KAChC,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,cAAc,GAA+B,UAAC,KAAK,EAAE,KAAK;IACtD,IAAA,qCAAc,CAAW;IAEjC,OAAO;QACL,KAAK,EAAE,cAAc,CAAC,kBAAkB;QACxC,YAAY,EAAE,cAAc,CAAC,kBAAkB;QAC/C,YAAY,EAAE,cAAc,CAAC,kBAAkB;QAC/C,MAAM,EAAE,SAAS;QACjB,iBAAiB,EAAE,UAAU;QAC7B,wBAAwB,EAAE,UAAU;QACpC,wBAAwB,EAAE,UAAU;QACpC,qBAAqB,EAAE,UAAU;QACjC,4BAA4B,EAAE,UAAU;QACxC,4BAA4B,EAAE,UAAU;QACxC,SAAS,EAAE,cAAc,CAAC,kBAAkB;QAC5C,gBAAgB,EAAE,cAAc,CAAC,kBAAkB;QACnD,gBAAgB,EAAE,cAAc,CAAC,kBAAkB;KACpD,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAA+B,UAAC,KAAK,EAAE,KAAK,IAA6B,OAAA;IAC/F,UAAU;IACV,KAAK,CAAC,QAAQ,IAAI,cAAc;CACjC,EAHgG,CAGhG,CAAC;AAEF,IAAM,kBAAkB,GAA+B,UAAC,KAAK,EAAE,KAAK,EAAE,MAAM;IAC1E,IAAM,aAAa,GAAI,YAIrB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAEzB,OAAO;QACL,IAAI,EAAE;YACJ,aAAa,CAAC,IAAI;YAClB;gBACE,cAAc,EAAE,YAAY;aAC7B;SACF;QACD,OAAO,EAAE,aAAa,CAAC,OAAO;QAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;KACzB,CAAC;AACJ,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,IAAM,YAAY,GAA0C,QAAQ,CAAC;IAC1E,WAAW,EAAE,cAAc;IAC3B,KAAK,OAAA;IACL,KAAK,OAAA;IACL,MAAM,EAAE,kBAAkB;IAC1B,MAAM,EAAE,kBAAkB;IAC1B,IAAI,MAAA;CACL,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n// Temporary import file to experiment with next version of foundation.\nimport { composed } from '@uifabric/foundation/lib/next/composed';\nimport { IComponentStyles, IStylesFunction } from '@uifabric/foundation';\nimport { FontWeights } from '../../../Styling';\nimport { useButtonState as state } from '../Button.state';\nimport { ButtonStyles } from '../Button.styles';\nimport {\n  IButtonComponent,\n  IButtonProps,\n  IButtonSlots,\n  IButtonStylesReturnType,\n  IButtonTokenReturnType,\n  IButtonTokens,\n  IButtonViewProps,\n} from '../Button.types';\nimport { ButtonSlots as slots, ButtonView as view } from '../Button.view';\n\n/* eslint-disable deprecation/deprecation */\n\nconst baseTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { effects, palette, semanticColors } = theme;\n\n  return {\n    backgroundColor: 'transparent',\n    backgroundColorHovered: 'transparent',\n    backgroundColorPressed: 'transparent',\n    borderColor: 'transparent',\n    borderColorHovered: 'transparent',\n    borderColorPressed: 'transparent',\n    borderRadius: effects.roundedCorner2,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    childrenGap: 8,\n    color: semanticColors.buttonText,\n    colorHovered: palette.themePrimary,\n    colorPressed: palette.black,\n    contentPadding: '0px 8px',\n    cursor: 'pointer',\n    height: '40px',\n    highContrastBorderColor: 'transparent',\n    highContrastBorderColorHovered: 'transparent',\n    highContrastBorderColorPressed: 'transparent',\n    highContrastColorHovered: 'Highlight',\n    highContrastColorPressed: 'Highlight',\n    highContrastIconColorHovered: 'Highlight',\n    highContrastIconColorPressed: 'Highlight',\n    iconColor: semanticColors.buttonText,\n    iconColorHovered: palette.themePrimary,\n    iconColorPressed: palette.black,\n    iconSize: 16,\n    minWidth: 100,\n    textWeight: FontWeights.regular,\n  };\n};\n\nconst disabledTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n\n  return {\n    color: semanticColors.buttonTextDisabled,\n    colorHovered: semanticColors.buttonTextDisabled,\n    colorPressed: semanticColors.buttonTextDisabled,\n    cursor: 'default',\n    highContrastColor: 'GrayText',\n    highContrastColorHovered: 'GrayText',\n    highContrastColorPressed: 'GrayText',\n    highContrastIconColor: 'GrayText',\n    highContrastIconColorHovered: 'GrayText',\n    highContrastIconColorPressed: 'GrayText',\n    iconColor: semanticColors.buttonTextDisabled,\n    iconColorHovered: semanticColors.buttonTextDisabled,\n    iconColorPressed: semanticColors.buttonTextDisabled,\n  };\n};\n\nconst ActionButtonTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => [\n  baseTokens,\n  props.disabled && disabledTokens,\n];\n\nconst ActionButtonStyles: IButtonComponent['styles'] = (props, theme, tokens): IButtonStylesReturnType => {\n  const regularStyles = (ButtonStyles as IStylesFunction<\n    IButtonViewProps,\n    IButtonTokens,\n    IComponentStyles<IButtonSlots>\n  >)(props, theme, tokens);\n\n  return {\n    root: [\n      regularStyles.root,\n      {\n        justifyContent: 'flex-start',\n      },\n    ],\n    content: regularStyles.content,\n    icon: regularStyles.icon,\n  };\n};\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n */\nexport const ActionButton: React.FunctionComponent<IButtonProps> = composed({\n  displayName: 'ActionButton',\n  slots,\n  state,\n  styles: ActionButtonStyles,\n  tokens: ActionButtonTokens,\n  view,\n});\n"]}