{"version":3,"file":"MenuButton.state.js","sourceRoot":"../src/","sources":["components/Button/MenuButton/MenuButton.state.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAG9C,4CAA4C;AAE5C,kBAAkB;AAClB,MAAM,CAAC,IAAM,kBAAkB,GAAkC,UAAA,KAAK;IACpE,IAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAA2B,IAAI,CAAC,CAAC;IAC7D,IAAA;;;MAGJ,EAHK,gBAAQ,EAAE,mBAGf,CAAC;IAEK,IAAA,yBAAQ,EAAE,uBAAO,EAAE,2BAAS,EAAE,mCAAa,CAAW;IAE9D,IAAM,cAAc,GAAG,KAAK,CAAC,WAAW,CAAC;QACvC,aAAa,IAAI,aAAa,EAAE,CAAC;QACjC,WAAW,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC,CAAC;IAEjC,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAChC,UAAC,EAA4E;QAC3E,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,EAAE,CAAC,CAAC;gBAEZ,IAAI,EAAE,CAAC,gBAAgB,EAAE;oBACvB,OAAO;iBACR;aACF;YACD,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;SACxB;IACH,CAAC,EACD,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,CAAC,CAC3C,CAAC;IAEF,IAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAClC,UAAC,EAA+E;QAC9E,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,SAAS,EAAE;gBACb,SAAS,CAAC,EAAE,CAAC,CAAC;gBAEd,IAAI,EAAE,CAAC,gBAAgB,EAAE;oBACvB,OAAO;iBACR;aACF;YAED,IAAI,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,KAAK,QAAQ,CAAC,IAAI,EAAE;gBAC7D,WAAW,CAAC,IAAI,CAAC,CAAC;aACnB;SACF;IACH,CAAC,EACD,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CACnC,CAAC;IAEF,IAAM,SAAS,yBACV,KAAK,KACR,QAAQ,UAAA,EACR,OAAO,EAAE,QAAQ,EACjB,SAAS,EAAE,UAAU,EACrB,aAAa,EAAE,cAAc,EAC7B,aAAa,eAAA,GACd,CAAC;IAEF,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { useControlledState } from '../../../Foundation';\nimport { KeyCodes } from '../../../Utilities';\nimport { IMenuButtonComponent, IMenuButtonViewProps } from './MenuButton.types';\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated */\nexport const useMenuButtonState: IMenuButtonComponent['state'] = props => {\n  const menuButtonRef = React.useRef<HTMLButtonElement | null>(null);\n  const [expanded, setExpanded] = useControlledState(props, 'expanded', {\n    defaultPropName: 'defaultExpanded',\n    defaultPropValue: false,\n  });\n\n  const { disabled, onClick, onKeyDown, onMenuDismiss } = props;\n\n  const _onMenuDismiss = React.useCallback(() => {\n    onMenuDismiss && onMenuDismiss();\n    setExpanded(false);\n  }, [onMenuDismiss, setExpanded]);\n\n  const _onClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement>) => {\n      if (!disabled) {\n        if (onClick) {\n          onClick(ev);\n\n          if (ev.defaultPrevented) {\n            return;\n          }\n        }\n        setExpanded(!expanded);\n      }\n    },\n    [disabled, expanded, onClick, setExpanded],\n  );\n\n  const _onKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement>) => {\n      if (!disabled) {\n        if (onKeyDown) {\n          onKeyDown(ev);\n\n          if (ev.defaultPrevented) {\n            return;\n          }\n        }\n\n        if ((ev.altKey || ev.metaKey) && ev.keyCode === KeyCodes.down) {\n          setExpanded(true);\n        }\n      }\n    },\n    [disabled, onKeyDown, setExpanded],\n  );\n\n  const viewProps: IMenuButtonViewProps = {\n    ...props,\n    expanded,\n    onClick: _onClick,\n    onKeyDown: _onKeyDown,\n    onMenuDismiss: _onMenuDismiss,\n    menuButtonRef,\n  };\n\n  return viewProps;\n};\n"]}