{"version":3,"file":"Button.view.js","sourceRoot":"../src/","sources":["components/Button/Button.view.tsx"],"names":[],"mappings":";AAEA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,cAAc,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACrF,OAAO,EAAE,QAAQ,EAAE,MAAM,mCAAmC,CAAC;AAI7D,4CAA4C;AAE5C,kBAAkB;AAClB,MAAM,CAAC,IAAM,WAAW,GAA8B,UAAA,KAAK,IAAI,OAAA,CAAC;IAC9D,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ;IACjC,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,IAAI;CACd,CAAC,EAJ6D,CAI7D,CAAC;AAEH,kBAAkB;AAClB,MAAM,CAAC,IAAM,UAAU,GAA6B,UAAC,KAAK,EAAE,KAAK;IAE7D,IAAA,iBAAI,EACJ,uBAAO,EACP,yBAAQ,EACR,yBAAQ,EACR,uBAAO,EACP,6CAAkB,EAClB,2BAAS,EACT,+BAAW,EACX,2BAAS,EACT,2IAAO,CACC;IAEJ,IAAA,2BAAqD,EAAnD,sBAAQ,EAAE,kCAAyC,CAAC;IAE5D,IAAM,WAAW,gBAAQ,cAAc,CAAgD,IAAI,EAAE,cAAc,CAAC,CAAE,CAAC;IAE/G,IAAM,QAAQ,GAAG,UAAC,EAA4E;QAC5F,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;YACxB,OAAO,CAAC,EAAE,CAAC,CAAC;YAEZ,IAAI,EAAE,CAAC,gBAAgB,EAAE;gBACvB,OAAO;aACR;SACF;IACH,CAAC,CAAC;IAEF,IAAM,MAAM,GAAG,UAAC,gBAAsB,IAAkB,OAAA,CACtD,UAAC,KAAK,CAAC,IAAI,aACT,IAAI,EAAE,QAAQ,EACd,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,QAAQ,IACb,WAAW,EACX,gBAAgB,IACpB,QAAQ,EAAE,QAAQ,IAAI,CAAC,kBAAkB,mBAC1B,QAAQ,EACvB,QAAQ,EAAE,CAAC,QAAQ,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,gBAC7C,SAAS,EACrB,GAAG,EAAE,SAAS;QAEb,IAAI,IAAI,UAAC,KAAK,CAAC,IAAI,OAAG;QACtB,OAAO,IAAI,UAAC,KAAK,CAAC,OAAO,OAAG;QAC5B,QAAQ,CACE,CACd,EAjBuD,CAiBvD,CAAC;IAEF,OAAO,WAAW,CAAC,CAAC,CAAC,CACnB,UAAC,UAAU,IAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,IAAI,CAAC,kBAAkB,IAC5E,UAAC,gBAAqB,IAAkB,OAAA,MAAM,CAAC,gBAAgB,CAAC,EAAxB,CAAwB,CACtD,CACd,CAAC,CAAC,CAAC,CACF,MAAM,EAAE,CACT,CAAC;AACJ,CAAC,CAAC;AAOF,SAAS,eAAe,CAAC,KAAuB;IAC9C,OAAO,KAAK,CAAC,IAAI;QACf,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,gBAAgB,EAAE;QACxD,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,gBAAgB,EAAE,CAAC;AAC/D,CAAC","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { Text, KeytipData } from 'office-ui-fabric-react';\nimport { withSlots } from '../../Foundation';\nimport { getNativeProps, anchorProperties, buttonProperties } from '../../Utilities';\nimport { FontIcon } from '../../utilities/factoryComponents';\n\nimport { IButtonComponent, IButtonViewProps } from './Button.types';\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated */\nexport const ButtonSlots: IButtonComponent['slots'] = props => ({\n  root: props.href ? 'a' : 'button',\n  icon: FontIcon,\n  content: Text,\n});\n\n/** @deprecated */\nexport const ButtonView: IButtonComponent['view'] = (props, slots) => {\n  const {\n    icon,\n    content,\n    children,\n    disabled,\n    onClick,\n    allowDisabledFocus,\n    ariaLabel,\n    keytipProps,\n    buttonRef,\n    ...rest\n  } = props;\n\n  const { htmlType, propertiesType } = _deriveRootType(props);\n\n  const buttonProps = { ...getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(rest, propertiesType) };\n\n  const _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement>) => {\n    if (!disabled && onClick) {\n      onClick(ev);\n\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n  };\n\n  const Button = (keytipAttributes?: any): JSX.Element => (\n    <slots.root\n      type={htmlType}\n      role=\"button\"\n      onClick={_onClick}\n      {...buttonProps}\n      {...keytipAttributes}\n      disabled={disabled && !allowDisabledFocus}\n      aria-disabled={disabled}\n      tabIndex={!disabled || allowDisabledFocus ? 0 : undefined}\n      aria-label={ariaLabel}\n      ref={buttonRef}\n    >\n      {icon && <slots.icon />}\n      {content && <slots.content />}\n      {children}\n    </slots.root>\n  );\n\n  return keytipProps ? (\n    <KeytipData keytipProps={keytipProps} disabled={disabled && !allowDisabledFocus}>\n      {(keytipAttributes: any): JSX.Element => Button(keytipAttributes)}\n    </KeytipData>\n  ) : (\n    Button()\n  );\n};\n\ninterface IButtonRootType {\n  htmlType: 'link' | 'button';\n  propertiesType: string[] | Record<string, number>;\n}\n\nfunction _deriveRootType(props: IButtonViewProps): IButtonRootType {\n  return props.href\n    ? { htmlType: 'link', propertiesType: anchorProperties }\n    : { htmlType: 'button', propertiesType: buttonProperties };\n}\n"]}