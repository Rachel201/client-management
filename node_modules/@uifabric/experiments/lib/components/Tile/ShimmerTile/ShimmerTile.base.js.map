{"version":3,"file":"ShimmerTile.base.js","sourceRoot":"../src/","sources":["components/Tile/ShimmerTile/ShimmerTile.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, classNamesFunction } from '../../../Utilities';\nimport { IShimmerTileProps, IShimmerTileStyleProps, IShimmerTileStyles } from './ShimmerTile.types';\nimport { TileSize } from '../Tile.types';\nimport { TileLayoutSizes } from '../Tile';\nimport { ShimmerGap, ShimmerElementsGroup, ShimmerElementType } from 'office-ui-fabric-react/lib/Shimmer';\n\nconst ShimmerTileLayoutValues = {\n  largeSquareWidth: 96,\n  largeSquareHeight: 96,\n  largeNameWidth: 144,\n  largeNameHeight: 7,\n  largeActivityWidth: 96,\n  largeActivityHeight: 7,\n  smallSquareWidth: 62,\n  smallSquareHeight: 61,\n  smallNameWidth: 106,\n  smallNameHeight: 5,\n  smallActivityWidth: 62,\n  smallActivityHeight: 5,\n};\n\nconst PLACEHOLDER_SIZES: {\n  [P in TileSize]: {\n    squareWidth: number;\n    squareHeight: number;\n    nameWidth: number;\n    nameHeight: number;\n    activityWidth: number;\n    activityHeight: number;\n  };\n} = {\n  small: {\n    squareWidth: ShimmerTileLayoutValues.smallSquareWidth,\n    squareHeight: ShimmerTileLayoutValues.smallSquareHeight,\n    nameWidth: ShimmerTileLayoutValues.smallNameWidth,\n    nameHeight: ShimmerTileLayoutValues.smallNameHeight,\n    activityWidth: ShimmerTileLayoutValues.smallActivityWidth,\n    activityHeight: ShimmerTileLayoutValues.smallActivityHeight,\n  },\n  large: {\n    squareWidth: ShimmerTileLayoutValues.largeSquareWidth,\n    squareHeight: ShimmerTileLayoutValues.largeSquareHeight,\n    nameWidth: ShimmerTileLayoutValues.largeNameWidth,\n    nameHeight: ShimmerTileLayoutValues.largeNameHeight,\n    activityWidth: ShimmerTileLayoutValues.largeActivityWidth,\n    activityHeight: ShimmerTileLayoutValues.largeActivityHeight,\n  },\n};\n\nconst getClassNames = classNamesFunction<IShimmerTileStyleProps, IShimmerTileStyles>();\n\nexport class ShimmerTileBase extends React.Component<IShimmerTileProps, {}> {\n  private _classNames: { [key in keyof IShimmerTileStyles]: string };\n\n  constructor(props: IShimmerTileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      styles,\n      contentSize = { width: 176, height: 171 },\n      itemActivity = true,\n      itemName = true,\n      itemThumbnail = true,\n      tileSize = 'large',\n    } = this.props;\n\n    const { nameplatePadding, nameplateMargin, nameplateActivityHeight, nameplateNameHeight } = TileLayoutSizes[\n      tileSize\n    ];\n\n    const { squareWidth, squareHeight, nameWidth, nameHeight, activityWidth, activityHeight } = PLACEHOLDER_SIZES[\n      tileSize\n    ];\n\n    let nameplateHeight = 0;\n\n    if (itemName || itemActivity) {\n      nameplateHeight += nameplatePadding * 2;\n      if (itemName) {\n        nameplateHeight += nameplateNameHeight;\n      }\n      if (itemActivity) {\n        nameplateHeight += nameplateActivityHeight + nameplateMargin;\n      }\n    }\n\n    this._classNames = getClassNames(styles!, {});\n\n    return (\n      <div className={this._classNames.root}>\n        <ShimmerGap width={contentSize.width} height={contentSize.height - squareHeight - nameplateHeight} />\n        <ShimmerElementsGroup\n          shimmerElements={[\n            {\n              type: ShimmerElementType.gap,\n              width: (contentSize.width - squareWidth) / 2,\n              height: squareHeight,\n            },\n            itemThumbnail\n              ? {\n                  type: ShimmerElementType.line,\n                  width: squareWidth,\n                  height: squareHeight,\n                }\n              : {\n                  type: ShimmerElementType.gap,\n                  width: squareWidth,\n                  height: squareHeight,\n                },\n            {\n              type: ShimmerElementType.gap,\n              width: (contentSize.width - squareWidth) / 2,\n              height: squareHeight,\n            },\n          ]}\n        />\n        {itemActivity || itemName ? (\n          <div>\n            <ShimmerGap width={contentSize.width} height={nameplatePadding} />\n            {itemName ? (\n              <ShimmerElementsGroup\n                shimmerElements={[\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - nameWidth) / 2,\n                    height: nameplateNameHeight,\n                  },\n                  {\n                    type: ShimmerElementType.line,\n                    width: nameWidth,\n                    height: nameHeight,\n                  },\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - nameWidth) / 2,\n                    height: nameplateNameHeight,\n                  },\n                ]}\n              />\n            ) : null}\n            {itemActivity ? (\n              <ShimmerElementsGroup\n                shimmerElements={[\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - activityWidth) / 2,\n                    height: nameplateActivityHeight,\n                  },\n                  {\n                    type: ShimmerElementType.line,\n                    width: activityWidth,\n                    height: activityHeight,\n                  },\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - activityWidth) / 2,\n                    height: nameplateActivityHeight,\n                  },\n                ]}\n              />\n            ) : null}\n            <ShimmerGap width={contentSize.width} height={nameplatePadding} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]}