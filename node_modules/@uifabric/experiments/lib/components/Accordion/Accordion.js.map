{"version":3,"file":"Accordion.js","sourceRoot":"../src/","sources":["components/Accordion/Accordion.tsx"],"names":[],"mappings":";AAAA,qBAAqB;AACrB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,kBAAkB,EAA4B,MAAM,0BAA0B,CAAC;AAExF,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAE5C,IAAM,iBAAiB,GAAI,CAAC,UAAC,kBAAkB,OAAG,CAAkD,CAAC,IAAI,CAAC;AAE1G,IAAM,aAAa,GAAgC,UAAA,KAAK;IAC9C,IAAA,mCAAa,CAAW;IAEhC,IAAM,QAAQ,GAA0C,KAAK,CAAC,QAAQ,CAAC,GAAG,CACxE,KAAK,CAAC,QAAQ,EACd,UAAC,KAAmD,EAAE,KAAa;QACjE,IAAM,gBAAgB,GAA6B;YACjD,gBAAgB,EAAE,aAAa;SAChC,CAAC;QAEF,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,EAAE;YACpC,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,wBAC1B,gBAAgB,GAChB,KAAK,CAAC,KAAK,EACd,CAAC;SACJ;QAED,OAAO,UAAC,kBAAkB,eAAK,gBAAgB;;YAAI,KAAK;gBAAuB,CAAC;IAClF,CAAC,CACF,CAAC;IAEF,IAAM,KAAK,GAAG,QAAQ,CAA4C,KAAK,EAAE;QACvE,IAAI,EAAE,KAAK;KACZ,CAAC,CAAC;IAEH,OAAO,UAAC,KAAK,CAAC,IAAI,QAAE,QAAQ,CAAc,CAAC;AAC7C,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG;IACvB,IAAI,EAAE,kBAAkB;IACxB,YAAY,EAAE,EAAE;CACjB,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAElB,eAAe,CAAC,aAAa,EAAE;IACjC,WAAW,EAAE,WAAW;IACxB,MAAM,QAAA;IACN,OAAO,EAAE,gBAAgB;CAC1B,CAAC,CAAC;AAEH,eAAe,SAAS,CAAC","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, getSlots } from '../../Foundation';\nimport { createComponent } from '../../Foundation';\nimport { CollapsibleSection, ICollapsibleSectionProps } from '../../CollapsibleSection';\nimport { IAccordionComponent, IAccordionProps, IAccordionSlots } from './Accordion.types';\nimport { styles } from './Accordion.styles';\n\nconst AccordionItemType = ((<CollapsibleSection />) as React.ReactElement<ICollapsibleSectionProps>).type;\n\nconst AccordionView: IAccordionComponent['view'] = props => {\n  const { collapseItems } = props;\n\n  const children: React.ReactChild[] | undefined | null = React.Children.map(\n    props.children,\n    (child: React.ReactElement<ICollapsibleSectionProps>, index: number) => {\n      const defaultItemProps: ICollapsibleSectionProps = {\n        defaultCollapsed: collapseItems,\n      };\n\n      if (child.type === AccordionItemType) {\n        return React.cloneElement(child, {\n          ...defaultItemProps,\n          ...child.props,\n        });\n      }\n\n      return <CollapsibleSection {...defaultItemProps}> {child} </CollapsibleSection>;\n    },\n  );\n\n  const Slots = getSlots<ICollapsibleSectionProps, IAccordionSlots>(props, {\n    root: 'div',\n  });\n\n  return <Slots.root>{children}</Slots.root>;\n};\n\nconst AccordionStatics = {\n  Item: CollapsibleSection,\n  defaultProps: {},\n};\n\nexport const Accordion: React.FunctionComponent<IAccordionProps> & {\n  Item: React.FunctionComponent<ICollapsibleSectionProps>;\n} = createComponent(AccordionView, {\n  displayName: 'Accordion',\n  styles,\n  statics: AccordionStatics,\n});\n\nexport default Accordion;\n"]}