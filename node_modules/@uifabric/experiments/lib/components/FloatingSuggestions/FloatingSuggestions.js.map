{"version":3,"file":"FloatingSuggestions.js","sourceRoot":"../src/","sources":["components/FloatingSuggestions/FloatingSuggestions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as styles from './FloatingSuggestions.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from 'office-ui-fabric-react/lib/Utilities';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport {\n  IFloatingSuggestions,\n  IFloatingSuggestionsProps,\n  IFloatingSuggestionsInnerSuggestionProps,\n} from './FloatingSuggestions.types';\nimport { ISuggestionModel } from 'office-ui-fabric-react/lib/Pickers';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\n\nexport interface IFloatingSuggestionsState {\n  queryString: string;\n  suggestionsVisible?: boolean;\n  didBind: boolean;\n}\n\nexport class FloatingSuggestions<TItem>\n  extends React.Component<IFloatingSuggestionsProps<TItem>, IFloatingSuggestionsState>\n  implements IFloatingSuggestions<TItem> {\n  private root = React.createRef<HTMLDivElement>();\n  private suggestionStore: SuggestionsStore<TItem>;\n  private suggestionsControl: React.RefObject<SuggestionsControl<TItem>> = React.createRef();\n  private currentPromise: PromiseLike<TItem[]>;\n  private isComponentMounted: boolean = false;\n  private _async: Async;\n\n  constructor(basePickerProps: IFloatingSuggestionsProps<TItem>) {\n    super(basePickerProps);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.suggestionStore = basePickerProps.suggestionsStore;\n    this.state = {\n      queryString: '',\n      didBind: false,\n    };\n  }\n\n  // TODO FloatingSuggestions should not be responsible for getting the\n  // input text.\n  public get inputText(): string {\n    return this.state.queryString;\n  }\n\n  public get suggestions(): ISuggestionModel<TItem>[] {\n    return this.suggestionStore.suggestions;\n  }\n\n  public forceResolveSuggestion(): void {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.onCurrentlySelectedSuggestionChosen();\n    } else {\n      this._validateAndInsertCurrentQueryString();\n    }\n  }\n\n  public get currentSelectedSuggestionIndex(): number {\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n  }\n\n  public get isSuggestionsShown(): boolean {\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n  }\n\n  public onQueryStringChanged = (queryString: string): void => {\n    if (queryString !== this.state.queryString) {\n      this.setState({\n        queryString: queryString,\n      });\n\n      if (this.props.onInputChanged) {\n        this.props.onInputChanged(queryString);\n      }\n\n      this.updateValue(queryString);\n    }\n  };\n\n  public hidePicker = (): void => {\n    if (this.props.onSuggestionsHidden && this.isSuggestionsShown) {\n      this.props.onSuggestionsHidden();\n    }\n\n    this.setState({\n      suggestionsVisible: false,\n    });\n  };\n\n  public showPicker = (updateValue: boolean = false): void => {\n    if (this.props.onSuggestionsShown && !this.isSuggestionsShown) {\n      this.props.onSuggestionsShown();\n    }\n\n    this.setState({\n      suggestionsVisible: true,\n    });\n\n    // Update the suggestions if updateValue == true\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\n    if (updateValue) {\n      this.updateValue(value);\n    }\n  };\n\n  public componentDidMount(): void {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(): void {\n    this._bindToInputElement();\n  }\n\n  public componentWillUnmount(): void {\n    this._unbindFromInputElement();\n    this.isComponentMounted = false;\n    this._async.dispose();\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: IFloatingSuggestionsProps<TItem>): void {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  }\n\n  public onCurrentlySelectedSuggestionChosen = (): void => {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this._onSuggestionSelected(this.suggestionsControl.current.currentSuggestion!.item);\n    }\n  };\n\n  public updateSuggestions(suggestions: TItem[], forceUpdate: boolean = false): void {\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    return (\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\n        {this._renderSuggestions()}\n      </div>\n    );\n  }\n\n  public updateValue(updatedValue: string): void {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  }\n\n  public updateSuggestionWithZeroState(): void {\n    if (this.props.onZeroQuerySuggestion) {\n      const suggestions: TItem[] | PromiseLike<TItem[]> | null = this.props.onZeroQuerySuggestion();\n      this.updateSuggestionsList(suggestions || []);\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  public updateSuggestionsList(suggestions: TItem[] | PromiseLike<TItem[]>): void {\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestions)) {\n      this.updateSuggestions(suggestions, true /*forceUpdate*/);\n    } else if (suggestions && suggestions.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      const promise: PromiseLike<TItem[]> = (this.currentPromise = suggestions);\n      promise.then((newSuggestions: TItem[]) => {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise === this.currentPromise && this.isComponentMounted) {\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  }\n\n  private _renderSuggestions(): JSX.Element | null {\n    // Express this as 2 separate statements instead of a single one, because `undefined` isn't filtered out of the type\n    // when using `|| SuggestionsControl`\n    let TypedSuggestionsControl: React.ComponentType<IFloatingSuggestionsInnerSuggestionProps<TItem>> | undefined = this\n      .props.onRenderSuggestionControl;\n    if (TypedSuggestionsControl === undefined) {\n      TypedSuggestionsControl = SuggestionsControl;\n    }\n\n    return this.state.suggestionsVisible ? (\n      <Callout\n        className={styles.callout}\n        isBeakVisible={false}\n        gapSpace={5}\n        target={this.props.inputElement}\n        onDismiss={this.hidePicker}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\n      >\n        <TypedSuggestionsControl\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\n          onSuggestionClick={this._onSuggestionClick}\n          onSuggestionRemove={this._onSuggestionRemove}\n          suggestions={this.suggestionStore.getSuggestions()}\n          componentRef={this.suggestionsControl}\n          onCurrentlySelectedSuggestionChosen={this.onCurrentlySelectedSuggestionChosen}\n          shouldLoopSelection={false}\n        />\n      </Callout>\n    ) : null;\n  }\n\n  private _onSuggestionSelected(item: TItem): void {\n    if (this.props.onSuggestionSelected) {\n      this.props.onSuggestionSelected(item);\n    }\n  }\n\n  private _onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: TItem, index: number): void => {\n    this._onSuggestionSelected(item);\n    this._updateSuggestionsVisible(false /*shouldShow*/);\n  };\n\n  private _onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: TItem, index: number): void => {\n    if (this.props.onRemoveSuggestion) {\n      this.props.onRemoveSuggestion(item);\n    }\n\n    if (this.suggestionsControl.current) {\n      this.suggestionsControl.current.removeSuggestion(index);\n    }\n  };\n\n  private _onKeyDown = (ev: MouseEvent): void => {\n    if (\n      !this.state.suggestionsVisible ||\n      (this.props.inputElement && ev.target instanceof Node && !this.props.inputElement.contains(ev.target))\n    ) {\n      return;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        this.hidePicker();\n        ev.preventDefault();\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (\n          !ev.shiftKey &&\n          !ev.ctrlKey &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.handleKeyDown(keyCode)\n        ) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          // no selection. Try to force resolve the current query\n          this._validateAndInsertCurrentQueryString();\n        }\n        break;\n\n      case KeyCodes.del:\n        if (\n          this.props.onRemoveSuggestion &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.hasSuggestionSelected &&\n          this.suggestionsControl.current.currentSuggestion &&\n          ev.shiftKey\n        ) {\n          this.props.onRemoveSuggestion(this.suggestionsControl.current.currentSuggestion!.item);\n\n          this.suggestionsControl.current.removeSuggestion();\n          this.forceUpdate();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.up:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n    }\n  };\n\n  private _updateActiveDescendant(): void {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId);\n      }\n    }\n  }\n\n  private _onResolveSuggestions(updatedValue: string): void {\n    const suggestions: TItem[] | PromiseLike<TItem[]> | null = this.props.onResolveSuggestions(updatedValue);\n\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  }\n\n  private _validateAndInsertCurrentQueryString = (): void => {\n    if (this.state.queryString && this.props.isQueryForceResolveable && this.props.createForceResolvedItem) {\n      const isForceResolvable: boolean = this.props.isQueryForceResolveable(this.state.queryString);\n      if (!isForceResolvable) {\n        return;\n      }\n\n      const itemToConvert: ISuggestionModel<TItem> = this.props.createForceResolvedItem(this.state.queryString);\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n      this._onSuggestionSelected(convertedItems[0].item);\n    }\n  };\n\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  private _bindToInputElement(): void {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this._onKeyDown);\n      this.setState({ didBind: true });\n    }\n  }\n\n  private _unbindFromInputElement(): void {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this._onKeyDown);\n      this.setState({ didBind: false });\n    }\n  }\n}\n"]}