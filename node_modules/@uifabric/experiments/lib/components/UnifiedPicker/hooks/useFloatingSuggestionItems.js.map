{"version":3,"file":"useFloatingSuggestionItems.js","sourceRoot":"../src/","sources":["components/UnifiedPicker/hooks/useFloatingSuggestionItems.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IFloatingSuggestionsHeaderFooterProps } from '../../FloatingSuggestionsComposite/FloatingSuggestionsHeaderFooterItem/FloatingSuggestionsHeaderFooterItem.types';\n\nexport interface IUseFloatingSuggestionItems<T> {\n  focusItemIndex: number;\n  setFocusItemIndex: React.Dispatch<React.SetStateAction<number>>;\n  suggestionItems: T[];\n  setSuggestionItems: React.Dispatch<React.SetStateAction<T[]>>;\n  footerItemIndex: number;\n  setfooterItemIndex: React.Dispatch<React.SetStateAction<number>>;\n  footerItems: IFloatingSuggestionsHeaderFooterProps[];\n  setFooterItems: React.Dispatch<React.SetStateAction<IFloatingSuggestionsHeaderFooterProps[]>>;\n  headerItemIndex: number;\n  setHeaderItemIndex: React.Dispatch<React.SetStateAction<number>>;\n  headerItems: IFloatingSuggestionsHeaderFooterProps[];\n  setHeaderItems: React.Dispatch<React.SetStateAction<IFloatingSuggestionsHeaderFooterProps[]>>;\n  isSuggestionsShown: boolean;\n  showPicker: (show: boolean) => void;\n  selectNextSuggestion: () => void;\n  selectPreviousSuggestion: () => void;\n  getFocusedSuggestion: () => T;\n  hasSuggestionSelected: () => void;\n  removeSuggestion: (index: number) => void;\n  clearPickerSelectedIndex: () => void;\n  queryString: string;\n  setQueryString: (queryString: string) => void;\n}\n\nexport const useFloatingSuggestionItems = <T extends {}>(\n  floatingSuggestionItems: T[],\n  footerSuggestionItems?: IFloatingSuggestionsHeaderFooterProps[],\n  headerSuggestionItems?: IFloatingSuggestionsHeaderFooterProps[],\n  focusSuggestionIndex?: number,\n  focusFooterIndex?: number,\n  focusHeaderIndex?: number,\n  isSuggestionsVisible?: boolean,\n  initialQueryString?: string,\n) => {\n  const [focusItemIndex, setFocusItemIndex] = React.useState(focusSuggestionIndex || -1);\n  const [suggestionItems, setSuggestionItems] = React.useState(floatingSuggestionItems);\n  const [footerItemIndex, setFooterItemIndex] = React.useState(focusFooterIndex || -1);\n  const [footerItems, setFooterItems] = React.useState(footerSuggestionItems);\n  const [headerItemIndex, setHeaderItemIndex] = React.useState(focusHeaderIndex || -1);\n  const [headerItems, setHeaderItems] = React.useState(headerSuggestionItems);\n  const [isSuggestionsShown, setIsSuggestionsShown] = React.useState(isSuggestionsVisible || false);\n  const [queryString, setQueryString] = React.useState(initialQueryString || '');\n\n  React.useEffect(() => {\n    setSuggestionItems(floatingSuggestionItems);\n    // If we have a query string and suggestions, set the first one as selected\n    if (queryString !== '' && floatingSuggestionItems && floatingSuggestionItems.length > 0) {\n      setFocusItemIndex(0);\n      setHeaderItemIndex(-1);\n      setFooterItemIndex(-1);\n    }\n    // Otherwise clear the selection\n    else {\n      clearPickerSelectedIndex();\n    }\n  }, [floatingSuggestionItems, queryString]);\n\n  const headerFooterItemsHaveExecute = (items: IFloatingSuggestionsHeaderFooterProps[]): boolean => {\n    let haveExecute = false;\n    items!.forEach(item => {\n      if (item.onExecute !== undefined) {\n        haveExecute = true;\n      }\n    });\n    return haveExecute;\n  };\n\n  const hasSelectableFooters = footerItems ? headerFooterItemsHaveExecute(footerItems) : false;\n  const hasSelectableHeaders = headerItems ? headerFooterItemsHaveExecute(headerItems) : false;\n\n  const getNextSelectableHeaderOrFooter = (\n    items: IFloatingSuggestionsHeaderFooterProps[],\n    itemIndex: number,\n  ): number => {\n    let nextIndex = -1;\n    if (items) {\n      let i = itemIndex + 1;\n      while (i < items.length) {\n        if (items[i].onExecute && items[i].shouldShow()) {\n          nextIndex = i;\n          i = items.length;\n        }\n        i++;\n      }\n    }\n    return nextIndex;\n  };\n\n  const getPreviousSelectableHeaderOrFooter = (\n    items: IFloatingSuggestionsHeaderFooterProps[],\n    itemIndex: number,\n  ): number => {\n    let nextIndex = -1;\n    if (items) {\n      let i = itemIndex !== -1 ? itemIndex - 1 : items.length - 1;\n      while (i > -1) {\n        if (items[i].onExecute && items[i].shouldShow()) {\n          nextIndex = i;\n          i = -1;\n        }\n        i--;\n      }\n    }\n    return nextIndex;\n  };\n\n  const showPicker = (show: boolean) => {\n    clearPickerSelectedIndex();\n    setIsSuggestionsShown(show);\n  };\n\n  const selectNextSuggestion = (): void => {\n    // We're currently selected on a header\n    if (headerItemIndex > -1) {\n      // First, try and find another header\n      const nextHeaderIndex = getNextSelectableHeaderOrFooter(headerItems!, headerItemIndex);\n      if (nextHeaderIndex !== -1) {\n        setHeaderItemIndex(nextHeaderIndex);\n      } else {\n        // select the first suggestion item\n        setHeaderItemIndex(-1);\n        if (suggestionItems && suggestionItems.length > 0) {\n          // select the first suggestion item\n          setFocusItemIndex(0);\n        } else if (hasSelectableFooters) {\n          setFooterItemIndex(getNextSelectableHeaderOrFooter(footerItems!, footerItemIndex));\n        }\n      }\n    }\n    // We're currently selected on a selected item\n    else if (focusItemIndex > -1) {\n      // If we're at the end of the list\n      if (focusItemIndex === suggestionItems.length - 1) {\n        if (hasSelectableFooters) {\n          setFooterItemIndex(getNextSelectableHeaderOrFooter(footerItems!, footerItemIndex));\n          setFocusItemIndex(-1);\n        } else if (hasSelectableHeaders) {\n          setHeaderItemIndex(getNextSelectableHeaderOrFooter(headerItems!, headerItemIndex));\n          setFocusItemIndex(-1);\n        } else {\n          setFocusItemIndex(0);\n        }\n      } else {\n        setFocusItemIndex(focusItemIndex + 1);\n      }\n    }\n    // We're currently selected on a footer\n    else if (footerItemIndex > -1) {\n      // First, try and find another footer\n      const nextFooterIndex = getNextSelectableHeaderOrFooter(footerItems!, footerItemIndex);\n      if (nextFooterIndex !== -1) {\n        setFooterItemIndex(nextFooterIndex);\n      } else {\n        setFooterItemIndex(-1);\n        if (hasSelectableHeaders) {\n          setHeaderItemIndex(getNextSelectableHeaderOrFooter(headerItems!, headerItemIndex));\n        } else if (suggestionItems && suggestionItems.length > 0) {\n          // select the first suggestion item\n          setFocusItemIndex(0);\n        }\n      }\n    }\n    // else, we have no items selected, so select the first one available\n    else {\n      if (hasSelectableHeaders) {\n        setHeaderItemIndex(getNextSelectableHeaderOrFooter(headerItems!, headerItemIndex));\n      } else if (suggestionItems && suggestionItems.length > 0) {\n        // select the first suggestion item\n        setFocusItemIndex(0);\n      } else if (hasSelectableFooters) {\n        setFooterItemIndex(getNextSelectableHeaderOrFooter(footerItems!, footerItemIndex));\n      }\n      // else, we stay in the state with nothing selected\n    }\n  };\n\n  const selectPreviousSuggestion = (): void => {\n    // We're currently selected on a footer\n    if (footerItemIndex > -1) {\n      // First, try and find another footer\n      const previousFooterIndex = getPreviousSelectableHeaderOrFooter(footerItems!, footerItemIndex);\n      if (previousFooterIndex !== -1) {\n        setFooterItemIndex(previousFooterIndex);\n      } else {\n        setFooterItemIndex(-1);\n        if (suggestionItems && suggestionItems.length > 0) {\n          // select the first suggestion item\n          setFocusItemIndex(suggestionItems.length - 1);\n        } else if (hasSelectableHeaders) {\n          setHeaderItemIndex(getPreviousSelectableHeaderOrFooter(headerItems!, headerItemIndex));\n        }\n      }\n    }\n    // We're currently selected on a selected item\n    else if (focusItemIndex > -1) {\n      // If we're at the beginning of the list\n      if (focusItemIndex === 0) {\n        setFocusItemIndex(-1);\n        if (hasSelectableHeaders) {\n          setHeaderItemIndex(getPreviousSelectableHeaderOrFooter(headerItems!, headerItemIndex));\n        } else if (hasSelectableFooters) {\n          setFooterItemIndex(getPreviousSelectableHeaderOrFooter(footerItems!, footerItemIndex));\n        } else {\n          setFocusItemIndex(suggestionItems.length - 1);\n        }\n      } else {\n        setFocusItemIndex(focusItemIndex - 1);\n      }\n    }\n    // We're currently selected on a header\n    else if (headerItemIndex > -1) {\n      // First, try and find another header\n      const nextHeaderIndex = getPreviousSelectableHeaderOrFooter(headerItems!, headerItemIndex);\n      if (nextHeaderIndex !== -1) {\n        setHeaderItemIndex(nextHeaderIndex);\n      } else {\n        // select the first suggestion item\n        setHeaderItemIndex(-1);\n        if (hasSelectableFooters) {\n          setFooterItemIndex(getPreviousSelectableHeaderOrFooter(footerItems!, footerItemIndex));\n        } else if (suggestionItems && suggestionItems.length > 0) {\n          // select the first suggestion item\n          setFocusItemIndex(suggestionItems.length - 1);\n        }\n      }\n    }\n    // else, we have no items selected, so select the last one available\n    else {\n      if (hasSelectableFooters) {\n        setFooterItemIndex(getPreviousSelectableHeaderOrFooter(footerItems!, footerItemIndex));\n      } else if (suggestionItems && suggestionItems.length > 0) {\n        // select the last suggestion item\n        setFocusItemIndex(suggestionItems.length - 1);\n      } else if (hasSelectableHeaders) {\n        setHeaderItemIndex(getPreviousSelectableHeaderOrFooter(headerItems!, headerItemIndex));\n      }\n      // else, we stay in the state with nothing selected\n    }\n  };\n\n  const getFocusedSuggestion = (): T => {\n    return suggestionItems[focusItemIndex];\n  };\n\n  const hasSuggestionSelected = (): boolean => {\n    return focusItemIndex !== -1 && focusItemIndex < suggestionItems.length;\n  };\n\n  const removeSuggestion = (index: number): void => {\n    const currentSuggestions = [...suggestionItems];\n    const updatedSuggestions = currentSuggestions.splice(index, 1);\n    setSuggestionItems(updatedSuggestions);\n  };\n\n  const clearPickerSelectedIndex = (): void => {\n    setFocusItemIndex(-1);\n    setFooterItemIndex(-1);\n    setHeaderItemIndex(-1);\n  };\n\n  return {\n    focusItemIndex: focusItemIndex,\n    setFocusItemIndex: setFocusItemIndex,\n    suggestionItems: suggestionItems,\n    setSuggestionItems: setSuggestionItems,\n    footerItemIndex: footerItemIndex,\n    setFooterItemIndex: setFooterItemIndex,\n    footerItems: footerItems,\n    setFooterItems: setFooterItems,\n    headerItemIndex: headerItemIndex,\n    setHeaderItemIndex: setHeaderItemIndex,\n    headerItems: headerItems,\n    setHeaderItems: setHeaderItems,\n    isSuggestionsShown: isSuggestionsShown,\n    showPicker: showPicker,\n    selectNextSuggestion: selectNextSuggestion,\n    selectPreviousSuggestion: selectPreviousSuggestion,\n    getFocusedSuggestion: getFocusedSuggestion,\n    hasSuggestionSelected: hasSuggestionSelected,\n    removeSuggestion: removeSuggestion,\n    clearPickerSelectedIndex: clearPickerSelectedIndex,\n    queryString: queryString,\n    setQueryString: setQueryString,\n  };\n};\n"]}