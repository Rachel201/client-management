{"version":3,"file":"Pagination.types.js","sourceRoot":"../src/","sources":["components/Pagination/Pagination.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunctionOrObject, IRefObject, IRenderFunction } from '../../Utilities';\nimport { IIconProps } from 'office-ui-fabric-react/lib/Icon';\n\nexport interface IPaginationProps {\n  /**\n   * The total number of pages.\n   */\n  pageCount: number;\n  /**\n   * Items per page\n   */\n  itemsPerPage?: number;\n  /**\n   * total number of items\n   */\n  totalItemCount?: number;\n  /**\n   * Selected page index\n   * @default 0\n   */\n  selectedPageIndex?: number;\n  /**\n   * Icon prop for the first page button\n   */\n  firstPageIconProps?: IIconProps;\n  /**\n   * Icon prop for the previous page button\n   */\n  previousPageIconProps?: IIconProps;\n  /**\n   * Icon prop for the next page button\n   */\n  nextPageIconProps?: IIconProps;\n  /**\n   * Icon prop for the last page button\n   */\n  lastPageIconProps?: IIconProps;\n  /**\n   * aria label for the first page button\n   */\n  firstPageAriaLabel?: string;\n  /**\n   * aria label for the previous page button\n   */\n  previousPageAriaLabel?: string;\n  /**\n   * aria label for the next page button\n   */\n  nextPageAriaLabel?: string;\n  /**\n   * aria label for the last page button\n   */\n  lastPageAriaLabel?: string;\n  /**\n   * aria label for the page. This should be a simple string such as 'page' in corresponding localized language.\n   */\n  pageAriaLabel?: string;\n  /**\n   * aria label for the selected page. e.g. 'selected', 'page selected'\n   */\n  selectedAriaLabel?: string;\n  /**\n   * call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IPaginationStyleProps, IPaginationStyles>;\n  /**\n   * Gets ref to component interface\n   */\n  componentRef?: IRefObject<{}>;\n  /**\n   * theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n  /**\n   * the aria label of combo box\n   */\n  comboBoxAriaLabel?: string;\n  /**\n   * format of the pagination control\n   * @default PaginationFormat.buttons\n   */\n  format?: PaginationFormat;\n  /**\n   * number of visible buttons. This is only applicable for @param comboBox\n   */\n  numberOfPageButton?: number;\n  /**\n   * The string object\n   */\n  strings?: IPaginationString;\n  /**\n   * the call back function to load another page in the table. This needs to be defined in the parent component.\n   */\n  onPageChange?: (index: number) => void;\n  /**\n   * provide a render function for the visible item label if localization of this string is needed.\n   */\n  onRenderVisibleItemLabel?: IRenderFunction<IPaginationProps>;\n}\n\nexport type PaginationFormat = 'comboBox' | 'buttons';\n\nexport interface IPaginationString {\n  /**\n   * the divider between the 'from item index' and the 'to item index', e.g. '-'\n   **/\n  divider?: string;\n  /**\n   *  the string for 'of', e.g. 'of'\n   **/\n  of?: string;\n}\n\nexport interface IPaginationStyleProps {\n  theme: ITheme;\n  /**\n   * format of the pagination control\n   * @default PaginationFormat.comboBox\n   */\n  format?: PaginationFormat;\n}\n\nexport interface IPaginationStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n  /**\n   * Style for the Combo Box.\n   */\n  comboBox: IStyle;\n  /**\n   * Style for the page number.\n   */\n  pageNumber: IStyle;\n  /**\n   * Style for the previous, next, first, last page buttons.\n   */\n  previousNextPage: IStyle;\n  /**\n   * Style for the previous, next, first, last page buttons when they are disabled.\n   */\n  previousNextPageDisabled: IStyle;\n  /**\n   * Style for the visible item label.\n   */\n  visibleItemLabel: IStyle;\n}\n"]}