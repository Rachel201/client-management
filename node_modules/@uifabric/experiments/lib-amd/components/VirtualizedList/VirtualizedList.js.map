{"version":3,"file":"VirtualizedList.js","sourceRoot":"../src/","sources":["components/VirtualizedList/VirtualizedList.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IVirtualizedListProps } from './VirtualizedList.types';\nimport { IScrollContainerContext, ScrollContainerContextTypes } from '../../utilities/scrolling/ScrollContainer';\nimport { IObjectWithKey } from 'office-ui-fabric-react/lib/Selection';\nimport { getParent, css, initializeComponentRef, EventGroup } from 'office-ui-fabric-react/lib/Utilities';\n\ninterface IRange {\n  /** Start of range */\n  start: number;\n\n  /** Exclusive end of range */\n  end: number;\n}\n\nfunction isInRange(range: IRange, index: number): boolean {\n  return range.start <= index && index < range.end;\n}\n\nexport interface IVirtualizedListState {\n  viewportHeight: number;\n\n  items: React.ReactNode[];\n}\n\nexport class VirtualizedList<TItem extends IObjectWithKey> extends React.Component<\n  IVirtualizedListProps<TItem>,\n  IVirtualizedListState\n> {\n  public static contextTypes: typeof ScrollContainerContextTypes = ScrollContainerContextTypes;\n  public context: IScrollContainerContext;\n\n  private _root = React.createRef<HTMLDivElement>();\n\n  private _spacerElements: { [key: string]: HTMLElement } = {};\n\n  private _focusedIndex: number;\n\n  private _events: EventGroup;\n\n  constructor(props: IVirtualizedListProps<TItem>, context: IScrollContainerContext) {\n    super(props, context);\n\n    this._events = new EventGroup(this);\n    initializeComponentRef(this);\n\n    this._focusedIndex = -1;\n\n    const {\n      // Start with the window height if not passed in props, this does not cause layout\n      initialViewportHeight = window.innerHeight,\n    } = this.props;\n\n    this.state = {\n      viewportHeight: initialViewportHeight,\n      items: this._renderItems(0, initialViewportHeight),\n    };\n  }\n\n  public componentDidMount(): void {\n    if (this._root.current) {\n      this._events.on(this._root.current, 'focus', this._onFocus, true);\n    }\n\n    this.context.scrollContainer.registerVisibleCallback((scrollTop: number) => {\n      this._render(scrollTop);\n    });\n\n    this._updateObservedElements();\n  }\n\n  public componentDidUpdate(): void {\n    this._updateObservedElements();\n  }\n\n  public componentWillUnmount(): void {\n    this._events.dispose();\n  }\n\n  public UNSAFE_componentWillUpdate(): void {\n    for (const key of Object.keys(this._spacerElements)) {\n      const ref = this._spacerElements[key];\n      this.context.scrollContainer.unobserve(ref);\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    const { items } = this.state;\n\n    return (\n      <div className={css('ms-VirtualizedList', className)} ref={this._root}>\n        {items}\n      </div>\n    );\n  }\n\n  private _updateObservedElements(): void {\n    // (Re-)register with the observer after every update, so we'll get an intersection event immediately if one of\n    // the spacer elements is visible right now.\n    for (const key of Object.keys(this._spacerElements)) {\n      const ref = this._spacerElements[key];\n      this.context.scrollContainer.observe(ref);\n    }\n  }\n\n  private _renderItems(scrollTop: number, viewportHeight: number): (JSX.Element | null)[] {\n    const { itemHeight, items, itemOverdraw = 2 } = this.props;\n\n    const ranges: IRange[] = [];\n\n    // Calculate visible range\n    const startIndex = Math.floor(Math.max(scrollTop / itemHeight - itemOverdraw, 0));\n    const endIndex = Math.floor(Math.min(startIndex + itemOverdraw * 2 + viewportHeight / itemHeight, items.length));\n\n    const visibleRange = {\n      start: startIndex,\n      end: endIndex,\n    };\n\n    ranges.push(visibleRange);\n\n    // Focused item\n    if (this._focusedIndex !== -1 && !isInRange(visibleRange, this._focusedIndex)) {\n      const focusRange: IRange = {\n        start: this._focusedIndex,\n        end: this._focusedIndex + 1,\n      };\n\n      if (this._focusedIndex < visibleRange.start) {\n        ranges.unshift(focusRange);\n      } else {\n        ranges.push(focusRange);\n      }\n    }\n\n    return this._renderRanges(ranges);\n  }\n\n  private _renderRanges(ranges: IRange[]): (JSX.Element | null)[] {\n    const { items, onRenderItem } = this.props;\n    const result: (JSX.Element | null)[] = [];\n\n    // Assume ranges are sorted.\n\n    let lastRenderedIndex = -1;\n\n    for (const range of ranges) {\n      // Spacer item before range or between the last range and this one\n      const isFirstRange = lastRenderedIndex === -1;\n      if ((isFirstRange && range.start !== 0) || (!isFirstRange && lastRenderedIndex !== range.start)) {\n        // Last range is not continuous with this one,\n        // or the first range does not start from the beginning: insert spacer item\n        const spacerStartIndex = isFirstRange ? 0 : lastRenderedIndex;\n        const gapBetweenRanges = range.start - spacerStartIndex;\n        if (gapBetweenRanges > 0) {\n          result.push(this._renderSpacerItem(gapBetweenRanges, spacerStartIndex));\n        }\n      }\n\n      for (let i = range.start; i < range.end; ++i) {\n        result.push(onRenderItem(items[i], i));\n      }\n\n      lastRenderedIndex = range.end - 1;\n    }\n\n    // Insert final spacer item\n    const itemCount = (items || []).length;\n    if (lastRenderedIndex < itemCount - 1) {\n      result.push(this._renderSpacerItem(itemCount - lastRenderedIndex, lastRenderedIndex));\n    }\n\n    return result;\n  }\n\n  private _renderSpacerItem(numberOfItems: number, index: number): JSX.Element {\n    const { itemHeight, items = [], spacerItemTagName: ItemTag = 'div' } = this.props;\n\n    const spacerHeight = numberOfItems * itemHeight;\n    const itemCount = items.length;\n\n    let key: string;\n    if (index === 0) {\n      key = `spacer-start`;\n    } else if (index + numberOfItems === itemCount) {\n      key = `spacer-end`;\n    } else {\n      key = `spacer-item-${index + numberOfItems}`;\n    }\n\n    return React.createElement(ItemTag, { ref: this._spacerRef.bind(this, key), key, style: { height: spacerHeight } });\n  }\n\n  private _spacerRef = (key: string, ref: HTMLElement): void => {\n    if (ref) {\n      this._spacerElements[key] = ref;\n    } else {\n      delete this._spacerElements[key];\n    }\n  };\n\n  private _render(scrollTop: number): void {\n    scrollTop = Math.floor(scrollTop);\n\n    this.setState({\n      items: this._renderItems(scrollTop, this.state.viewportHeight),\n    });\n  }\n\n  private _onFocus(ev: React.FocusEvent<HTMLDivElement>): void {\n    let target = ev.target as HTMLElement;\n\n    while (target !== this._root.current) {\n      const indexString = target.getAttribute('data-selection-index');\n\n      if (indexString) {\n        this._focusedIndex = Number(indexString);\n        break;\n      }\n\n      target = getParent(target) as HTMLElement;\n    }\n  }\n}\n"]}