{"version":3,"file":"ShimmerTile.base.js","sourceRoot":"../src/","sources":["components/Tile/ShimmerTile/ShimmerTile.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, classNamesFunction } from '../../../Utilities';\nimport { IShimmerTileProps, IShimmerTileStyleProps, IShimmerTileStyles } from './ShimmerTile.types';\nimport { TileSize } from '../Tile.types';\nimport { TileLayoutSizes } from '../Tile';\nimport { ShimmerGap, ShimmerElementsGroup, ShimmerElementType } from 'office-ui-fabric-react/lib/Shimmer';\n\nconst ShimmerTileLayoutValues = {\n  largeSquareWidth: 96,\n  largeSquareHeight: 96,\n  largeNameWidth: 144,\n  largeNameHeight: 7,\n  largeActivityWidth: 96,\n  largeActivityHeight: 7,\n  smallSquareWidth: 62,\n  smallSquareHeight: 61,\n  smallNameWidth: 106,\n  smallNameHeight: 5,\n  smallActivityWidth: 62,\n  smallActivityHeight: 5,\n};\n\nconst PLACEHOLDER_SIZES: {\n  [P in TileSize]: {\n    squareWidth: number;\n    squareHeight: number;\n    nameWidth: number;\n    nameHeight: number;\n    activityWidth: number;\n    activityHeight: number;\n  };\n} = {\n  small: {\n    squareWidth: ShimmerTileLayoutValues.smallSquareWidth,\n    squareHeight: ShimmerTileLayoutValues.smallSquareHeight,\n    nameWidth: ShimmerTileLayoutValues.smallNameWidth,\n    nameHeight: ShimmerTileLayoutValues.smallNameHeight,\n    activityWidth: ShimmerTileLayoutValues.smallActivityWidth,\n    activityHeight: ShimmerTileLayoutValues.smallActivityHeight,\n  },\n  large: {\n    squareWidth: ShimmerTileLayoutValues.largeSquareWidth,\n    squareHeight: ShimmerTileLayoutValues.largeSquareHeight,\n    nameWidth: ShimmerTileLayoutValues.largeNameWidth,\n    nameHeight: ShimmerTileLayoutValues.largeNameHeight,\n    activityWidth: ShimmerTileLayoutValues.largeActivityWidth,\n    activityHeight: ShimmerTileLayoutValues.largeActivityHeight,\n  },\n};\n\nconst getClassNames = classNamesFunction<IShimmerTileStyleProps, IShimmerTileStyles>();\n\nexport class ShimmerTileBase extends React.Component<IShimmerTileProps, {}> {\n  private _classNames: { [key in keyof IShimmerTileStyles]: string };\n\n  constructor(props: IShimmerTileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      styles,\n      contentSize = { width: 176, height: 171 },\n      itemActivity = true,\n      itemName = true,\n      itemThumbnail = true,\n      tileSize = 'large',\n    } = this.props;\n\n    const { nameplatePadding, nameplateMargin, nameplateActivityHeight, nameplateNameHeight } = TileLayoutSizes[\n      tileSize\n    ];\n\n    const { squareWidth, squareHeight, nameWidth, nameHeight, activityWidth, activityHeight } = PLACEHOLDER_SIZES[\n      tileSize\n    ];\n\n    let nameplateHeight = 0;\n\n    if (itemName || itemActivity) {\n      nameplateHeight += nameplatePadding * 2;\n      if (itemName) {\n        nameplateHeight += nameplateNameHeight;\n      }\n      if (itemActivity) {\n        nameplateHeight += nameplateActivityHeight + nameplateMargin;\n      }\n    }\n\n    this._classNames = getClassNames(styles!, {});\n\n    return (\n      <div className={this._classNames.root}>\n        <ShimmerGap width={contentSize.width} height={contentSize.height - squareHeight - nameplateHeight} />\n        <ShimmerElementsGroup\n          shimmerElements={[\n            {\n              type: ShimmerElementType.gap,\n              width: (contentSize.width - squareWidth) / 2,\n              height: squareHeight,\n            },\n            itemThumbnail\n              ? {\n                  type: ShimmerElementType.line,\n                  width: squareWidth,\n                  height: squareHeight,\n                }\n              : {\n                  type: ShimmerElementType.gap,\n                  width: squareWidth,\n                  height: squareHeight,\n                },\n            {\n              type: ShimmerElementType.gap,\n              width: (contentSize.width - squareWidth) / 2,\n              height: squareHeight,\n            },\n          ]}\n        />\n        {itemActivity || itemName ? (\n          <div>\n            <ShimmerGap width={contentSize.width} height={nameplatePadding} />\n            {itemName ? (\n              <ShimmerElementsGroup\n                shimmerElements={[\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - nameWidth) / 2,\n                    height: nameplateNameHeight,\n                  },\n                  {\n                    type: ShimmerElementType.line,\n                    width: nameWidth,\n                    height: nameHeight,\n                  },\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - nameWidth) / 2,\n                    height: nameplateNameHeight,\n                  },\n                ]}\n              />\n            ) : null}\n            {itemActivity ? (\n              <ShimmerElementsGroup\n                shimmerElements={[\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - activityWidth) / 2,\n                    height: nameplateActivityHeight,\n                  },\n                  {\n                    type: ShimmerElementType.line,\n                    width: activityWidth,\n                    height: activityHeight,\n                  },\n                  {\n                    type: ShimmerElementType.gap,\n                    width: (contentSize.width - activityWidth) / 2,\n                    height: nameplateActivityHeight,\n                  },\n                ]}\n              />\n            ) : null}\n            <ShimmerGap width={contentSize.width} height={nameplatePadding} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]}