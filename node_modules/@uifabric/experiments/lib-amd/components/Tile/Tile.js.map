{"version":3,"file":"Tile.js","sourceRoot":"../src/","sources":["components/Tile/Tile.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ITileProps, TileSize } from './Tile.types';\nimport { Check } from 'office-ui-fabric-react/lib/Check';\nimport { SELECTION_CHANGE } from 'office-ui-fabric-react/lib/Selection';\nimport { ISize, css, initializeComponentRef, getId, getNativeProps, divProperties, EventGroup } from '../../Utilities';\nimport * as TileStylesModule from './Tile.scss';\nimport * as SignalStylesModule from '../signals/Signal.scss';\nimport * as CheckStylesModule from 'office-ui-fabric-react/lib/components/Check/Check.scss';\n\nconst TileStyles: any = TileStylesModule;\nconst SignalStyles: any = SignalStylesModule;\nconst CheckStyles: any = CheckStylesModule;\n\nexport const TileLayoutValues = {\n  nameplatePadding: 12 as 12,\n  largeNameplateNameHeight: 15 as 15,\n  smallNameplateNameHeight: 12 as 12,\n  nameplateMargin: 0 as 0,\n  largeNameplateActivityHeight: 20 as 20,\n  smallNameplateActivityHeight: 20 as 20,\n  foregroundMargin: 16 as 16,\n};\n\nexport type TileLayoutValues = typeof TileLayoutValues[keyof typeof TileLayoutValues];\n\nexport interface ITileState {\n  isSelected?: boolean;\n  isModal?: boolean;\n}\n\nexport const TileLayoutSizes: {\n  [P in TileSize]: {\n    nameplatePadding: number;\n    nameplateNameHeight: number;\n    nameplateMargin: number;\n    nameplateActivityHeight: number;\n    foregroundMargin: number;\n  };\n} = {\n  small: {\n    nameplatePadding: TileLayoutValues.nameplatePadding,\n    nameplateNameHeight: TileLayoutValues.smallNameplateNameHeight,\n    nameplateMargin: TileLayoutValues.nameplateMargin,\n    nameplateActivityHeight: TileLayoutValues.smallNameplateActivityHeight,\n    foregroundMargin: TileLayoutValues.foregroundMargin,\n  },\n  large: {\n    nameplatePadding: TileLayoutValues.nameplatePadding,\n    nameplateNameHeight: TileLayoutValues.largeNameplateNameHeight,\n    nameplateMargin: TileLayoutValues.nameplateMargin,\n    nameplateActivityHeight: TileLayoutValues.largeNameplateActivityHeight,\n    foregroundMargin: TileLayoutValues.foregroundMargin,\n  },\n};\n\n/**\n * A tile provides a frame for a potentially-selectable item which displays its contents prominently.\n */\nexport class Tile extends React.Component<ITileProps, ITileState> {\n  private _nameId: string;\n  private _activityId: string;\n  private _labelId: string;\n  private _descriptionId: string;\n  private _events: EventGroup;\n\n  constructor(props: ITileProps, context: any) {\n    super(props, context);\n\n    initializeComponentRef(this);\n\n    this._nameId = getId('Tile-name');\n    this._activityId = getId('Tile-activity');\n    this._labelId = getId('Tile-label');\n    this._descriptionId = getId('Tile-description');\n\n    const { selectionIndex = -1, selection } = props;\n\n    const isSelected = !!selection && selectionIndex > -1 && selection.isIndexSelected(selectionIndex);\n    const isModal = !!selection && !!selection.isModal && selection.isModal();\n\n    this.state = {\n      isSelected: isSelected,\n      isModal: isModal,\n    };\n\n    this._events = new EventGroup(this);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: ITileProps): void {\n    const { selection, selectionIndex } = this.props;\n\n    const { selection: nextSelection, selectionIndex: nextSelectionIndex = -1 } = nextProps;\n\n    if (selection !== nextSelection || selectionIndex !== nextSelectionIndex) {\n      const isSelected =\n        !!nextSelection && nextSelectionIndex > -1 && nextSelection.isIndexSelected(nextSelectionIndex);\n      const isModal = !!nextSelection && nextSelection.isModal && nextSelection.isModal();\n\n      this.setState({\n        isSelected: isSelected,\n        isModal: isModal,\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    const { selection } = this.props;\n\n    if (selection) {\n      this._events.on(selection, SELECTION_CHANGE, this._onSelectionChange);\n    }\n  }\n\n  public componentDidUpdate(previousProps: ITileProps): void {\n    const { selection } = this.props;\n\n    const { selection: previousSelection } = previousProps;\n\n    if (selection !== previousSelection) {\n      if (previousSelection) {\n        this._events.off(previousSelection);\n      }\n\n      if (selection) {\n        this._events.on(selection, SELECTION_CHANGE, this._onSelectionChange);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element {\n    const {\n      children,\n      selectionIndex = -1,\n      invokeSelection = false,\n      selection,\n      background,\n      foreground,\n      showBackgroundFrame = false,\n      showForegroundFrame = false,\n      hideBackground = false,\n      hideForeground = false,\n      itemName,\n      itemActivity,\n      componentRef,\n      className,\n      tileSize = 'large',\n      contentSize,\n      ariaLabel,\n      descriptionAriaLabel,\n      href,\n      onClick,\n      download,\n      hrefLang,\n      media,\n      rel,\n      target,\n      isFluentStyling,\n      ariaLabelSelected,\n      nameplateOnlyOnHover,\n      ...divProps\n    } = this.props;\n\n    const { isSelected = false, isModal = false } = this.state;\n\n    const { isSelectable = !!selection && selectionIndex > -1 } = this.props;\n    const isInvokable = (!!href || !!onClick || !!invokeSelection) && !isModal;\n    const ariaLabelWithSelectState = isSelected && ariaLabelSelected ? `${ariaLabel}, ${ariaLabelSelected}` : ariaLabel;\n    const content = (\n      <>\n        {ariaLabel ? (\n          <span key=\"label\" id={this._labelId} className={css('ms-Tile-label', TileStylesModule.label)}>\n            {ariaLabelWithSelectState}\n          </span>\n        ) : null}\n        {background\n          ? this._onRenderBackground({\n              background: background,\n              hideBackground,\n            })\n          : null}\n        {foreground\n          ? this._onRenderForeground({\n              foreground: foreground,\n              hideForeground,\n            })\n          : null}\n        {itemName || itemActivity\n          ? this._onRenderNameplate({\n              name: itemName,\n              activity: itemActivity,\n              onlyOnHover: !!nameplateOnlyOnHover,\n            })\n          : null}\n      </>\n    );\n\n    const LinkAs = href ? 'a' : onClick ? 'button' : 'span';\n\n    const link = (\n      <LinkAs\n        href={href}\n        onClick={onClick}\n        download={download}\n        hrefLang={hrefLang}\n        media={media}\n        target={target}\n        rel={rel === undefined ? (href && target ? 'noopener' : undefined) : rel}\n        ref={this.props.linkRef}\n        data-selection-invoke={isInvokable && selectionIndex > -1 ? true : undefined}\n        className={css('ms-Tile-link', TileStyles.link)}\n      >\n        {content}\n      </LinkAs>\n    );\n\n    return (\n      <div\n        aria-selected={isSelected}\n        {...getNativeProps(divProps, divProperties)}\n        aria-labelledby={ariaLabel ? this._labelId : this._nameId}\n        aria-describedby={ariaLabelWithSelectState ? this._descriptionId : this._activityId}\n        className={css('ms-Tile', className, TileStyles.tile, {\n          [`ms-Tile--isSmall ${TileStyles.isSmall}`]: tileSize === 'small',\n          [`ms-Tile--isLarge ${TileStyles.isLarge}`]: tileSize === 'large',\n          [`ms-Tile--hasBackgroundFrame ${TileStyles.hasBackgroundFrame}`]: showBackgroundFrame,\n          [`ms-Tile--hasForegroundFrame ${TileStyles.hasForegroundFrame}`]: showForegroundFrame,\n          [`ms-Tile--isSelected ${TileStyles.selected} ${SignalStyles.selected}`]: isSelected,\n          [`ms-Tile--isSelectable ${TileStyles.selectable}`]: isSelectable,\n          [`ms-Tile--hasBackground ${TileStyles.hasBackground}`]: !!background,\n          [SignalStyles.dark]: !!background && !hideBackground,\n          [`ms-Tile--showBackground ${TileStyles.showBackground}`]: !hideBackground,\n          [`ms-Tile--invokable ${TileStyles.invokable}`]: isInvokable,\n          [`ms-Tile--uninvokable ${TileStyles.uninvokable}`]: !isInvokable,\n          [`ms-Tile--isDisabled ${TileStyles.disabled}`]: !isSelectable && !isInvokable,\n          [`ms-Tile--showCheck ${TileStyles.showCheck}`]: isModal,\n          [`ms-Tile--isFluentStyling ${TileStyles.isFluentStyling}`]: isFluentStyling,\n        })}\n        data-is-focusable={true}\n        data-is-sub-focuszone={true}\n        data-disable-click-on-enter={true}\n        data-selection-index={selectionIndex > -1 ? selectionIndex : undefined}\n        data-selection-touch-invoke={isInvokable && selectionIndex > -1 ? true : undefined}\n      >\n        {link}\n        {descriptionAriaLabel ? (\n          <span\n            key=\"description\"\n            id={this._descriptionId}\n            className={css('ms-Tile-description', TileStylesModule.description)}\n          >\n            {descriptionAriaLabel}\n          </span>\n        ) : null}\n        {isSelectable\n          ? this._onRenderCheck({\n              isSelected: isSelected,\n            })\n          : null}\n      </div>\n    );\n  }\n\n  private _onRenderBackground({\n    background,\n    hideBackground,\n  }: {\n    background: ITileProps['background'];\n    hideBackground: boolean;\n  }): JSX.Element | null {\n    const finalBackground =\n      typeof background === 'function' ? background(getTileLayoutFromProps(this.props)) : background;\n\n    return finalBackground ? (\n      <span\n        key=\"background\"\n        className={css('ms-Tile-background', TileStyles.background, {\n          [`ms-Tile-background--hide ${TileStyles.backgroundHide}`]: hideBackground,\n        })}\n      >\n        {finalBackground}\n      </span>\n    ) : null;\n  }\n\n  private _onRenderForeground({\n    foreground,\n    hideForeground,\n  }: {\n    foreground: ITileProps['foreground'];\n    hideForeground: boolean;\n  }): JSX.Element | null {\n    const finalForeground =\n      typeof foreground === 'function' ? foreground(getTileLayoutFromProps(this.props)) : foreground;\n\n    return finalForeground ? (\n      <span key=\"foreground\" role=\"presentation\" className={css('ms-Tile-aboveNameplate', TileStyles.aboveNameplate)}>\n        <span role=\"presentation\" className={css('ms-Tile-content', TileStyles.content)}>\n          <span\n            role=\"presentation\"\n            className={css('ms-Tile-foreground', TileStyles.foreground, {\n              [`ms-Tile-foreground--hide ${TileStyles.foregroundHide}`]: hideForeground,\n            })}\n          >\n            {finalForeground}\n          </span>\n        </span>\n      </span>\n    ) : null;\n  }\n\n  private _onRenderNameplate({\n    name,\n    activity,\n    onlyOnHover,\n  }: {\n    name: React.ReactNode;\n    activity: React.ReactNode;\n    onlyOnHover: boolean;\n  }): JSX.Element {\n    return (\n      <span\n        key=\"nameplate\"\n        className={css('ms-Tile-nameplate', TileStyles.nameplate, { [TileStyles.onlyOnHover]: onlyOnHover })}\n      >\n        {name ? (\n          <span\n            id={this._nameId}\n            className={css('ms-Tile-name', TileStyles.name, { [TileStyles.onlyOnHover]: onlyOnHover })}\n          >\n            {name}\n          </span>\n        ) : null}\n        {activity ? (\n          <span\n            id={this._activityId}\n            className={css('ms-Tile-activity', TileStyles.activity, { [TileStyles.onlyOnHover]: onlyOnHover })}\n          >\n            {activity}\n          </span>\n        ) : null}\n      </span>\n    );\n  }\n\n  private _onRenderCheck({ isSelected }: { isSelected: boolean }): JSX.Element {\n    const { toggleSelectionAriaLabel } = this.props;\n\n    return (\n      <span\n        key=\"check\"\n        role=\"checkbox\"\n        aria-label={toggleSelectionAriaLabel}\n        className={css('ms-Tile-check', TileStyles.check, CheckStyles.checkHost, {\n          [CheckStyles.hostShowCheck]: this.state.isModal,\n        })}\n        data-selection-toggle={true}\n        aria-checked={isSelected}\n      >\n        <Check checked={isSelected} />\n      </span>\n    );\n  }\n\n  private _onSelectionChange = (): void => {\n    const { selection, selectionIndex = -1 } = this.props;\n\n    const isSelected = selectionIndex > -1 && !!selection && selection.isIndexSelected(selectionIndex);\n    const isModal = !!selection && !!selection.isModal && selection.isModal();\n\n    this.setState({\n      isSelected: isSelected,\n      isModal: isModal,\n    });\n  };\n}\n\nexport interface ITileLayout {\n  foregroundSize?: ISize | undefined;\n  backgroundSize?: ISize | undefined;\n}\n\nexport function getTileLayout(tileElement: JSX.Element): ITileLayout {\n  const tileProps: ITileProps = tileElement.props;\n\n  return getTileLayoutFromProps(tileProps);\n}\n\nfunction getTileLayoutFromProps(tileProps: ITileProps): ITileLayout {\n  const { contentSize, tileSize = 'large' } = tileProps;\n\n  if (!contentSize) {\n    return {};\n  }\n\n  const width = contentSize.width;\n\n  const {\n    nameplatePadding,\n    nameplateMargin,\n    nameplateActivityHeight,\n    nameplateNameHeight,\n    foregroundMargin,\n  } = TileLayoutSizes[tileSize];\n\n  let nameplateHeight = 0;\n\n  if (tileProps.itemName || tileProps.itemActivity) {\n    nameplateHeight += nameplatePadding * 2; // 12px top/bottom padding.\n    if (tileProps.itemName) {\n      nameplateHeight += nameplateNameHeight;\n    }\n    if (tileProps.itemActivity) {\n      nameplateHeight += nameplateActivityHeight + nameplateMargin;\n    }\n  }\n\n  return {\n    foregroundSize: {\n      width: width - foregroundMargin * 2,\n      height: contentSize.height - foregroundMargin - nameplateHeight,\n    },\n    backgroundSize: contentSize,\n  };\n}\n\nexport function renderTileWithLayout(tileElement: JSX.Element, props: Partial<ITileProps>): JSX.Element {\n  const Tag = tileElement.type;\n\n  return <Tag {...tileElement.props} {...props} />;\n}\n"]}