{"version":3,"file":"Sidebar.styles.js","sourceRoot":"../src/","sources":["components/Sidebar/Sidebar.styles.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\n\nimport { IButtonStyles } from 'office-ui-fabric-react';\nimport { memoizeFunction, ITheme, concatStyleSets } from 'office-ui-fabric-react';\nimport { ISidebarStyles, SidebarStylingConstants } from './Sidebar.types';\n\nexport const sidebarFonts = {\n  segoeUiSemibold:\n    'wf_segoe-ui_semibold, \"Segoe UI Semibold\", \"Segoe WP Semibold\", \"Segoe UI\", \"Segoe WP\", Tahoma, Arial, sans-serif',\n  segoeUiSemilight:\n    'wf_segoe-ui_semilight, \"Segoe UI Light\", \"Segoe WP Light\", \"Segoe UI\", \"Segoe WP\",Tahoma, Arial, sans-serif',\n};\n\nexport enum SidebarColors {\n  Dark,\n  Light,\n}\n\ninterface ISidebarColors {\n  background: string;\n  backgroundHovered?: string;\n  backgroundActive: string;\n  buttonColor: string;\n}\n\nconst SidebarDarkColors: ISidebarColors = {\n  background: '#212121',\n  backgroundHovered: '#333',\n  backgroundActive: '#3c3c3c',\n  buttonColor: '#f4f4f4',\n};\n\nconst SidebarLightColors: ISidebarColors = {\n  background: '#f4f4f4',\n  backgroundHovered: '#c8c8c8',\n  backgroundActive: '#eaeaea',\n  buttonColor: '#212121',\n};\n\nexport const getSidebarStyles = memoizeFunction(\n  (theme: ITheme, sidebarColors: SidebarColors, customStyles?: ISidebarStyles): ISidebarStyles => {\n    const currentSidebarColors = sidebarColors === SidebarColors.Dark ? SidebarDarkColors : SidebarLightColors;\n    const sidebarStyles: ISidebarStyles = {\n      root: {\n        height: '100%',\n        backgroundColor: currentSidebarColors.background,\n        width: SidebarStylingConstants.sidebarWidth,\n        position: 'relative',\n      },\n      rootCollapsed: {\n        width: SidebarStylingConstants.sidebarCollapsedWidth,\n        backgroundColor: currentSidebarColors.background,\n        height: '100%',\n        position: 'relative',\n      },\n      content: {\n        height: 'auto',\n        width: '100%',\n        backgroundColor: currentSidebarColors.background,\n        overflowX: 'hidden',\n      },\n      contentCollapsed: {\n        backgroundColor: currentSidebarColors.background,\n        overflow: 'hidden',\n      },\n      footer: {\n        bottom: '0',\n        position: 'absolute',\n        width: '100%',\n        zIndex: 100,\n      },\n    };\n\n    return concatStyleSets(sidebarStyles, customStyles);\n  },\n);\n\nexport const getButtonColoredStyles = memoizeFunction(\n  (theme: ITheme, sidebarColors: SidebarColors, customStyles?: IButtonStyles): IButtonStyles => {\n    const currentSidebarColors = sidebarColors === SidebarColors.Dark ? SidebarDarkColors : SidebarLightColors;\n    const buttonStyles: IButtonStyles = {\n      root: {\n        backgroundColor: currentSidebarColors.background,\n      },\n      rootExpanded: {\n        backgroundColor: currentSidebarColors.backgroundHovered,\n      },\n      rootDisabled: {\n        backgroundColor: currentSidebarColors.background,\n      },\n      rootHovered: {\n        backgroundColor: currentSidebarColors.backgroundHovered,\n      },\n      rootPressed: {\n        backgroundColor: currentSidebarColors.backgroundHovered,\n      },\n      rootChecked: {\n        backgroundColor: currentSidebarColors.backgroundActive,\n      },\n      rootCheckedHovered: {\n        backgroundColor: currentSidebarColors.backgroundActive,\n      },\n      rootCheckedPressed: {\n        backgroundColor: currentSidebarColors.backgroundActive,\n      },\n      icon: {\n        fill: currentSidebarColors.buttonColor,\n        color: currentSidebarColors.buttonColor,\n      },\n      iconDisabled: {\n        color: currentSidebarColors.buttonColor,\n      },\n      iconExpanded: {\n        color: currentSidebarColors.buttonColor,\n        fill: currentSidebarColors.buttonColor,\n      },\n      labelDisabled: {\n        color: currentSidebarColors.buttonColor,\n      },\n      label: {\n        color: currentSidebarColors.buttonColor,\n      },\n      menuIcon: {\n        color: currentSidebarColors.buttonColor,\n      },\n      menuIconDisabled: {\n        color: currentSidebarColors.buttonColor,\n      },\n    };\n\n    return concatStyleSets(buttonStyles, customStyles);\n  },\n);\n"]}