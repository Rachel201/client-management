{"version":3,"file":"Button.styles.js","sourceRoot":"../src/","sources":["components/Button/Button.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseGap } from 'office-ui-fabric-react/lib/components/Stack/StackUtils';\nimport { IButtonComponent, IButtonStylesReturnType, IButtonTokenReturnType } from './Button.types';\nimport { getFocusStyle, getGlobalClassNames, FontWeights, HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated */\nexport const baseTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { effects } = theme;\n\n  return {\n    borderRadius: effects.roundedCorner2,\n    borderStyle: 'solid',\n    borderStyleFocused: 'solid',\n    borderWidth: 1,\n    childrenGap: 8,\n    contentPadding: '0px 20px',\n    cursor: 'pointer',\n    iconSize: 16,\n    iconWeight: 400,\n    lineHeight: 1,\n    minHeight: 32,\n    minWidth: 100,\n    textFamily: 'inherit',\n    textSize: 14,\n    textWeight: FontWeights.semibold,\n  };\n};\n\n/** @deprecated */\nexport const hrefTokens: IButtonComponent['tokens'] = {\n  contentPadding: '8px 16px',\n};\n\n/** @deprecated */\nexport const circularTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n\n  return {\n    backgroundClipFocused: 'content-box',\n    borderColorFocused: semanticColors.focusBorder,\n    borderRadius: '50%',\n    borderStyleFocused: 'double',\n    borderWidthFocused: 3,\n    contentPadding: 0,\n    contentPaddingFocused: 1,\n    minHeight: 32,\n    minWidth: 32,\n    outlineColor: 'transparent',\n  };\n};\n\n/** @deprecated */\nexport const enabledTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n  return {\n    backgroundColor: semanticColors.buttonBackground,\n    backgroundColorHovered: semanticColors.buttonBackgroundHovered,\n    backgroundColorPressed: semanticColors.buttonBackgroundPressed,\n\n    borderColor: semanticColors.buttonBorder,\n    borderColorHovered: semanticColors.buttonBorder,\n    borderColorPressed: semanticColors.buttonBorder,\n    highContrastBorderColorHovered: 'Highlight',\n    highContrastBorderColorPressed: 'Highlight',\n\n    color: semanticColors.buttonText,\n    colorHovered: semanticColors.buttonTextHovered,\n    colorPressed: semanticColors.buttonTextPressed,\n    highContrastColorHovered: 'Highlight',\n    highContrastColorPressed: 'Highlight',\n\n    iconColor: semanticColors.buttonText,\n    iconColorHovered: semanticColors.buttonTextHovered,\n    iconColorPressed: semanticColors.buttonTextPressed,\n    highContrastIconColorHovered: 'Highlight',\n    highContrastIconColorPressed: 'Highlight',\n  };\n};\n\n/** @deprecated */\nexport const disabledTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n  return {\n    backgroundColor: semanticColors.buttonBackgroundDisabled,\n    backgroundColorHovered: semanticColors.buttonBackgroundDisabled,\n    backgroundColorPressed: semanticColors.buttonBackgroundDisabled,\n    highContrastBackgroundColor: 'Window',\n    highContrastBackgroundColorHovered: 'Window',\n    highContrastBackgroundColorPressed: 'Window',\n\n    borderColor: semanticColors.buttonBorderDisabled,\n    borderColorHovered: semanticColors.buttonBorderDisabled,\n    borderColorPressed: semanticColors.buttonBorderDisabled,\n    highContrastBorderColor: 'GrayText',\n    highContrastBorderColorHovered: 'GrayText',\n    highContrastBorderColorPressed: 'GrayText',\n\n    color: semanticColors.buttonTextDisabled,\n    colorHovered: semanticColors.buttonTextDisabled,\n    colorPressed: semanticColors.buttonTextDisabled,\n    highContrastColor: 'GrayText',\n    highContrastColorHovered: 'GrayText',\n    highContrastColorPressed: 'GrayText',\n\n    cursor: 'default',\n\n    iconColor: semanticColors.buttonTextDisabled,\n    iconColorHovered: semanticColors.buttonTextDisabled,\n    iconColorPressed: semanticColors.buttonTextDisabled,\n    highContrastIconColor: 'GrayText',\n    highContrastIconColorHovered: 'GrayText',\n    highContrastIconColorPressed: 'GrayText',\n  };\n};\n\n/** @deprecated */\nexport const primaryEnabledTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n  return {\n    backgroundColor: semanticColors.primaryButtonBackground,\n    backgroundColorHovered: semanticColors.primaryButtonBackgroundHovered,\n    backgroundColorPressed: semanticColors.primaryButtonBackgroundPressed,\n    highContrastBackgroundColor: 'WindowText',\n    highContrastBackgroundColorHovered: 'Highlight',\n    highContrastBackgroundColorPressed: 'Highlight',\n\n    borderWidth: 0,\n\n    color: semanticColors.primaryButtonText,\n    colorHovered: semanticColors.primaryButtonTextHovered,\n    colorPressed: semanticColors.primaryButtonTextPressed,\n    highContrastColor: 'Window',\n    highContrastColorHovered: 'Window',\n    highContrastColorPressed: 'Window',\n\n    iconColor: semanticColors.primaryButtonText,\n    iconColorHovered: semanticColors.primaryButtonTextHovered,\n    iconColorPressed: semanticColors.primaryButtonTextPressed,\n    highContrastIconColor: 'Window',\n    highContrastIconColorHovered: 'Window',\n    highContrastIconColorPressed: 'Window',\n\n    msHighContrastAdjust: 'none',\n\n    outlineColor: 'transparent',\n  };\n};\n\n/** @deprecated */\nexport const primaryCircularTokens: IButtonComponent['tokens'] = {\n  borderStyleFocused: 'solid',\n  borderWidthFocused: 1,\n};\n\n/** @deprecated */\nexport const checkedTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n  return {\n    backgroundColor: semanticColors.buttonBackgroundChecked,\n    backgroundColorHovered: semanticColors.buttonBackgroundCheckedHovered,\n    backgroundColorPressed: semanticColors.buttonBackgroundPressed,\n\n    color: semanticColors.buttonTextChecked,\n    colorHovered: semanticColors.buttonTextCheckedHovered,\n    colorPressed: semanticColors.buttonTextPressed,\n\n    iconColor: semanticColors.buttonTextChecked,\n    iconColorHovered: semanticColors.buttonTextCheckedHovered,\n    iconColorPressed: semanticColors.buttonTextPressed,\n  };\n};\n\n/** @deprecated */\nexport const primaryCheckedTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n  return {\n    backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n    backgroundColorHovered: semanticColors.primaryButtonBackgroundHovered,\n    backgroundColorPressed: semanticColors.primaryButtonBackgroundPressed,\n\n    color: semanticColors.primaryButtonTextPressed,\n    colorHovered: semanticColors.primaryButtonTextHovered,\n    colorPressed: semanticColors.primaryButtonTextPressed,\n\n    iconColor: semanticColors.primaryButtonTextPressed,\n    iconColorHovered: semanticColors.primaryButtonTextHovered,\n    iconColorPressed: semanticColors.primaryButtonTextPressed,\n  };\n};\n\n/** @deprecated */\nexport const ButtonTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => [\n  baseTokens,\n  !!props.href && hrefTokens,\n  !props.disabled && enabledTokens,\n  props.primary && primaryEnabledTokens,\n  props.circular && circularTokens,\n  props.circular && props.primary && primaryCircularTokens,\n  props.checked && checkedTokens,\n  props.checked && props.primary && primaryCheckedTokens,\n  props.disabled && disabledTokens,\n];\n\nconst GlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonIcon: 'ms-Button-icon',\n};\n\n/** @deprecated */\nexport const ButtonStyles: IButtonComponent['styles'] = (props, theme, tokens): IButtonStylesReturnType => {\n  const { className, circular } = props;\n\n  const { rowGap, columnGap } = parseGap(tokens.childrenGap, theme);\n\n  const globalClassNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      globalClassNames.msButton,\n      !circular && getFocusStyle(theme, { inset: 1, outlineColor: tokens.outlineColor }),\n      circular && {\n        selectors: {\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            borderWidth: 1,\n          },\n        },\n      },\n      theme.fonts.medium,\n      {\n        alignItems: 'center',\n        backgroundColor: tokens.backgroundColor,\n        borderColor: tokens.borderColor,\n        borderRadius: tokens.borderRadius,\n        borderStyle: tokens.borderStyle,\n        borderWidth: tokens.borderWidth,\n        boxSizing: 'border-box',\n        color: tokens.color,\n        cursor: tokens.cursor,\n        display: 'inline-flex',\n        flexDirection: 'row',\n        fontSize: tokens.textSize,\n        fontWeight: tokens.textWeight,\n        height: tokens.height,\n        justifyContent: 'center',\n        margin: 0,\n        minWidth: tokens.minWidth,\n        minHeight: tokens.minHeight,\n        outlineColor: tokens.outlineColor,\n        overflow: 'hidden',\n        padding: tokens.contentPadding,\n        textAlign: 'center',\n        textDecoration: 'none',\n        userSelect: 'none',\n        verticalAlign: 'baseline',\n        width: tokens.width,\n\n        selectors: {\n          '> *': {\n            marginLeft: `${0.5 * rowGap.value}${rowGap.unit} ${0.5 * columnGap.value}${columnGap.unit}`,\n            textOverflow: 'ellipsis',\n          },\n          '> *:not(:first-child)': {\n            marginLeft: `${columnGap.value}${columnGap.unit}`,\n          },\n          [HighContrastSelector]: {\n            backgroundColor: tokens.highContrastBackgroundColor,\n            borderColor: tokens.highContrastBorderColor,\n            borderWidth: 1,\n            color: tokens.highContrastColor,\n            MsHighContrastAdjust: tokens.msHighContrastAdjust,\n          },\n          ':hover': {\n            backgroundColor: tokens.backgroundColorHovered,\n            borderColor: tokens.borderColorHovered,\n            color: tokens.colorHovered,\n\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: tokens.highContrastBackgroundColorHovered,\n                borderColor: tokens.highContrastBorderColorHovered,\n                color: tokens.highContrastColorHovered,\n              },\n            },\n          },\n          ':active': {\n            backgroundColor: tokens.backgroundColorPressed,\n            borderColor: tokens.borderColorPressed,\n            color: tokens.colorPressed,\n\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: tokens.highContrastBackgroundColorPressed,\n                borderColor: tokens.highContrastBorderColorPressed,\n                color: tokens.highContrastColorPressed,\n              },\n            },\n          },\n          [`:hover .${globalClassNames.msButtonIcon}`]: {\n            color: tokens.iconColorHovered,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: tokens.highContrastIconColorHovered,\n              },\n            },\n          },\n          [`:active .${globalClassNames.msButtonIcon}`]: {\n            color: tokens.iconColorPressed,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: tokens.highContrastIconColorPressed,\n              },\n            },\n          },\n          // We have this here to establish the focus style of circular Buttons. If we use getFocusStyle to get the\n          // focus style, then the focus style for circular Buttons becomes busted, and the way to fix it is via the\n          // backgroundClip and padding attributes, which we don't have access to via getFocusStyle.\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            backgroundClip: tokens.backgroundClipFocused,\n            borderColor: tokens.borderColorFocused,\n            borderStyle: tokens.borderStyleFocused,\n            borderWidth: tokens.borderWidthFocused,\n            outlineColor: tokens.outlineColor,\n            padding: tokens.contentPaddingFocused,\n          },\n        },\n      },\n      className,\n    ],\n    icon: [\n      globalClassNames.msButtonIcon,\n      {\n        color: tokens.iconColor,\n        display: 'flex',\n        fill: tokens.iconColor,\n        fontSize: tokens.iconSize,\n        fontWeight: tokens.iconWeight,\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: tokens.highContrastIconColor,\n          },\n        },\n      },\n    ],\n    content: {\n      fontFamily: tokens.textFamily,\n      fontSize: tokens.textSize,\n      fontWeight: tokens.textWeight,\n      overflow: 'visible',\n    },\n  };\n};\n"]}