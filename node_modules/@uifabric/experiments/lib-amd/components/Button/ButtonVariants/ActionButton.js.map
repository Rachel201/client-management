{"version":3,"file":"ActionButton.js","sourceRoot":"../src/","sources":["components/Button/ButtonVariants/ActionButton.tsx"],"names":[],"mappings":";;;IAkBA,4CAA4C;IAE5C,IAAM,UAAU,GAA+B,UAAC,KAAK,EAAE,KAAK;QAClD,IAAA,uBAAO,EAAE,uBAAO,EAAE,qCAAc,CAAW;QAEnD,OAAO;YACL,eAAe,EAAE,aAAa;YAC9B,sBAAsB,EAAE,aAAa;YACrC,sBAAsB,EAAE,aAAa;YACrC,WAAW,EAAE,aAAa;YAC1B,kBAAkB,EAAE,aAAa;YACjC,kBAAkB,EAAE,aAAa;YACjC,YAAY,EAAE,OAAO,CAAC,cAAc;YACpC,WAAW,EAAE,OAAO;YACpB,WAAW,EAAE,CAAC;YACd,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,cAAc,CAAC,UAAU;YAChC,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,YAAY,EAAE,OAAO,CAAC,KAAK;YAC3B,cAAc,EAAE,SAAS;YACzB,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,MAAM;YACd,uBAAuB,EAAE,aAAa;YACtC,8BAA8B,EAAE,aAAa;YAC7C,8BAA8B,EAAE,aAAa;YAC7C,wBAAwB,EAAE,WAAW;YACrC,wBAAwB,EAAE,WAAW;YACrC,4BAA4B,EAAE,WAAW;YACzC,4BAA4B,EAAE,WAAW;YACzC,SAAS,EAAE,cAAc,CAAC,UAAU;YACpC,gBAAgB,EAAE,OAAO,CAAC,YAAY;YACtC,gBAAgB,EAAE,OAAO,CAAC,KAAK;YAC/B,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,qBAAW,CAAC,OAAO;SAChC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAM,cAAc,GAA+B,UAAC,KAAK,EAAE,KAAK;QACtD,IAAA,qCAAc,CAAW;QAEjC,OAAO;YACL,KAAK,EAAE,cAAc,CAAC,kBAAkB;YACxC,YAAY,EAAE,cAAc,CAAC,kBAAkB;YAC/C,YAAY,EAAE,cAAc,CAAC,kBAAkB;YAC/C,MAAM,EAAE,SAAS;YACjB,iBAAiB,EAAE,UAAU;YAC7B,wBAAwB,EAAE,UAAU;YACpC,wBAAwB,EAAE,UAAU;YACpC,qBAAqB,EAAE,UAAU;YACjC,4BAA4B,EAAE,UAAU;YACxC,4BAA4B,EAAE,UAAU;YACxC,SAAS,EAAE,cAAc,CAAC,kBAAkB;YAC5C,gBAAgB,EAAE,cAAc,CAAC,kBAAkB;YACnD,gBAAgB,EAAE,cAAc,CAAC,kBAAkB;SACpD,CAAC;IACJ,CAAC,CAAC;IAEF,IAAM,kBAAkB,GAA+B,UAAC,KAAK,EAAE,KAAK,IAA6B,OAAA;QAC/F,UAAU;QACV,KAAK,CAAC,QAAQ,IAAI,cAAc;KACjC,EAHgG,CAGhG,CAAC;IAEF,IAAM,kBAAkB,GAA+B,UAAC,KAAK,EAAE,KAAK,EAAE,MAAM;QAC1E,IAAM,aAAa,GAAI,4BAIrB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEzB,OAAO;YACL,IAAI,EAAE;gBACJ,aAAa,CAAC,IAAI;gBAClB;oBACE,cAAc,EAAE,YAAY;iBAC7B;aACF;YACD,OAAO,EAAE,aAAa,CAAC,OAAO;YAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;SACzB,CAAC;IACJ,CAAC,CAAC;IAEF;;;OAGG;IACU,QAAA,YAAY,GAA0C,mBAAQ,CAAC;QAC1E,WAAW,EAAE,cAAc;QAC3B,KAAK,2BAAA;QACL,KAAK,+BAAA;QACL,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,kBAAkB;QAC1B,IAAI,0BAAA;KACL,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n// Temporary import file to experiment with next version of foundation.\nimport { composed } from '@uifabric/foundation/lib/next/composed';\nimport { IComponentStyles, IStylesFunction } from '@uifabric/foundation';\nimport { FontWeights } from '../../../Styling';\nimport { useButtonState as state } from '../Button.state';\nimport { ButtonStyles } from '../Button.styles';\nimport {\n  IButtonComponent,\n  IButtonProps,\n  IButtonSlots,\n  IButtonStylesReturnType,\n  IButtonTokenReturnType,\n  IButtonTokens,\n  IButtonViewProps,\n} from '../Button.types';\nimport { ButtonSlots as slots, ButtonView as view } from '../Button.view';\n\n/* eslint-disable deprecation/deprecation */\n\nconst baseTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { effects, palette, semanticColors } = theme;\n\n  return {\n    backgroundColor: 'transparent',\n    backgroundColorHovered: 'transparent',\n    backgroundColorPressed: 'transparent',\n    borderColor: 'transparent',\n    borderColorHovered: 'transparent',\n    borderColorPressed: 'transparent',\n    borderRadius: effects.roundedCorner2,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    childrenGap: 8,\n    color: semanticColors.buttonText,\n    colorHovered: palette.themePrimary,\n    colorPressed: palette.black,\n    contentPadding: '0px 8px',\n    cursor: 'pointer',\n    height: '40px',\n    highContrastBorderColor: 'transparent',\n    highContrastBorderColorHovered: 'transparent',\n    highContrastBorderColorPressed: 'transparent',\n    highContrastColorHovered: 'Highlight',\n    highContrastColorPressed: 'Highlight',\n    highContrastIconColorHovered: 'Highlight',\n    highContrastIconColorPressed: 'Highlight',\n    iconColor: semanticColors.buttonText,\n    iconColorHovered: palette.themePrimary,\n    iconColorPressed: palette.black,\n    iconSize: 16,\n    minWidth: 100,\n    textWeight: FontWeights.regular,\n  };\n};\n\nconst disabledTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n\n  return {\n    color: semanticColors.buttonTextDisabled,\n    colorHovered: semanticColors.buttonTextDisabled,\n    colorPressed: semanticColors.buttonTextDisabled,\n    cursor: 'default',\n    highContrastColor: 'GrayText',\n    highContrastColorHovered: 'GrayText',\n    highContrastColorPressed: 'GrayText',\n    highContrastIconColor: 'GrayText',\n    highContrastIconColorHovered: 'GrayText',\n    highContrastIconColorPressed: 'GrayText',\n    iconColor: semanticColors.buttonTextDisabled,\n    iconColorHovered: semanticColors.buttonTextDisabled,\n    iconColorPressed: semanticColors.buttonTextDisabled,\n  };\n};\n\nconst ActionButtonTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => [\n  baseTokens,\n  props.disabled && disabledTokens,\n];\n\nconst ActionButtonStyles: IButtonComponent['styles'] = (props, theme, tokens): IButtonStylesReturnType => {\n  const regularStyles = (ButtonStyles as IStylesFunction<\n    IButtonViewProps,\n    IButtonTokens,\n    IComponentStyles<IButtonSlots>\n  >)(props, theme, tokens);\n\n  return {\n    root: [\n      regularStyles.root,\n      {\n        justifyContent: 'flex-start',\n      },\n    ],\n    content: regularStyles.content,\n    icon: regularStyles.icon,\n  };\n};\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n */\nexport const ActionButton: React.FunctionComponent<IButtonProps> = composed({\n  displayName: 'ActionButton',\n  slots,\n  state,\n  styles: ActionButtonStyles,\n  tokens: ActionButtonTokens,\n  view,\n});\n"]}