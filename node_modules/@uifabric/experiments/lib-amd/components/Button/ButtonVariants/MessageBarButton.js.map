{"version":3,"file":"MessageBarButton.js","sourceRoot":"../src/","sources":["components/Button/ButtonVariants/MessageBarButton.tsx"],"names":[],"mappings":";;;IAeA,4CAA4C;IAE5C,IAAM,UAAU,GAA+B,UAAC,KAAK,EAAE,KAAK;QAClD,IAAA,uBAAO,CAAW;QAE1B,OAAO;YACL,WAAW,EAAE,OAAO,CAAC,kBAAkB;YACvC,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;YAC9C,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;YAC9C,cAAc,EAAE,CAAC;YACjB,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC,CAAC;IAEF,IAAM,cAAc,GAA+B,UAAC,KAAK,EAAE,KAAK;QACtD,IAAA,qCAAc,CAAW;QAEjC,OAAO;YACL,WAAW,EAAE,cAAc,CAAC,oBAAoB;YAChD,kBAAkB,EAAE,cAAc,CAAC,oBAAoB;YACvD,kBAAkB,EAAE,cAAc,CAAC,oBAAoB;YACvD,MAAM,EAAE,SAAS;SAClB,CAAC;IACJ,CAAC,CAAC;IAEF,kBAAkB;IACL,QAAA,sBAAsB,GAA+B,UAAC,KAAK,EAAE,KAAK;QAC7E,IAAM,aAAa,GAAI,4BAAgE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAEtG,OAAO,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,CAAC,QAAQ,IAAI,cAAc,CAAC,CAAC;IACvE,CAAC,CAAC;IAEF;;;OAGG;IACU,QAAA,gBAAgB,GAA0C,mBAAQ,CAAC;QAC9E,WAAW,EAAE,kBAAkB;QAC/B,KAAK,2BAAA;QACL,KAAK,+BAAA;QACL,MAAM,8BAAA;QACN,MAAM,EAAE,8BAAsB;QAC9B,IAAI,0BAAA;KACL,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n// Temporary import file to experiment with next version of foundation.\nimport { composed } from '@uifabric/foundation/lib/next/composed';\nimport { ITokenFunction } from '@uifabric/foundation';\nimport { useButtonState as state } from '../Button.state';\nimport { ButtonStyles as styles, ButtonTokens } from '../Button.styles';\nimport {\n  IButtonComponent,\n  IButtonProps,\n  IButtonTokenReturnType,\n  IButtonTokens,\n  IButtonViewProps,\n} from '../Button.types';\nimport { ButtonSlots as slots, ButtonView as view } from '../Button.view';\n\n/* eslint-disable deprecation/deprecation */\n\nconst baseTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { palette } = theme;\n\n  return {\n    borderColor: palette.neutralTertiaryAlt,\n    borderColorHovered: palette.neutralTertiaryAlt,\n    borderColorPressed: palette.neutralTertiaryAlt,\n    contentPadding: 0,\n    cursor: 'pointer',\n    height: 24,\n    minHeight: 24,\n    minWidth: 84,\n    width: 84,\n  };\n};\n\nconst disabledTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const { semanticColors } = theme;\n\n  return {\n    borderColor: semanticColors.buttonBorderDisabled,\n    borderColorHovered: semanticColors.buttonBorderDisabled,\n    borderColorPressed: semanticColors.buttonBorderDisabled,\n    cursor: 'default',\n  };\n};\n\n/** @deprecated */\nexport const MessageBarButtonTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const regularTokens = (ButtonTokens as ITokenFunction<IButtonViewProps, IButtonTokens>)(props, theme);\n\n  return [regularTokens, baseTokens, props.disabled && disabledTokens];\n};\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n */\nexport const MessageBarButton: React.FunctionComponent<IButtonProps> = composed({\n  displayName: 'MessageBarButton',\n  slots,\n  state,\n  styles,\n  tokens: MessageBarButtonTokens,\n  view,\n});\n"]}