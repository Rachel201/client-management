{"version":3,"file":"PrimaryButton.js","sourceRoot":"../src/","sources":["components/Button/ButtonVariants/PrimaryButton.tsx"],"names":[],"mappings":";;;IAiBA,4CAA4C;IAE5C,kBAAkB;IACL,QAAA,mBAAmB,GAA+B,UAAC,KAAK,EAAE,KAAK,IAA6B,OAAA;QACvG,0BAAU;QACV,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,0BAAU;QAC1B,oCAAoB;QACpB,KAAK,CAAC,QAAQ,IAAI,8BAAc;QAChC,KAAK,CAAC,QAAQ,IAAI,qCAAqB;QACvC,KAAK,CAAC,OAAO,IAAI,oCAAoB;QACrC,KAAK,CAAC,QAAQ,IAAI,8BAAc;KACjC,EARwG,CAQxG,CAAC;IAEF;;;OAGG;IACU,QAAA,aAAa,GAA0C,mBAAQ,CAAC;QAC3E,WAAW,EAAE,eAAe;QAC5B,KAAK,2BAAA;QACL,KAAK,+BAAA;QACL,MAAM,8BAAA;QACN,MAAM,EAAE,2BAAmB;QAC3B,IAAI,0BAAA;KACL,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n// Temporary import file to experiment with next version of foundation.\nimport { composed } from '@uifabric/foundation/lib/next/composed';\nimport { useButtonState as state } from '../Button.state';\nimport {\n  baseTokens,\n  circularTokens,\n  disabledTokens,\n  hrefTokens,\n  primaryCheckedTokens,\n  primaryCircularTokens,\n  primaryEnabledTokens,\n  ButtonStyles as styles,\n} from '../Button.styles';\nimport { IButtonComponent, IButtonProps, IButtonTokenReturnType } from '../Button.types';\nimport { ButtonSlots as slots, ButtonView as view } from '../Button.view';\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated */\nexport const PrimaryButtonTokens: IButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => [\n  baseTokens,\n  !!props.href && hrefTokens,\n  primaryEnabledTokens,\n  props.circular && circularTokens,\n  props.circular && primaryCircularTokens,\n  props.checked && primaryCheckedTokens,\n  props.disabled && disabledTokens,\n];\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n */\nexport const PrimaryButton: React.FunctionComponent<IButtonProps> = composed({\n  displayName: 'PrimaryButton',\n  slots,\n  state,\n  styles,\n  tokens: PrimaryButtonTokens,\n  view,\n});\n"]}