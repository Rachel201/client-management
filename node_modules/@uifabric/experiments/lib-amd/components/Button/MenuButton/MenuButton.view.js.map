{"version":3,"file":"MenuButton.view.js","sourceRoot":"../src/","sources":["components/Button/MenuButton/MenuButton.view.tsx"],"names":[],"mappings":";;;IAQA,4CAA4C;IAE5C,kBAAkB;IACL,QAAA,eAAe,GAAkC,UAAA,KAAK,IAAI,OAAA,CAAC;QACtE,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,eAAM;QACd,IAAI,EAAE,4BAAQ;QACd,OAAO,EAAE,6BAAI;QACb,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,uCAAc;QACpB,QAAQ,EAAE,4BAAQ;KACnB,CAAC,EARqE,CAQrE,CAAC;IAEH,kBAAkB;IACL,QAAA,cAAc,GAAiC,UAAC,KAAK,EAAE,KAAK;QAErE,IAAA,yBAAQ,EACR,yBAAQ,EACR,uBAAO,EACP,6CAAkB,EAClB,2BAAoB,EACpB,iBAAI,EACJ,yBAAQ,EACR,mCAAa,EACb,mCAAa,EACb,qBAAM,EACN,sKAAO,CACC;QACJ,IAAA,+BAAW,CAAW;QAE5B,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,WAAW,yCACN,WAAW,KACd,OAAO,EAAE,IAAI,GACd,CAAC;SACH;QAED,OAAO,CACL,uBAAC,KAAK,CAAC,IAAI,IAAC,GAAG,EAAE,aAAa;YAC5B,uBAAC,KAAK,CAAC,MAAM,sCACI,QAAQ,EACvB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,kBAAkB,EAAE,kBAAkB,EACtC,WAAW,EAAE,WAAW,IACpB,IAAI;gBAEP,QAAQ;gBACT,uBAAC,KAAK,CAAC,QAAQ;oBACb,uBAAC,KAAK,CAAC,QAAQ,IAAC,QAAQ,EAAC,aAAa,GAAG,CAC1B,CACJ;YACd,QAAQ,IAAI,CACX,uBAAC,KAAK,CAAC,IAAI,IACT,MAAM,EAAE,aAAa,IAAI,aAAa,CAAC,OAAO,EAC9C,SAAS,EAAE,aAAa,EACxB,KAAK,EAAE,EAAE,EACT,eAAe,EAAE,wCAAe,CAAC,eAAe,GAChD,CACH,CACU,CACd,CAAC;IACJ,CAAC,CAAC","sourcesContent":["/** @jsx withSlots */\nimport { ContextualMenu, DirectionalHint, Text } from 'office-ui-fabric-react';\nimport { withSlots } from '../../../Foundation';\nimport { FontIcon } from '../../../utilities/factoryComponents';\n\nimport { Button } from '../Button';\nimport { IMenuButtonComponent } from './MenuButton.types';\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated */\nexport const MenuButtonSlots: IMenuButtonComponent['slots'] = props => ({\n  root: 'div',\n  button: Button,\n  icon: FontIcon,\n  content: Text,\n  menuArea: 'div',\n  menu: ContextualMenu,\n  menuIcon: FontIcon,\n});\n\n/** @deprecated */\nexport const MenuButtonView: IMenuButtonComponent['view'] = (props, slots) => {\n  const {\n    children,\n    disabled,\n    onClick,\n    allowDisabledFocus,\n    keytipProps: keytips,\n    menu,\n    expanded,\n    onMenuDismiss,\n    menuButtonRef,\n    styles,\n    ...rest\n  } = props;\n  let { keytipProps } = props;\n\n  if (keytipProps && menu) {\n    keytipProps = {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  }\n\n  return (\n    <slots.root ref={menuButtonRef}>\n      <slots.button\n        aria-expanded={expanded}\n        onClick={onClick}\n        disabled={disabled}\n        allowDisabledFocus={allowDisabledFocus}\n        keytipProps={keytipProps}\n        {...rest}\n      >\n        {children}\n        <slots.menuArea>\n          <slots.menuIcon iconName=\"ChevronDown\" />\n        </slots.menuArea>\n      </slots.button>\n      {expanded && (\n        <slots.menu\n          target={menuButtonRef && menuButtonRef.current}\n          onDismiss={onMenuDismiss}\n          items={[]}\n          directionalHint={DirectionalHint.bottomRightEdge}\n        />\n      )}\n    </slots.root>\n  );\n};\n"]}