{"version":3,"file":"DefaultEditingItem.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/Items/subcomponents/DefaultEditingItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, getId, getNativeProps, inputProperties, css } from 'office-ui-fabric-react/lib/Utilities';\nimport {\n  IBaseFloatingSuggestionsProps,\n  IBaseFloatingPickerHeaderFooterProps,\n} from '../../../FloatingSuggestionsComposite/FloatingSuggestions.types';\nimport { IFloatingSuggestionItemProps } from '../../../FloatingSuggestionsComposite/FloatingSuggestionsItem/FloatingSuggestionsItem.types';\nimport { EditingItemComponentProps } from '../EditableItem';\nimport { useFloatingSuggestionItems } from '../../../UnifiedPicker/hooks/useFloatingSuggestionItems';\n\nimport * as styles from './DefaultEditingItem.scss';\n\nexport interface IDefaultEditingItemInnerProps<TItem> extends React.HTMLAttributes<any> {\n  /**\n   * The current item of the EditingItem\n   */\n  item: TItem;\n\n  /**\n   * Callback for when the edited item's new value has been selected.\n   * Invoked indirectly by the picker mounted by onRenderFloatingPicker.\n   */\n  onEditingComplete: (oldItem: TItem, newItem: TItem) => void;\n\n  /**\n   * Callback for when the FloatingSuggestions is dismissed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * Renders the floating suggestions for suggesting the result of the item edit.\n   *\n   * Not actually optional, since is what is needed to resolve the new item.\n   */\n  onRenderFloatingPicker?: React.ComponentType<EditingItemInnerFloatingPickerProps<TItem>>;\n\n  /**\n   * Callback for when the editing item removes the item from the well\n   *\n   * Called when the item is currently being edited and the text length goes to zero\n   */\n  onRemoveItem?: (item: TItem) => void;\n\n  /**\n   * Callback used by the EditingItem to populate the initial value of the editing item\n   */\n  getEditingItemText: (item: TItem) => string;\n\n  /**\n   * Callback used to retrieve the suggestions to show in the floating suggestions\n   */\n  getSuggestions: (value: string) => IFloatingSuggestionItemProps<TItem>[];\n\n  /**\n   * The header and footer props for the floating picker\n   * This should be set here instead of in onRenderFloatingPicker if you want them to be keyboard selectable\n   */\n  pickerSuggestionsProps?: IBaseFloatingPickerHeaderFooterProps;\n\n  /**\n   * Function that specifies how arbitrary text entered into the edit input is handled.\n   */\n  createGenericItem?: (input: string) => TItem;\n}\n\nexport type EditingItemInnerFloatingPickerProps<T> = Pick<\n  IBaseFloatingSuggestionsProps<T>,\n  | 'componentRef'\n  | 'suggestions'\n  | 'onSuggestionSelected'\n  | 'targetElement'\n  | 'onRemoveSuggestion'\n  | 'onFloatingSuggestionsDismiss'\n  | 'onKeyDown'\n  | 'selectedSuggestionIndex'\n  | 'selectedHeaderIndex'\n  | 'selectedFooterIndex'\n  | 'pickerSuggestionsProps'\n>;\n\n/**\n * Wrapper around an item in a selection well that renders an item with a context menu for\n * replacing that item with another item.\n */\nexport const DefaultEditingItemInner = <TItem extends any>(\n  props: IDefaultEditingItemInnerProps<TItem>,\n): JSX.Element => {\n  const editingInput = React.useRef<any>();\n  const editingFloatingPicker = React.createRef<any>();\n  const [editingSuggestions, setEditingSuggestions] = React.useState<IFloatingSuggestionItemProps<TItem>[]>([]);\n  const [inputValue, setInputValue] = React.useState<string>('');\n\n  const {\n    item,\n    onEditingComplete,\n    getSuggestions,\n    onRemoveItem,\n    createGenericItem,\n    getEditingItemText,\n    pickerSuggestionsProps,\n  } = props;\n\n  const {\n    focusItemIndex,\n    setFocusItemIndex,\n    suggestionItems,\n    footerItemIndex,\n    footerItems,\n    headerItemIndex,\n    headerItems,\n    selectPreviousSuggestion,\n    selectNextSuggestion,\n  } = useFloatingSuggestionItems(\n    editingSuggestions,\n    pickerSuggestionsProps?.footerItemsProps,\n    pickerSuggestionsProps?.headerItemsProps,\n  );\n\n  React.useEffect(() => {\n    const itemText: string = getEditingItemText(props.item);\n    setEditingSuggestions(getSuggestions(itemText));\n    if (editingInput.current) {\n      editingInput.current.value = itemText;\n      setInputValue(itemText);\n      editingInput.current.focus();\n    }\n    setFocusItemIndex(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // We only want to run this once\n\n  const _renderEditingSuggestions = (): JSX.Element => {\n    const FloatingPicker = props.onRenderFloatingPicker;\n    if (!FloatingPicker) {\n      return <></>;\n    }\n    return (\n      <FloatingPicker\n        componentRef={editingFloatingPicker}\n        onSuggestionSelected={_onSuggestionSelected}\n        targetElement={editingInput.current}\n        onRemoveSuggestion={_onRemoveItem}\n        onFloatingSuggestionsDismiss={props.onDismiss}\n        suggestions={suggestionItems}\n        selectedSuggestionIndex={focusItemIndex}\n        selectedHeaderIndex={headerItemIndex}\n        selectedFooterIndex={footerItemIndex}\n        pickerSuggestionsProps={pickerSuggestionsProps}\n      />\n    );\n  };\n\n  const _onInputBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLElement>): void => {\n      if (editingFloatingPicker.current) {\n        const target = ev.relatedTarget as HTMLElement;\n        // We don't want to exit out if the user has clicked on a dropdown suggestion\n        if (target === null || target.className.indexOf('ms-FloatingSuggestionsItem-itemButton') === -1) {\n          if (focusItemIndex >= 0) {\n            _onSuggestionSelected(ev, suggestionItems[focusItemIndex]);\n          } else if (createGenericItem) {\n            onEditingComplete(item, createGenericItem(inputValue));\n          }\n          // else, we come out of editing mode\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- these are the only dependencies which matter\n    [suggestionItems, focusItemIndex, item, createGenericItem, inputValue, onEditingComplete, editingFloatingPicker],\n  );\n\n  const _onInputChange = React.useCallback(\n    (ev: React.FormEvent<HTMLElement>): void => {\n      const value: string = (ev.target as HTMLInputElement).value;\n      setInputValue(value);\n\n      if (value === '') {\n        if (onRemoveItem) {\n          onRemoveItem(item);\n        }\n      } else {\n        setEditingSuggestions(getSuggestions(value));\n      }\n    },\n    [onRemoveItem, getSuggestions, item],\n  );\n\n  const _onInputKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLInputElement>): void => {\n      const keyCode = ev.which;\n      switch (keyCode) {\n        case KeyCodes.backspace:\n        case KeyCodes.del:\n          ev.stopPropagation();\n          break;\n        case KeyCodes.enter:\n        case KeyCodes.tab:\n          if (!ev.shiftKey && !ev.ctrlKey && (focusItemIndex >= 0 || footerItemIndex >= 0 || headerItemIndex >= 0)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            if (focusItemIndex >= 0) {\n              // Get the focused element and add it to selectedItemsList\n              _onSuggestionSelected(ev, suggestionItems[focusItemIndex]);\n            } else if (footerItemIndex >= 0) {\n              // execute the footer action\n              footerItems![footerItemIndex].onExecute!();\n            } else if (headerItemIndex >= 0) {\n              // execute the header action\n              headerItems![headerItemIndex].onExecute!();\n            }\n          }\n          break;\n        case KeyCodes.up:\n          ev.preventDefault();\n          ev.stopPropagation();\n          selectPreviousSuggestion();\n          break;\n        case KeyCodes.down:\n          ev.preventDefault();\n          ev.stopPropagation();\n          selectNextSuggestion();\n          break;\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- these are the only dependencies which matter\n    [suggestionItems, focusItemIndex, footerItems, footerItemIndex, headerItems, headerItemIndex],\n  );\n\n  const _onSuggestionSelected = React.useCallback(\n    (ev: any, itemProps: IFloatingSuggestionItemProps<TItem>) => {\n      onEditingComplete(item, itemProps.item);\n    },\n    [onEditingComplete, item],\n  );\n\n  const _onRemoveItem = React.useCallback(\n    (ev: any, itemProps: IFloatingSuggestionItemProps<TItem>) => {\n      if (onRemoveItem) {\n        onRemoveItem(itemProps.item);\n      }\n    },\n    [onRemoveItem],\n  );\n\n  const itemId = getId();\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLInputElement>>(props, inputProperties);\n  return (\n    <span aria-labelledby={'editingItemPersona-' + itemId} className={css('ms-EditingItem', styles.editingContainer)}>\n      <input\n        {...nativeProps}\n        ref={editingInput}\n        autoCapitalize={'off'}\n        autoComplete={'off'}\n        onChange={_onInputChange}\n        onKeyDown={_onInputKeyDown}\n        onBlur={_onInputBlur}\n        data-lpignore={true}\n        className={styles.editingInput}\n        id={itemId}\n      />\n      {_renderEditingSuggestions()}\n    </span>\n  );\n};\n\ntype EditingItemProps<T> = Pick<\n  IDefaultEditingItemInnerProps<T>,\n  Exclude<keyof IDefaultEditingItemInnerProps<T>, keyof EditingItemComponentProps<T>>\n>;\n\nexport const DefaultEditingItem = <T extends any>(outerProps: EditingItemProps<T>) => (\n  innerProps: EditingItemComponentProps<T>,\n) => <DefaultEditingItemInner {...outerProps} {...innerProps} />;\n"]}