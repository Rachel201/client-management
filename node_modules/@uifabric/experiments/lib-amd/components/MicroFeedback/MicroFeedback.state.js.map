{"version":3,"file":"MicroFeedback.state.js","sourceRoot":"../src/","sources":["components/MicroFeedback/MicroFeedback.state.ts"],"names":[],"mappings":";;;IAiBa,QAAA,qBAAqB,GAAqC,UAAA,KAAK;QAClE,IAAA,iCAAY,CAAW;QAC/B,IAAM,OAAO,GAAG,cAAM,CAAwB,IAAI,CAAC,CAAC;QACpD,IAAM,UAAU,GAAG,cAAM,CAAwB,IAAI,CAAC,CAAC;QACjD,IAAA,gCAAuE,EAAtE,mBAAW,EAAE,sBAAyD,CAAC;QACxE,IAAA,gCAA+C,EAA9C,YAAI,EAAE,eAAwC,CAAC;QAChD,IAAA,4BAA2D,EAA1D,yBAAiB,EAAE,4BAAuC,CAAC;QAC5D,IAAA,4BAAuD,EAAtD,uBAAe,EAAE,0BAAqC,CAAC;QAE9D,IAAM,gBAAgB,GAAG,mBAAW,CAAC;YACnC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,IAAM,eAAe,GAAG,mBAAW,CAAC;YAClC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC1B,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;QAElB,IAAM,WAAW,GAAG,mBAAW,CAC7B,UAAC,OAAiB;YAChB,kEAAkE;YAClE,IAAM,WAAW,GAAa,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YACrE,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,CAAC,WAAW,CAAC,CAAC;YACrB,IAAI,WAAW,KAAK,SAAS,IAAI,YAAY,EAAE;gBAC7C,YAAY,CAAC,WAAW,CAAC,CAAC;aAC3B;QACH,CAAC,EACD,CAAC,YAAY,EAAE,IAAI,CAAC,CACrB,CAAC;QAEF,IAAM,UAAU,GAAG,mBAAW,CAAC;YAC7B,WAAW,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;QAElB,IAAM,aAAa,GAAG,mBAAW,CAAC;YAChC,WAAW,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;QAElB,IAAM,iBAAiB,GAAG,mBAAW,CAAC;YACpC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,IAAM,YAAY,GAAG,mBAAW,CAAC;YAC/B,kBAAkB,CAAC,IAAI,CAAC,CAAC;YAEzB,0CAA0C;YAC1C,cAAc,CAAE,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAuB,CAAC,CAAC;QAC7E,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAExB,IAAM,SAAS,yCACV,KAAK,KACR,IAAI,EAAE,IAAI,EACV,iBAAiB,mBAAA;YACjB,OAAO,SAAA;YACP,UAAU,YAAA;YACV,gBAAgB,kBAAA;YAChB,eAAe,iBAAA;YACf,YAAY,cAAA;YACZ,UAAU,YAAA;YACV,aAAa,eAAA;YACb,eAAe,iBAAA,GAChB,CAAC;QACF,OAAO,SAAS,CAAC;IACnB,CAAC,CAAC","sourcesContent":["import { IMicroFeedbackComponent, IMicroFeedbackViewProps, VoteType } from './MicroFeedback.types';\nimport { useCallback, useRef, useState } from 'react';\n\nexport type IMicroFeedbackState = Pick<\n  IMicroFeedbackViewProps,\n  | 'vote'\n  | 'isFollowUpVisible'\n  | 'likeRef'\n  | 'dislikeRef'\n  | 'onCalloutDismiss'\n  | 'onThanksDismiss'\n  | 'onThanksShow'\n  | 'onLikeVote'\n  | 'onDislikeVote'\n  | 'isThanksVisible'\n>;\n\nexport const useMicroFeedbackState: IMicroFeedbackComponent['state'] = props => {\n  const { sendFeedback } = props;\n  const likeRef = useRef<HTMLDivElement | null>(null);\n  const dislikeRef = useRef<HTMLDivElement | null>(null);\n  const [timerHandle, setTimerHandle] = useState<number | undefined>(undefined);\n  const [vote, setVote] = useState<VoteType>('no_vote');\n  const [isFollowUpVisible, setIsFollowUpVisible] = useState(false);\n  const [isThanksVisible, setIsThanksVisible] = useState(false);\n\n  const onCalloutDismiss = useCallback((): void => {\n    setIsFollowUpVisible(false);\n  }, []);\n\n  const onThanksDismiss = useCallback((): void => {\n    clearTimeout(timerHandle);\n    setIsThanksVisible(false);\n  }, [timerHandle]);\n\n  const processVote = useCallback(\n    (newVote: VoteType): void => {\n      // If the vote that is already selected is picked, then toggle off\n      const updatedVote: VoteType = vote === newVote ? 'no_vote' : newVote;\n      setIsFollowUpVisible(true);\n      setVote(updatedVote);\n      if (updatedVote !== 'no_vote' && sendFeedback) {\n        sendFeedback(updatedVote);\n      }\n    },\n    [sendFeedback, vote],\n  );\n\n  const onLikeVote = useCallback((): void => {\n    processVote('like');\n  }, [processVote]);\n\n  const onDislikeVote = useCallback((): void => {\n    processVote('dislike');\n  }, [processVote]);\n\n  const hideThanksMessage = useCallback((): void => {\n    setIsThanksVisible(false);\n  }, []);\n\n  const onThanksShow = useCallback((): void => {\n    setIsThanksVisible(true);\n\n    // Hide the Thanks message after 2 seconds\n    setTimerHandle((setTimeout(hideThanksMessage, 2000) as unknown) as number);\n  }, [hideThanksMessage]);\n\n  const viewProps: IMicroFeedbackViewProps = {\n    ...props,\n    vote: vote,\n    isFollowUpVisible,\n    likeRef,\n    dislikeRef,\n    onCalloutDismiss,\n    onThanksDismiss,\n    onThanksShow,\n    onLikeVote,\n    onDislikeVote,\n    isThanksVisible,\n  };\n  return viewProps;\n};\n"]}