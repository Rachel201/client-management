{"version":3,"file":"MicroFeedback.view.js","sourceRoot":"../src/","sources":["components/MicroFeedback/MicroFeedback.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @jsx withSlots */\nimport { Callout, IconButton, FocusZone, FocusZoneDirection, List, Stack, Text } from 'office-ui-fabric-react';\nimport { Button } from '../Button/Button';\nimport { IButtonTokens } from '../Button/Button.types';\nimport { withSlots, getSlots } from '../../Foundation';\n\nimport {\n  IMicroFeedbackComponent,\n  IMicroFeedbackProps,\n  IMicroFeedbackSlots,\n  IMicroFeedbackQuestion,\n} from './MicroFeedback.types';\n\nexport const MicroFeedbackView: IMicroFeedbackComponent['view'] = props => {\n  const {\n    children,\n    sendFollowUpIndex,\n    likeIconTitle,\n    dislikeIconTitle,\n    likeIconAriaLabel,\n    dislikeIconAriaLabel,\n    likeQuestion,\n    dislikeQuestion,\n    vote,\n    isFollowUpVisible,\n    isThanksVisible,\n    likeRef,\n    dislikeRef,\n    onCalloutDismiss,\n    onThanksDismiss,\n    onThanksShow,\n    onLikeVote,\n    onDislikeVote,\n    thanksText,\n    inline,\n  } = props;\n\n  const likeIcon = vote === 'like' ? 'LikeSolid' : 'Like';\n  const dislikeIcon = vote === 'dislike' ? 'DislikeSolid' : 'Dislike';\n  const hideDislikeCallout = vote !== 'dislike' || !isFollowUpVisible;\n  const hideLikeCallout = vote !== 'like' || !isFollowUpVisible;\n\n  const Slots = getSlots<IMicroFeedbackProps, IMicroFeedbackSlots>(props, {\n    root: Stack,\n    iconContainer: Stack,\n    followUpContainer: inline ? Stack : Callout,\n    followUpQuestion: Text,\n    followUpOptionList: List,\n    // eslint-disable-next-line deprecation/deprecation\n    followUpOption: Button,\n    followUpOptionText: Text,\n    thanksContainer: Callout,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  const followUpOptionTokens: IButtonTokens = { contentPadding: '6px 0px' };\n\n  const renderFollowup = (followUp: IMicroFeedbackQuestion, targetRef: HTMLDivElement | null): JSX.Element => {\n    const onRenderCalloutItem = (item: string, index: number | undefined): JSX.Element => {\n      const listOption = (): void => {\n        onCalloutDismiss();\n        if (sendFollowUpIndex && index !== undefined && followUp) {\n          sendFollowUpIndex(followUp!.id, index);\n          onThanksShow();\n        }\n      };\n\n      return (\n        <Slots.followUpOption\n          data-is-focusable={true}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={listOption}\n          tokens={followUpOptionTokens}\n        >\n          <Slots.followUpOptionText>{`${item}`}</Slots.followUpOptionText>\n        </Slots.followUpOption>\n      );\n    };\n\n    return (\n      <Slots.followUpContainer\n        gapSpace={0}\n        onDismiss={onCalloutDismiss}\n        role=\"alertdialog\"\n        setInitialFocus={true}\n        target={targetRef}\n      >\n        <FocusZone direction={FocusZoneDirection.vertical}>\n          <Slots.followUpQuestion block variant=\"small\">\n            {followUp.question}\n          </Slots.followUpQuestion>\n          <Slots.followUpOptionList\n            items={followUp.options}\n            // eslint-disable-next-line react/jsx-no-bind\n            onRenderCell={onRenderCalloutItem}\n          />\n        </FocusZone>\n      </Slots.followUpContainer>\n    );\n  };\n\n  const showThanks = (followUp: IMicroFeedbackQuestion | undefined, voteType: string): void => {\n    // If vote while thanks is showing, dismiss\n    if (isThanksVisible) {\n      onThanksDismiss();\n    }\n\n    // Show thanks if there is no follow up question and not  unselecting a vote\n    if (!followUp && vote !== voteType) {\n      onThanksShow();\n    }\n  };\n\n  const likeVoteClick = (): void => {\n    showThanks(likeQuestion, 'like');\n    onLikeVote();\n  };\n\n  const dislikeVoteClick = (): void => {\n    showThanks(dislikeQuestion, 'dislike');\n    onDislikeVote();\n  };\n\n  return (\n    <Slots.root>\n      <Slots.iconContainer horizontal>\n        {children}\n        <div ref={likeRef}>\n          <IconButton\n            menuIconProps={{ iconName: likeIcon }}\n            title={likeIconTitle}\n            ariaLabel={likeIconAriaLabel}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={likeVoteClick}\n          />\n        </div>\n        <div ref={dislikeRef}>\n          <IconButton\n            menuIconProps={{ iconName: dislikeIcon }}\n            title={dislikeIconTitle}\n            ariaLabel={dislikeIconAriaLabel}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={dislikeVoteClick}\n          />\n        </div>\n      </Slots.iconContainer>\n      {likeQuestion && !hideLikeCallout && renderFollowup(likeQuestion, likeRef.current)}\n      {dislikeQuestion && !hideDislikeCallout && renderFollowup(dislikeQuestion, dislikeRef.current)}\n      {thanksText && isThanksVisible && (\n        <Slots.thanksContainer\n          setInitialFocus={false}\n          target={vote === 'like' ? likeRef.current : dislikeRef.current}\n          gapSpace={0}\n          isBeakVisible={false}\n          onDismiss={onThanksDismiss}\n        >\n          <Slots.followUpOptionText block variant=\"small\">\n            {thanksText}\n          </Slots.followUpOptionText>\n        </Slots.thanksContainer>\n      )}\n    </Slots.root>\n  );\n};\n"]}