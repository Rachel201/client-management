{"version":3,"file":"FloatingSuggestionsList.js","sourceRoot":"../src/","sources":["components/FloatingSuggestionsComposite/FloatingSuggestionsList/FloatingSuggestionsList.tsx"],"names":[],"mappings":";;;IAYA,IAAM,aAAa,GAAG,8BAAkB,EAAqE,CAAC;IAEjG,QAAA,uBAAuB,GAAG,UAAe,KAAuC;QAC3F,IAAM,UAAU,GAAG,aAAa,CAAC,0CAAS,CAAC,CAAC;QACpC,IAAA,2BAAS,EAAE,uCAAe,EAAE,mDAAqB,EAAE,2BAAS,EAAE,6CAAkB,CAAW;QACnG,IAAM,gBAAgB,GAAG,CAAC,eAAe,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAErE,IAAM,SAAS,GAAG;YAChB,OAAO,kBAAkB,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAE,UAAU,CAAC,aAAa,IAAG,kBAAkB,CAAO,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1G,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG;YAEjB,IAAA,qCAAc,EACd,mDAAqB,EACrB,yCAAgB,EAChB,+CAAmB,EACnB,+EAAmC,CAC3B;YAEV,IAAI,gBAAgB,EAAE;gBACpB,OAAO,CACL,6BACE,SAAS,EAAE,eAAG,CAAC,gCAAgC,EAAE,UAAU,CAAC,oBAAoB,CAAC,EACjF,EAAE,EAAC,uBAAuB,EAC1B,IAAI,EAAC,MAAM,gBACC,mCAAmC,IAE9C,gBAAgB,CAAC,GAAG,CAAC,UAAC,eAAsD,EAAE,KAAa;oBAC1F,IAAM,UAAU,GAAG,mBAAmB,KAAK,CAAC,CAAC,IAAI,mBAAmB,KAAK,KAAK,CAAC;oBAC/E,OAAO,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CACpC,6BACE,EAAE,EAAE,YAAY,GAAG,KAAK,EACxB,GAAG,EAAE,YAAY,GAAG,KAAK,EACzB,IAAI,EAAC,UAAU,gBACH,eAAe,CAAC,SAAS;wBAErC,oBAAC,yEAAmC,IAClC,EAAE,EAAE,iBAAiB,GAAG,KAAK,EAC7B,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,eAAe,CAAC,UAAU,EACtC,SAAS,EAAE,eAAe,CAAC,SAAS,EACpC,SAAS,EAAE,eAAe,CAAC,SAAS,GACpC,CACE,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;gBACX,CAAC,CAAC,CACE,CACP,CAAC;aACH;YACD,IAAI,cAAc,EAAE;gBAClB,OAAO,cAAc,CAAC,eAAe,CAAC,CAAC;aACxC;YACD,OAAO,qBAAqB,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAE,UAAU,CAAC,KAAK,IAAG,qBAAqB,CAAO,CAAC,CAAC,CAAC,IAAI,CAAC;QACxG,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG;YACX,IAAA,qCAAc,EAAE,yCAAgB,EAAE,+CAAmB,EAAE,+EAAmC,CAAW;YAE7G,IAAI,gBAAgB,EAAE;gBACpB,OAAO,CACL,6BACE,SAAS,EAAE,eAAG,CAAC,gCAAgC,EAAE,UAAU,CAAC,oBAAoB,CAAC,EACjF,EAAE,EAAC,uBAAuB,EAC1B,IAAI,EAAC,MAAM,gBACC,mCAAmC,IAE9C,gBAAgB,CAAC,GAAG,CAAC,UAAC,eAAsD,EAAE,KAAa;oBAC1F,IAAM,UAAU,GAAG,mBAAmB,KAAK,CAAC,CAAC,IAAI,mBAAmB,KAAK,KAAK,CAAC;oBAC/E,OAAO,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CACpC,6BACE,EAAE,EAAE,YAAY,GAAG,KAAK,EACxB,GAAG,EAAE,YAAY,GAAG,KAAK,EACzB,IAAI,EAAC,UAAU,gBACH,eAAe,CAAC,SAAS;wBAErC,oBAAC,yEAAmC,IAClC,EAAE,EAAE,iBAAiB,GAAG,KAAK,EAC7B,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,eAAe,CAAC,UAAU,EACtC,SAAS,EAAE,eAAe,CAAC,SAAS,EACpC,SAAS,EAAE,eAAe,CAAC,SAAS,GACpC,CACE,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;gBACX,CAAC,CAAC,CACE,CACP,CAAC;aACH;YACD,IAAI,cAAc,EAAE;gBAClB,OAAO,cAAc,CAAC,eAAe,CAAC,CAAC;aACxC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,IAAM,iBAAiB,GAAG;YACxB,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO,IAAI,CAAC;aACb;YAGC,IAAA,iCAAY,EACZ,yDAAwB,EACxB,+CAAmB,EACnB,6DAA0B,EAC1B,mEAA6B,EAC7B,6CAAkB,EAClB,+BAAW,EACX,uDAAuB,EACvB,+BAAW,CACH;YAEV,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,oBAAoB,EAAE,IAAI,EAAC,MAAM,gBAAa,6BAA6B,IACnG,eAAe,CAAC,GAAG,CAAC,UAAC,cAAc,EAAE,KAAK,IAAK,OAAA,CAC9C,6BACE,GAAG,EAAE,gCAA8B,KAAO,EAC1C,EAAE,EAAE,+BAA6B,KAAO,EACxC,IAAI,EAAC,UAAU,gBACH,cAAc,CAAC,SAAS,EACpC,KAAK,EAAE;oBACL,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM;iBAC1C;gBAED,oBAAC,qDAA2B,IAC1B,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,OAAO,EAAE,WAAW,EACpB,UAAU,EAAE,KAAK,KAAK,uBAAuB,EAC7C,YAAY,EAAE,kBAAkB,EAChC,kBAAkB,EAAE,YAAY,EAChC,SAAS,EAAE,wBAAwB,EACnC,qBAAqB,EAAE,mBAAmB,EAC1C,gBAAgB,EAAE,cAAc,CAAC,gBAAgB,IAAI,0BAA0B,EAC/E,WAAW,EAAE,cAAc,CAAC,WAAW,EACvC,GAAG,EAAE,cAAc,CAAC,GAAG,EACvB,EAAE,EAAE,cAAc,CAAC,EAAE,GACrB,CACE,CACP,EAxB+C,CAwB/C,CAAC,CACE,CACP,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAc,SAAS;YACpF,YAAY,EAAE;YACd,gBAAgB;gBACf,CAAC,CAAC,qBAAqB;oBACrB,CAAC,CAAC,qBAAqB,CAAC,SAAS,EAAE,SAAS,CAAC;oBAC7C,CAAC,CAAC,SAAS,EAAE;gBACf,CAAC,CAAC,iBAAiB,EAAE;YACtB,YAAY,EAAE,CACX,CACP,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, css } from '../../../Utilities';\nimport {\n  IFloatingSuggestionsListStyleProps,\n  IFloatingSuggestionsListStyle,\n  IFloatingSuggestionsListProps,\n} from './FloatingSuggestionsList.types';\nimport { FloatingSuggestionsItemMemo } from '../FloatingSuggestionsItem/FloatingSuggestionsItem';\nimport { getStyles } from './FloatingSuggestionsList.styles';\nimport { IFloatingSuggestionsHeaderFooterProps } from '../FloatingSuggestionsHeaderFooterItem/FloatingSuggestionsHeaderFooterItem.types';\nimport { FloatingSuggestionsHeaderFooterItem } from '../FloatingSuggestionsHeaderFooterItem/FloatingSuggestionsHeaderFooterItem';\n\nconst getClassNames = classNamesFunction<IFloatingSuggestionsListStyleProps, IFloatingSuggestionsListStyle>();\n\nexport const FloatingSuggestionsList = <T extends {}>(props: IFloatingSuggestionsListProps<T>): JSX.Element => {\n  const classNames = getClassNames(getStyles);\n  const { className, suggestionItems, onRenderNoResultFound, ariaLabel, noResultsFoundText } = props;\n  const hasNoSuggestions = !suggestionItems || !suggestionItems.length;\n\n  const noResults = () => {\n    return noResultsFoundText ? <div className={classNames.noSuggestions}>{noResultsFoundText}</div> : null;\n  };\n\n  const renderHeader = (): JSX.Element | null => {\n    const {\n      onRenderHeader,\n      suggestionsHeaderText,\n      headerItemsProps,\n      selectedHeaderIndex,\n      suggestionsHeaderContainerAriaLabel,\n    } = props;\n\n    if (headerItemsProps) {\n      return (\n        <div\n          className={css('ms-Suggestions-headerContainer', classNames.suggestionsContainer)}\n          id=\"suggestionHeader-list\"\n          role=\"list\"\n          aria-label={suggestionsHeaderContainerAriaLabel}\n        >\n          {headerItemsProps.map((headerItemProps: IFloatingSuggestionsHeaderFooterProps, index: number) => {\n            const isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n            return headerItemProps.shouldShow() ? (\n              <div\n                id={'sug-header' + index}\n                key={'sug-header' + index}\n                role=\"listitem\"\n                aria-label={headerItemProps.ariaLabel}\n              >\n                <FloatingSuggestionsHeaderFooterItem\n                  id={'sug-header-item' + index}\n                  isSelected={isSelected}\n                  renderItem={headerItemProps.renderItem}\n                  onExecute={headerItemProps.onExecute}\n                  className={headerItemProps.className}\n                />\n              </div>\n            ) : null;\n          })}\n        </div>\n      );\n    }\n    if (onRenderHeader) {\n      return onRenderHeader(suggestionItems);\n    }\n    return suggestionsHeaderText ? <div className={classNames.title}>{suggestionsHeaderText}</div> : null;\n  };\n\n  const renderFooter = (): JSX.Element | null => {\n    const { onRenderFooter, footerItemsProps, selectedFooterIndex, suggestionsFooterContainerAriaLabel } = props;\n\n    if (footerItemsProps) {\n      return (\n        <div\n          className={css('ms-Suggestions-footerContainer', classNames.suggestionsContainer)}\n          id=\"suggestionFooter-list\"\n          role=\"list\"\n          aria-label={suggestionsFooterContainerAriaLabel}\n        >\n          {footerItemsProps.map((footerItemProps: IFloatingSuggestionsHeaderFooterProps, index: number) => {\n            const isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n            return footerItemProps.shouldShow() ? (\n              <div\n                id={'sug-footer' + index}\n                key={'sug-footer' + index}\n                role=\"listitem\"\n                aria-label={footerItemProps.ariaLabel}\n              >\n                <FloatingSuggestionsHeaderFooterItem\n                  id={'sug-footer-item' + index}\n                  isSelected={isSelected}\n                  renderItem={footerItemProps.renderItem}\n                  onExecute={footerItemProps.onExecute}\n                  className={footerItemProps.className}\n                />\n              </div>\n            ) : null;\n          })}\n        </div>\n      );\n    }\n    if (onRenderFooter) {\n      return onRenderFooter(suggestionItems);\n    }\n    return null;\n  };\n\n  const renderSuggestions = (): JSX.Element | null => {\n    if (suggestionItems.length === 0) {\n      return null;\n    }\n\n    const {\n      onRenderItem,\n      suggestionsItemClassName,\n      removeItemAriaLabel,\n      showSuggestionRemoveButton,\n      suggestionsContainerAriaLabel,\n      onSuggestionRemove,\n      onItemClick,\n      selectedSuggestionIndex,\n      pickerWidth,\n    } = props;\n\n    return (\n      <div className={classNames.suggestionsContainer} role=\"list\" aria-label={suggestionsContainerAriaLabel}>\n        {suggestionItems.map((suggestionItem, index) => (\n          <div\n            key={`FloatingSuggestionsItemKey-${index}`}\n            id={`FloatingSuggestionsItemId-${index}`}\n            role=\"listitem\"\n            aria-label={suggestionItem.ariaLabel}\n            style={{\n              width: pickerWidth ? pickerWidth : 'auto',\n            }}\n          >\n            <FloatingSuggestionsItemMemo\n              item={suggestionItem.item}\n              onClick={onItemClick}\n              isSelected={index === selectedSuggestionIndex}\n              onRemoveItem={onSuggestionRemove}\n              onRenderSuggestion={onRenderItem}\n              className={suggestionsItemClassName}\n              removeButtonAriaLabel={removeItemAriaLabel}\n              showRemoveButton={suggestionItem.showRemoveButton || showSuggestionRemoveButton}\n              displayText={suggestionItem.displayText}\n              key={suggestionItem.key}\n              id={suggestionItem.id}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className={css(classNames.root, className ? className : '')} aria-label={ariaLabel}>\n      {renderHeader()}\n      {hasNoSuggestions\n        ? onRenderNoResultFound\n          ? onRenderNoResultFound(undefined, noResults)\n          : noResults()\n        : renderSuggestions()}\n      {renderFooter()}\n    </div>\n  );\n};\n"]}