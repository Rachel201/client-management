{"version":3,"file":"FloatingSuggestionsList.styles.js","sourceRoot":"../src/","sources":["components/FloatingSuggestionsComposite/FloatingSuggestionsList/FloatingSuggestionsList.styles.ts"],"names":[],"mappings":";;;IAGA,IAAM,gBAAgB,GAAG;QACvB,IAAI,EAAE,4BAA4B;QAClC,oBAAoB,EAAE,sCAAsC;QAC5D,KAAK,EAAE,kCAAkC;QACzC,aAAa,EAAE,0CAA0C;KAC1D,CAAC;IAEW,QAAA,SAAS,GAAG,UAAC,KAAyC;QACjE,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;QAEzB,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;SACnF;QAEO,IAAA,uBAAO,EAAE,mBAAK,CAAW;QACzB,IAAA,mCAAY,EAAE,mCAAY,EAAE,6CAAiB,CAAa;QAClE,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAEhE,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,CAAC,IAAI;gBACf;oBACE,QAAQ,EAAE,OAAO;iBAClB;aACF;YACD,oBAAoB,EAAE;gBACpB,UAAU,CAAC,oBAAoB;gBAC/B;oBACE,SAAS,EAAE,MAAM;oBACjB,SAAS,EAAE,MAAM;oBACjB,SAAS,EAAE,OAAO;oBAClB,YAAY,EAAE,eAAa,YAAc;iBAC1C;aACF;YACD,KAAK,EAAE;gBACL,UAAU,CAAC,KAAK;gBAChB;oBACE,OAAO,EAAE,QAAQ;oBACjB,KAAK,EAAE,YAAY;oBACnB,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;oBAC9B,UAAU,EAAE,MAAM;oBAClB,YAAY,EAAE,eAAa,YAAc;iBAC1C;aACF;YACD,aAAa,EAAE;gBACb,UAAU,CAAC,aAAa;gBACxB;oBACE,SAAS,EAAE,QAAQ;oBACnB,KAAK,EAAE,iBAAiB;oBACxB,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;oBAC9B,UAAU,EAAE,MAAM;iBACnB;aACF;SACF,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import { IFloatingSuggestionsListStyleProps, IFloatingSuggestionsListStyle } from './FloatingSuggestionsList.types';\nimport { getGlobalClassNames, getTheme } from '@uifabric/styling';\n\nconst GlobalClassNames = {\n  root: 'ms-FloatingSuggestionsList',\n  suggestionsContainer: 'ms-FloatingSuggestionsList-container',\n  title: 'ms-FloatingSuggestionsList-title',\n  noSuggestions: 'ms-FloatingSuggestionsList-noSuggestions',\n};\n\nexport const getStyles = (props: IFloatingSuggestionsListStyleProps): IFloatingSuggestionsListStyle => {\n  const theme = getTheme();\n\n  if (!theme) {\n    throw new Error('theme is undefined or null in Editing item getStyles function.');\n  }\n\n  const { palette, fonts } = theme;\n  const { themePrimary, neutralLight, neutralPrimaryAlt } = palette;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        minWidth: '260px',\n      },\n    ],\n    suggestionsContainer: [\n      classNames.suggestionsContainer,\n      {\n        overflowX: 'auto',\n        overflowY: 'auto',\n        maxHeight: '300px',\n        borderBottom: `1px solid ${neutralLight}`,\n      },\n    ],\n    title: [\n      classNames.title,\n      {\n        padding: '0 12px',\n        color: themePrimary,\n        fontSize: fonts.small.fontSize,\n        lineHeight: '40px',\n        borderBottom: `1px solid ${neutralLight}`,\n      },\n    ],\n    noSuggestions: [\n      classNames.noSuggestions,\n      {\n        textAlign: 'center',\n        color: neutralPrimaryAlt,\n        fontSize: fonts.small.fontSize,\n        lineHeight: '30px',\n      },\n    ],\n  };\n};\n"]}