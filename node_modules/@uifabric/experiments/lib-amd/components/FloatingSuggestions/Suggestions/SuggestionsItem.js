define(["require", "exports", "tslib", "react", "office-ui-fabric-react/lib/Utilities", "office-ui-fabric-react/lib/Button", "./SuggestionsItem.styles"], function (require, exports, tslib_1, React, Utilities_1, Button_1, SuggestionsItem_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var getClassNames = Utilities_1.classNamesFunction();
    exports.SuggestionsItemInner = function (props) {
        var suggestionModel = props.suggestionModel, RenderSuggestion = props.onRenderSuggestion, onClick = props.onClick, className = props.className, onRemoveItem = props.onRemoveItem, isSelectedOverride = props.isSelectedOverride, removeButtonAriaLabel = props.removeButtonAriaLabel, styles = props.styles, theme = props.theme;
        var classNames = styles
            ? // TODO don't do this horrible hack to get around `styled` typing problems.
                getClassNames(styles || SuggestionsItem_styles_1.getStyles, {
                    theme: theme,
                    className: className,
                    suggested: suggestionModel.selected || isSelectedOverride,
                })
            : {
                itemButton: Utilities_1.css('ms-Suggestions-itemButton'),
                closeButton: Utilities_1.css('ms-Suggestions-closeButton'),
            };
        return (React.createElement("div", { className: classNames.root },
            React.createElement(Button_1.CommandButton, { onClick: onClick, className: classNames.itemButton },
                React.createElement(RenderSuggestion, tslib_1.__assign({}, props.suggestionModel))),
            props.showRemoveButton ? (React.createElement(Button_1.IconButton, { iconProps: { iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }, title: removeButtonAriaLabel, ariaLabel: removeButtonAriaLabel, onClick: onRemoveItem, className: classNames.closeButton })) : null));
    };
    exports.SuggestionsItem = Utilities_1.styled(exports.SuggestionsItemInner, SuggestionsItem_styles_1.getStyles);
});
//# sourceMappingURL=SuggestionsItem.js.map