{"version":3,"file":"LayoutGroup.js","sourceRoot":"../src/","sources":["components/LayoutGroup/LayoutGroup.tsx"],"names":[],"mappings":";;;IAKA;QAAiC,uCAAsC;QAAvE;YAAA,qEAiEC;YATS,iBAAW,GAAG,UAAC,OAA2B;gBAChD,IAAI,OAAO,KAAK,KAAK,EAAE;oBACrB,OAAO,UAAU,CAAC;iBACnB;qBAAM,IAAI,OAAO,KAAK,QAAQ,EAAE;oBAC/B,OAAO,QAAQ,CAAC;iBACjB;qBAAM;oBACL,OAAO,YAAY,CAAC;iBACrB;YACH,CAAC,CAAC;;QACJ,CAAC;QA1DQ,4BAAM,GAAb;YACQ,IAAA,eAAwD,EAAtD,sBAAQ,EAAE,wBAAS,EAAE,wBAAS,EAAE,oBAAsB,CAAC;YAE/D,IAAM,QAAQ,GAAG,0BAAc,CAAuC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,CAAC;YAEjG,IAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAExD,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,KAAuB,EAAE,CAAS;gBAC5E,IAAM,WAAW,GAAG,CAAC,KAAK,gBAAgB,GAAG,CAAC,CAAC;gBAE/C,yBAAyB;gBACzB,OAAO,CACL,6BACE,SAAS,EAAE,qBAAW,CACpB,qBAAqB,EACrB,SAAS,KAAK,YAAY;wBACxB,CAAC,WAAW,IAAI;wBACd,WAAW,EAAE,SAAS,GAAG,IAAI;qBAC9B,EACH,SAAS,KAAK,UAAU;wBACtB,CAAC,WAAW,IAAI;wBACd,YAAY,EAAE,SAAS,GAAG,IAAI;qBAC/B,EACH,OAAO,KAAK,MAAM,IAAI;wBACpB,SAAS,EAAE,GAAG;wBACd,QAAQ,EAAE,CAAC;qBACZ,CACF,IAEA,KAAK,CACF,CACP,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,mBAAmB;YACnB,OAAO,CACL,gDACM,QAAQ,IACZ,SAAS,EAAE,qBAAW,CAAC,gBAAgB,EAAE;oBACvC,OAAO,EAAE,MAAM;oBACf,aAAa,EAAE,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ;oBAC5D,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;iBAC7B,CAAC,KAEd,KAAK,CACF,CACP,CAAC;QACJ,CAAC;QArDa,wBAAY,GAAsB;YAC9C,SAAS,EAAE,CAAC;YACZ,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,OAAO;SACjB,CAAC;QA4DJ,kBAAC;KAAA,AAjED,CAAiC,KAAK,CAAC,SAAS,GAiE/C;IAjEY,kCAAW","sourcesContent":["import * as React from 'react';\nimport { ILayoutGroupProps } from './LayoutGroup.types';\nimport { IRawStyle, mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { getNativeProps, divProperties } from 'office-ui-fabric-react/lib/Utilities';\n\nexport class LayoutGroup extends React.Component<ILayoutGroupProps, {}> {\n  public static defaultProps: ILayoutGroupProps = {\n    layoutGap: 8,\n    direction: 'vertical',\n    justify: 'start',\n  };\n\n  public render(): JSX.Element | null {\n    const { children, direction, layoutGap, justify } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const numberOfChildren = React.Children.count(children);\n\n    const group = React.Children.map(children, (child: React.ReactChild, i: number) => {\n      const isLastChild = i === numberOfChildren - 1;\n\n      // Render individual item\n      return (\n        <div\n          className={mergeStyles(\n            'ms-LayoutGroup-item',\n            direction === 'horizontal' &&\n              !isLastChild && {\n                marginRight: layoutGap + 'px',\n              },\n            direction === 'vertical' &&\n              !isLastChild && {\n                marginBottom: layoutGap + 'px',\n              },\n            justify === 'fill' && {\n              flexBasis: '0',\n              flexGrow: 1,\n            },\n          )}\n        >\n          {child}\n        </div>\n      );\n    });\n\n    // Render all items\n    return (\n      <div\n        {...divProps}\n        className={mergeStyles('ms-LayoutGroup', {\n          display: 'flex',\n          flexDirection: direction === 'horizontal' ? 'row' : 'column',\n          justifyContent: this._getJustify(justify),\n        } as IRawStyle)}\n      >\n        {group}\n      </div>\n    );\n  }\n\n  private _getJustify = (justify: string | undefined): string => {\n    if (justify === 'end') {\n      return 'flex-end';\n    } else if (justify === 'center') {\n      return 'center';\n    } else {\n      return 'flex-start';\n    }\n  };\n}\n"]}