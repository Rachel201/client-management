{"version":3,"file":"VerticalPersona.types.js","sourceRoot":"../src/","sources":["components/Persona/Vertical/VerticalPersona.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IStyle, IFontWeight } from '@uifabric/styling';\nimport { IComponent, IHTMLSlot, IStyleableComponentProps } from '../../../Foundation';\nimport { ITextSlot } from 'office-ui-fabric-react';\nimport { IPersonaCoinSlot } from '../../PersonaCoin/PersonaCoin.types';\n\nexport type IVerticalPersonaComponent = IComponent<\n  IVerticalPersonaProps,\n  IVerticalPersonaTokens,\n  IVerticalPersonaStyles\n>;\n\n// These types are redundant with IVerticalPersonaComponent but are needed until TS function return widening issue\n// is resolved: https://github.com/Microsoft/TypeScript/issues/241\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\nexport type IVerticalPersonaTokenReturnType = ReturnType<Extract<IVerticalPersonaComponent['tokens'], Function>>;\nexport type IVerticalPersonaStylesReturnType = ReturnType<Extract<IVerticalPersonaComponent['styles'], Function>>;\n\nexport interface IVerticalPersonaSlots {\n  root?: IHTMLSlot;\n  primaryText?: ITextSlot;\n  secondaryText?: ITextSlot;\n  coin?: IPersonaCoinSlot;\n}\n\n// Extending IStyleableComponentProps will automatically add stylable props for you, such as styles and theme.\n// If you don't want these props to be included in your component, just remove this extension.\nexport interface IVerticalPersonaProps\n  extends IVerticalPersonaSlots,\n    IStyleableComponentProps<IVerticalPersonaProps, IVerticalPersonaTokens, IVerticalPersonaStyles> {\n  vertical: true;\n  text: string;\n}\n\nexport interface IVerticalPersonaStyles {\n  root?: IStyle;\n  primaryText?: IStyle;\n  secondaryText?: IStyle;\n  coin?: IStyle; // TODO: Check if this works after Jason his PR\n}\n\nexport interface IVerticalPersonaTokens {\n  verticalPersonaWidth?: number;\n  fontFamily?: string;\n  horizontalTextPadding?: number;\n  primaryTextPaddingTop?: string;\n  primaryTextFontSize?: string;\n  primaryTextFontWeight?: IFontWeight;\n  secondaryTextPaddingTop?: string;\n  secondaryTextFontSize?: string;\n  secondaryTextFontWeight?: IFontWeight;\n}\n"]}