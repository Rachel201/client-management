{"version":3,"file":"textHelpers.js","sourceRoot":"../src/","sources":["utilities/textHelpers.ts"],"names":[],"mappings":";;;IAEA,IAAM,iBAAiB,GAAG,2BAAe,CACvC,cAAwC,OAAA,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,EAA1D,CAA0D,EAClG,CAAC,CACF,CAAC;IAEF,SAAgB,gBAAgB,CAAC,UAAkB,EAAE,IAAY,EAAE,SAAiB;QAClF,IAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;QAEpC,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QAED,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;QAEzB,IAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QAElD,OAAO,SAAS,IAAI,UAAU,CAAC;IACjC,CAAC;IAZD,4CAYC","sourcesContent":["import { memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\n\nconst getContextOrFalse = memoizeFunction(\n  (): CanvasRenderingContext2D | false => document.createElement('canvas').getContext('2d') || false,\n  1,\n);\n\nexport function isSingleLineText(lineLength: number, text: string, textStyle: string): boolean {\n  const context = getContextOrFalse();\n\n  if (!context) {\n    return false;\n  }\n\n  context.font = textStyle;\n\n  const textWidth = context.measureText(text).width;\n\n  return textWidth <= lineLength;\n}\n"]}