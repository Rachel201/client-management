{"version":3,"file":"PersonaCoin.state.js","sourceRoot":"../src/","sources":["components/PersonaCoin/PersonaCoin.state.ts"],"names":[],"mappings":";;;AAAA,+BAA8C;AAC9C,iEAAwD;AAG3C,QAAA,mBAAmB,GAAmC,UAAA,KAAK;IACtE,wGAAwG;IACxG,8BAA8B;IACxB,IAAA,4BAAuD,EAAtD,uBAAe,EAAE,0BAAqC,CAAC;IAEtD,IAAA,2DAAyB,CAAW;IAE5C,IAAM,0BAA0B,GAAG,mBAAW,CAC5C,UAAC,iBAAiC;QAChC,IAAI,yBAAyB,EAAE;YAC7B,yBAAyB,CAAC,iBAAiB,CAAC,CAAC;SAC9C;QAED,kBAAkB,CAAC,iBAAiB,KAAK,uCAAc,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC,EACD,CAAC,yBAAyB,CAAC,CAC5B,CAAC;IAEF,IAAM,SAAS,yCACV,KAAK,KACR,eAAe,iBAAA,EACf,yBAAyB,EAAE,0BAA0B,GACtD,CAAC;IAEF,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import { useCallback, useState } from 'react';\nimport { ImageLoadState } from 'office-ui-fabric-react';\nimport { IPersonaCoinViewProps, IPersonaCoinComponent } from './PersonaCoin.types';\n\nexport const usePersonaCoinState: IPersonaCoinComponent['state'] = props => {\n  // TODO: isPictureLoaded was controlled, does it need to be? it's not exposed through component props...\n  //       For now use useState.\n  const [isPictureLoaded, setIsPictureLoaded] = useState(false);\n\n  const { onPhotoLoadingStateChange } = props;\n\n  const _onPhotoLoadingStateChange = useCallback(\n    (newImageLoadState: ImageLoadState): void => {\n      if (onPhotoLoadingStateChange) {\n        onPhotoLoadingStateChange(newImageLoadState);\n      }\n\n      setIsPictureLoaded(newImageLoadState === ImageLoadState.loaded);\n    },\n    [onPhotoLoadingStateChange],\n  );\n\n  const viewProps: IPersonaCoinViewProps = {\n    ...props,\n    isPictureLoaded,\n    onPhotoLoadingStateChange: _onPhotoLoadingStateChange,\n  };\n\n  return viewProps;\n};\n"]}