{"version":3,"file":"useSelectedItems.js","sourceRoot":"../src/","sources":["components/UnifiedPicker/hooks/useSelectedItems.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Selection } from '../../../Utilities';\n\nexport interface IUseSelectedItemsResponse<T> {\n  selectedItems: T[];\n  setSelectedItems: (items: T[]) => void;\n  addItems: (items: T[]) => void;\n  dropItemsAt: (insertIndex: number, itemsToAdd: T[], indicesToRemove: number[]) => void;\n  removeItemAt: (index: number) => void;\n  removeItem: (item: T) => void;\n  replaceItem: (itemToReplace: T, itemsToReplaceWith: T[]) => void;\n  removeItems: (itemsToRemove: T[]) => void;\n  removeSelectedItems: () => void;\n  getSelectedItems: () => T[];\n  hasSelectedItems: () => boolean;\n  unselectAll: () => void;\n}\n\nexport const useSelectedItems = <T extends {}>(\n  selection: Selection,\n  selectedItems?: T[],\n): IUseSelectedItemsResponse<T> => {\n  const [items, setSelectedItems] = React.useState(selectedItems || []);\n\n  React.useEffect(\n    () => {\n      if (selectedItems !== undefined) {\n        selection.setItems(selectedItems);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- we want to do this once\n    [],\n  );\n\n  React.useEffect(() => {\n    setSelectedItems(selectedItems ? selectedItems : []);\n  }, [selectedItems]);\n\n  const addItems = React.useCallback(\n    (itemsToAdd: T[]): void => {\n      const newItems: T[] = items.concat(itemsToAdd);\n      setSelectedItems(newItems);\n      selection.setItems(newItems);\n    },\n    [items, selection],\n  );\n\n  const dropItemsAt = React.useCallback(\n    (insertIndex: number, itemsToAdd: T[], indicesToRemove: number[]): void => {\n      const currentItems: T[] = [...items];\n      const updatedItems: T[] = [];\n\n      for (let i = 0; i < currentItems.length; i++) {\n        const item = currentItems[i];\n        // If this is the insert before index, insert the dragged items, then the current item\n        if (i === insertIndex) {\n          itemsToAdd.forEach(draggedItem => {\n            updatedItems.push(draggedItem);\n          });\n        }\n        if (!indicesToRemove.includes(i)) {\n          // only insert items into the new list that are not being dragged\n          updatedItems.push(item);\n        }\n      }\n      // if the insert index is at the end, add them now\n      if (insertIndex === currentItems.length) {\n        itemsToAdd.forEach(draggedItem => {\n          updatedItems.push(draggedItem);\n        });\n      }\n      setSelectedItems(updatedItems);\n      selection.setItems(updatedItems);\n    },\n    [items, selection],\n  );\n\n  const removeItemAt = React.useCallback(\n    (index: number): void => {\n      const currentItems: T[] = [...items];\n      const updatedItems: T[] = currentItems.slice(0, index).concat(currentItems.slice(index + 1));\n      setSelectedItems(updatedItems);\n      selection.setItems(updatedItems);\n    },\n    [items, selection],\n  );\n\n  const removeItem = React.useCallback(\n    (item: T): void => {\n      const currentItems: T[] = [...items];\n      const index: number = currentItems.indexOf(item);\n      removeItemAt(index);\n    },\n    [items, removeItemAt],\n  );\n\n  const replaceItem = React.useCallback(\n    (itemToReplace: T, itemsToReplaceWith: T[]): void => {\n      const currentItems: T[] = [...items];\n      const index: number = items.indexOf(itemToReplace);\n\n      if (index > -1) {\n        const updatedItems = currentItems\n          .slice(0, index)\n          .concat(itemsToReplaceWith)\n          .concat(currentItems.slice(index + 1));\n        setSelectedItems(updatedItems);\n        selection.setItems(updatedItems);\n      }\n    },\n    [items, selection],\n  );\n\n  const removeItems = React.useCallback(\n    (itemsToRemove: any[]): void => {\n      const currentItems: T[] = [...items];\n      const updatedItems: T[] = currentItems;\n      // Intentionally not using .filter here as we want to only remove a specific\n      // item in case of duplicates of same item.\n      itemsToRemove.forEach(item => {\n        const index: number = updatedItems.indexOf(item);\n        updatedItems.splice(index, 1);\n      });\n      setSelectedItems(updatedItems);\n      selection.setItems(updatedItems);\n    },\n    [items, selection],\n  );\n\n  const hasSelectedItems = React.useCallback((): Boolean => {\n    if (items.length && selection.getSelectedCount() > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [items.length, selection]);\n\n  const getSelectedItems = React.useCallback((): T[] => {\n    if (hasSelectedItems()) {\n      return selection.getSelection() as T[];\n    } else {\n      return [];\n    }\n  }, [hasSelectedItems, selection]);\n\n  const removeSelectedItems = React.useCallback((): void => {\n    removeItems(getSelectedItems());\n  }, [removeItems, getSelectedItems]);\n\n  const unselectAll = React.useCallback((): void => {\n    if (hasSelectedItems()) {\n      selection.setAllSelected(false);\n    }\n  }, [hasSelectedItems, selection]);\n\n  return {\n    selectedItems: items,\n    setSelectedItems: setSelectedItems,\n    addItems: addItems,\n    dropItemsAt: dropItemsAt,\n    removeItemAt: removeItemAt,\n    removeItem: removeItem,\n    replaceItem: replaceItem,\n    removeItems: removeItems,\n    removeSelectedItems: removeSelectedItems,\n    getSelectedItems: getSelectedItems,\n    hasSelectedItems: hasSelectedItems,\n    unselectAll: unselectAll,\n  } as IUseSelectedItemsResponse<T>;\n};\n"]}