{"version":3,"file":"UnifiedPicker.js","sourceRoot":"../src/","sources":["components/UnifiedPicker/UnifiedPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getStyles } from './UnifiedPicker.styles';\nimport { classNamesFunction, css, SelectionMode, Selection, KeyCodes } from '../../Utilities';\nimport { DragDropHelper } from 'office-ui-fabric-react/lib/utilities/dragdrop/DragDropHelper';\nimport { IUnifiedPickerStyleProps, IUnifiedPickerStyles } from './UnifiedPicker.styles';\nimport {\n  FocusZoneDirection,\n  FocusZone,\n  SelectionZone,\n  Autofill,\n  IInputProps,\n  IDragDropEvents,\n} from 'office-ui-fabric-react';\nimport { IUnifiedPickerProps } from './UnifiedPicker.types';\nimport { useFloatingSuggestionItems } from './hooks/useFloatingSuggestionItems';\nimport { useSelectedItems } from './hooks/useSelectedItems';\nimport { IFloatingSuggestionItemProps } from '../../FloatingSuggestionsComposite';\nimport { getTheme } from 'office-ui-fabric-react/lib/Styling';\nimport { mergeStyles } from '@uifabric/merge-styles';\nimport { IDragDropContext } from 'office-ui-fabric-react/lib/utilities/dragdrop/interfaces';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\n\nexport const UnifiedPicker = <T extends {}>(props: IUnifiedPickerProps<T>): JSX.Element => {\n  const getClassNames = classNamesFunction<IUnifiedPickerStyleProps, IUnifiedPickerStyles>();\n  const classNames = getClassNames(getStyles);\n\n  const {\n    dragDropEvents,\n    onKeyDown,\n    onDropAutoFill,\n    onPaste,\n    className,\n    focusZoneProps,\n    inputProps,\n    onRenderSelectedItems,\n    selectedItemsListProps,\n    onRenderFloatingSuggestions,\n    floatingSuggestionProps,\n    headerComponent,\n    onInputChange,\n    customClipboardType,\n    onValidateInput,\n  } = props;\n\n  const {\n    pickerWidth,\n    suggestions,\n    selectedSuggestionIndex,\n    selectedFooterIndex,\n    selectedHeaderIndex,\n    pickerSuggestionsProps,\n    isSuggestionsVisible,\n    onSuggestionSelected,\n    onFloatingSuggestionsDismiss,\n    onRemoveSuggestion,\n  } = props.floatingSuggestionProps;\n\n  const {\n    onItemsRemoved: selectedItemsListOnItemsRemoved,\n    dropItemsAt: selectedItemsListDropItemsAt,\n    getItemCopyText: selectedItemsListGetItemCopyText,\n    replaceItem: selectedItemsListReplaceItem,\n    itemsAreEqual,\n    deserializeItemsFromDrop,\n    serializeItemsForDrag,\n    createGenericItem,\n  } = props.selectedItemsListProps;\n\n  const { onClick: inputPropsOnClick, onFocus: inputPropsOnFocus } = props.inputProps || {};\n\n  const rootRef = React.createRef<HTMLDivElement>();\n  const input = React.useRef<Autofill>(null);\n  const [selection, setSelection] = React.useState(new Selection({ onSelectionChanged: () => _onSelectionChanged() }));\n  const [focusedItemIndices, setFocusedItemIndices] = React.useState(selection.getSelectedIndices() || []);\n\n  const [draggedIndex, setDraggedIndex] = React.useState<number>(-1);\n  const dragDropHelper = new DragDropHelper({\n    selection: selection,\n  });\n\n  const {\n    focusItemIndex,\n    suggestionItems,\n    footerItemIndex,\n    footerItems,\n    headerItemIndex,\n    headerItems,\n    isSuggestionsShown,\n    showPicker,\n    selectPreviousSuggestion,\n    selectNextSuggestion,\n    queryString,\n    setQueryString,\n  } = useFloatingSuggestionItems(\n    suggestions,\n    pickerSuggestionsProps?.footerItemsProps,\n    pickerSuggestionsProps?.headerItemsProps,\n    selectedSuggestionIndex,\n    selectedFooterIndex,\n    selectedHeaderIndex,\n    isSuggestionsVisible,\n  );\n\n  const {\n    selectedItems,\n    addItems,\n    dropItemsAt,\n    removeItems,\n    removeItemAt,\n    removeSelectedItems,\n    unselectAll,\n    getSelectedItems,\n    setSelectedItems,\n  } = useSelectedItems(selection, props.selectedItemsListProps.selectedItems);\n\n  const _onSelectionChanged = () => {\n    showPicker(false);\n    setSelection(selection);\n    setFocusedItemIndices(selection.getSelectedIndices());\n  };\n\n  const defaultDragDropEnabled = props.defaultDragDropEnabled !== undefined ? props.defaultDragDropEnabled : true;\n\n  const autofillDragDropEnabled =\n    props.autofillDragDropEnabled !== undefined ? props.autofillDragDropEnabled : defaultDragDropEnabled;\n\n  React.useImperativeHandle(props.componentRef, () => ({\n    clearInput: () => {\n      if (input.current) {\n        input.current.clear();\n      }\n    },\n    focus: () => {\n      if (input.current) {\n        input.current.focus();\n      }\n    },\n    getSelectedItems: () => {\n      return getSelectedItems() as T[];\n    },\n    forceResolve: () => {\n      if (focusItemIndex >= 0) {\n        _onSuggestionSelected(undefined, suggestionItems[focusItemIndex]);\n        return true;\n      } else {\n        return false;\n      }\n    },\n  }));\n\n  // All of the drag drop functions are the default behavior. Users can override that by setting the dragDropEvents prop\n  const theme = getTheme();\n  const dragEnterClass = mergeStyles({\n    backgroundColor: theme.palette.neutralLight,\n  });\n\n  const _onDragEnter = (item?: any, event?: DragEvent): string => {\n    // return string is the css classes that will be added to the entering element.\n    return dragEnterClass;\n  };\n\n  let insertIndex = -1;\n  let isInDropAction = false;\n  const _dropItemsAt = (newItems: T[]): void => {\n    let indicesToRemove: number[] = [];\n    // If we are moving items within the same picker, remove them from their old places as well\n    if (draggedIndex > -1) {\n      indicesToRemove = focusedItemIndices.includes(draggedIndex) ? [...focusedItemIndices] : [draggedIndex];\n    }\n    selectedItemsListDropItemsAt?.(insertIndex, newItems, indicesToRemove);\n    dropItemsAt(insertIndex, newItems, indicesToRemove);\n    unselectAll();\n    insertIndex = -1;\n    isInDropAction = false;\n  };\n\n  const _onDragOverAutofill = (event?: React.DragEvent<HTMLDivElement>) => {\n    if (autofillDragDropEnabled) {\n      event?.preventDefault();\n    }\n  };\n\n  const _onDropAutoFill = (event?: React.DragEvent<HTMLDivElement>) => {\n    isInDropAction = true;\n    event?.preventDefault();\n    if (onDropAutoFill) {\n      onDropAutoFill(event);\n    } else {\n      insertIndex = selectedItems.length;\n      _onDropInner(event?.dataTransfer);\n    }\n  };\n\n  const _canDrop = (dropContext?: IDragDropContext, dragContext?: IDragDropContext): boolean => {\n    return defaultDragDropEnabled && !focusedItemIndices.includes(dropContext!.index);\n  };\n\n  const _onDropList = (item?: any, event?: DragEvent): void => {\n    isInDropAction = true;\n    /* indexOf compares using strict equality\n       if the item is something where properties can change frequently, then the\n       itemsAreEqual prop should be overloaded\n       Otherwise it's possible for the indexOf check to fail and return -1 */\n    if (itemsAreEqual) {\n      insertIndex = selectedItems.findIndex(currentItem => (itemsAreEqual ? itemsAreEqual(currentItem, item) : false));\n    } else {\n      insertIndex = selectedItems.indexOf(item);\n    }\n\n    // If the drop is in the right half of the item, we want to drop at index+1\n    if (event && event.currentTarget) {\n      const targetElement = event.currentTarget as HTMLElement;\n      const halfwayPoint = targetElement.offsetLeft + targetElement.offsetWidth / 2;\n      if (getRTL()) {\n        if (event.pageX < halfwayPoint) {\n          insertIndex++;\n        }\n      } else {\n        if (event.pageX > halfwayPoint) {\n          insertIndex++;\n        }\n      }\n    }\n\n    event?.preventDefault();\n    _onDropInner(event?.dataTransfer !== null ? event?.dataTransfer : undefined);\n  };\n\n  const _onDropInner = (dataTransfer?: DataTransfer): void => {\n    let isDropHandled = false;\n    if (dataTransfer) {\n      const data = dataTransfer.items;\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].kind === 'string' && data[i].type === customClipboardType) {\n          isDropHandled = true;\n          data[i].getAsString((dropText: string) => {\n            if (deserializeItemsFromDrop) {\n              const newItems = deserializeItemsFromDrop(dropText);\n              _dropItemsAt(newItems);\n            }\n          });\n        }\n      }\n    }\n    if (!isDropHandled && draggedIndex > -1) {\n      const newItems = focusedItemIndices.includes(draggedIndex)\n        ? (getSelectedItems() as T[])\n        : [selectedItems[draggedIndex]];\n      _dropItemsAt(newItems);\n    }\n  };\n\n  const _onDragStart = (item?: any, itemIndex?: number, tempSelectedItems?: any[], event?: DragEvent): void => {\n    /* eslint-disable-next-line eqeqeq */\n    const draggedItemIndex = itemIndex != null ? itemIndex! : -1;\n    setDraggedIndex(draggedItemIndex);\n    // Set effectAllowed to be only move so that browser doesn't incorrectly copy instead\n    if (event && event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move';\n    }\n    if (event) {\n      const dataList = event?.dataTransfer?.items;\n      if (serializeItemsForDrag && customClipboardType) {\n        const draggedItems = focusedItemIndices.includes(draggedItemIndex) ? [...getSelectedItems()] : [item];\n        const dragText = serializeItemsForDrag(draggedItems);\n        dataList?.add(dragText, customClipboardType);\n      }\n    }\n  };\n\n  const _onDragEnd = (item?: any, event?: DragEvent): void => {\n    // Because these calls are async, it's possible for us to get the drag end call while\n    // we're in the middle of a drop action, so don't run the delete code if that's the case\n    if (event && !isInDropAction) {\n      // If we have a move event, and we still have selected items (indicating that we\n      // haven't already moved items within the well) we should remove the item(s)\n      if (event.dataTransfer?.dropEffect === 'move' && focusedItemIndices.length > 0) {\n        const itemsToRemove = focusedItemIndices.includes(draggedIndex)\n          ? (getSelectedItems() as T[])\n          : [selectedItems[draggedIndex]];\n        _onRemoveSelectedItems(itemsToRemove);\n      }\n      // Clear any remaining drag data\n      const dataList = event?.dataTransfer?.items;\n      dataList?.clear();\n    }\n    setDraggedIndex(-1);\n    isInDropAction = false;\n  };\n\n  const defaultDragDropEvents: IDragDropEvents = {\n    canDrop: _canDrop,\n    canDrag: () => defaultDragDropEnabled,\n    onDragEnter: _onDragEnter,\n    onDragLeave: () => undefined,\n    onDrop: _onDropList,\n    onDragStart: _onDragStart,\n    onDragEnd: _onDragEnd,\n  };\n\n  const _onSuggestionSelected = React.useCallback(\n    (ev: any, item: IFloatingSuggestionItemProps<T>) => {\n      addItems([item.item]);\n      onSuggestionSelected?.(ev, item);\n      if (input.current) {\n        input.current.clear();\n      }\n      showPicker(false);\n    },\n    [addItems, onSuggestionSelected, showPicker],\n  );\n\n  const _onKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLDivElement>) => {\n      // Allow the caller to handle the key down\n      onKeyDown?.(ev);\n\n      // This is a temporary work around, it has localization issues\n      // we plan on rewriting how this works in the future\n      const isDel = ev.which === KeyCodes.del;\n      const isCut = (ev.shiftKey && isDel) || (ev.ctrlKey && ev.which === KeyCodes.x);\n      const isBackspace = ev.which === KeyCodes.backspace;\n      const isCopy = ev.ctrlKey && ev.which === KeyCodes.c;\n      const needToCopy = isCut || isCopy;\n      const needToDelete =\n        (isBackspace && selectedItems.length > 0) || ((isCut || isDel) && focusedItemIndices.length > 0);\n\n      // Handle copy (or cut) if focus is in the selected items list\n      if (needToCopy) {\n        if (focusedItemIndices.length > 0 && selectedItemsListGetItemCopyText) {\n          ev.preventDefault();\n          const copyItems = selection.getSelection() as T[];\n          const copyString = selectedItemsListGetItemCopyText(copyItems);\n          navigator.clipboard.writeText(copyString).then(\n            () => {\n              /* clipboard successfully set */\n            },\n            () => {\n              /* clipboard write failed */\n              // Swallow the error\n            },\n          );\n        }\n      }\n\n      // Handle delete of items via Backspace/Del/Ctrl+X\n      if (needToDelete) {\n        if (\n          focusedItemIndices.length === 0 &&\n          input &&\n          input.current &&\n          !input.current.isValueSelected &&\n          input.current.inputElement === document.activeElement &&\n          (input.current as Autofill).cursorLocation === 0\n        ) {\n          showPicker(false);\n          ev.preventDefault();\n          selectedItemsListOnItemsRemoved?.([selectedItems[selectedItems.length - 1]]);\n          removeItemAt(selectedItems.length - 1);\n        } else if (focusedItemIndices.length > 0) {\n          showPicker(false);\n          ev.preventDefault();\n          selectedItemsListOnItemsRemoved?.(getSelectedItems());\n          removeSelectedItems();\n          input.current?.focus();\n        }\n      }\n    },\n    [\n      focusedItemIndices.length,\n      getSelectedItems,\n      onKeyDown,\n      removeItemAt,\n      removeSelectedItems,\n      selectedItems,\n      selectedItemsListGetItemCopyText,\n      selectedItemsListOnItemsRemoved,\n      selection,\n      showPicker,\n    ],\n  );\n\n  const _onValidateInput = React.useCallback(() => {\n    if (onValidateInput && createGenericItem) {\n      const itemToConvert = createGenericItem(queryString, onValidateInput(queryString));\n      if (itemToConvert !== null && itemToConvert !== undefined) {\n        _onSuggestionSelected(undefined, { item: itemToConvert, isSelected: false });\n      }\n    }\n  }, [onValidateInput, createGenericItem, queryString, _onSuggestionSelected]);\n\n  const _onInputKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<Autofill | HTMLElement>) => {\n      if (isSuggestionsShown) {\n        const keyCode = ev.which;\n        switch (keyCode) {\n          case KeyCodes.escape:\n            showPicker(false);\n            ev.preventDefault();\n            ev.stopPropagation();\n            break;\n          case KeyCodes.enter:\n          case KeyCodes.tab:\n            if (!ev.shiftKey && !ev.ctrlKey && (focusItemIndex >= 0 || footerItemIndex >= 0 || headerItemIndex >= 0)) {\n              ev.preventDefault();\n              ev.stopPropagation();\n              if (focusItemIndex >= 0) {\n                // Get the focused element and add it to selectedItemsList\n                showPicker(false);\n                _onSuggestionSelected(ev, suggestionItems[focusItemIndex]);\n              } else if (footerItemIndex >= 0) {\n                // execute the footer action\n                footerItems![footerItemIndex].onExecute!();\n              } else if (headerItemIndex >= 0) {\n                // execute the header action\n                headerItems![headerItemIndex].onExecute!();\n              }\n            } else {\n              _onValidateInput();\n            }\n            break;\n          case KeyCodes.up:\n            ev.preventDefault();\n            ev.stopPropagation();\n            selectPreviousSuggestion();\n            break;\n          case KeyCodes.down:\n            ev.preventDefault();\n            ev.stopPropagation();\n            selectNextSuggestion();\n            break;\n        }\n      }\n    },\n    [\n      _onSuggestionSelected,\n      focusItemIndex,\n      footerItemIndex,\n      footerItems,\n      headerItemIndex,\n      headerItems,\n      isSuggestionsShown,\n      selectNextSuggestion,\n      selectPreviousSuggestion,\n      showPicker,\n      suggestionItems,\n      _onValidateInput,\n    ],\n  );\n\n  React.useEffect(() => {\n    const inputElement = input.current?.inputElement;\n    inputElement?.addEventListener('keydown', _onInputKeyDown as () => void);\n\n    return () => {\n      inputElement?.removeEventListener('keydown', _onInputKeyDown as () => void);\n    };\n  });\n\n  const _onCopy = React.useCallback(\n    (ev: React.ClipboardEvent<HTMLInputElement>) => {\n      if (focusedItemIndices.length > 0 && selectedItemsListGetItemCopyText) {\n        const copyItems = selection.getSelection() as T[];\n        const copyString = selectedItemsListGetItemCopyText(copyItems);\n        ev.clipboardData.setData('text/plain', copyString);\n        ev.preventDefault();\n      }\n    },\n    [focusedItemIndices.length, selectedItemsListGetItemCopyText, selection],\n  );\n\n  const _onInputFocus = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement | Autofill>): void => {\n      unselectAll();\n      inputPropsOnFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n    },\n    [inputPropsOnFocus, unselectAll],\n  );\n\n  const _onInputClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLInputElement | Autofill>) => {\n      unselectAll();\n      showPicker(true);\n      inputPropsOnClick?.(ev as React.MouseEvent<HTMLInputElement>);\n    },\n    [inputPropsOnClick, showPicker, unselectAll],\n  );\n\n  const _onInputChange = React.useCallback(\n    (value: string, composing?: boolean, resultItemsList?: T[]) => {\n      if (!composing) {\n        // update query string\n        setQueryString(value);\n        // suggestions isn't showing and we haven't just cleared the input, show the picker\n        !isSuggestionsShown && value !== '' ? showPicker(true) : null;\n        if (!resultItemsList) {\n          resultItemsList = [];\n        }\n        if (onInputChange) {\n          onInputChange(value, composing, resultItemsList);\n          if (resultItemsList && resultItemsList.length > 0) {\n            addItems(resultItemsList);\n            showPicker(false);\n            // Clear the input\n            if (input.current) {\n              input.current.clear();\n            }\n          }\n        }\n      }\n    },\n    [addItems, isSuggestionsShown, onInputChange, setQueryString, showPicker],\n  );\n\n  const _onPaste = React.useCallback(\n    (ev: React.ClipboardEvent<Autofill | HTMLInputElement>) => {\n      if (onPaste) {\n        const inputText = ev.clipboardData.getData('Text');\n        ev.preventDefault();\n        // Pass current selected items\n        onPaste(inputText, selectedItems);\n        setSelectedItems(selectedItems);\n        selection.setItems(selectedItems);\n      }\n    },\n    [onPaste, selectedItems, selection, setSelectedItems],\n  );\n\n  const _renderSelectedItemsList = (): JSX.Element => {\n    return onRenderSelectedItems({\n      ...selectedItemsListProps,\n      selectedItems: selectedItems,\n      focusedItemIndices: focusedItemIndices,\n      onItemsRemoved: _onRemoveSelectedItems,\n      replaceItem: _replaceItem,\n      dragDropHelper: dragDropHelper,\n      dragDropEvents: dragDropEvents ? dragDropEvents : defaultDragDropEvents,\n    });\n  };\n\n  const _onFloatingSuggestionsDismiss = React.useCallback(\n    (ev: React.MouseEvent): void => {\n      onFloatingSuggestionsDismiss?.(ev);\n      showPicker(false);\n    },\n    [onFloatingSuggestionsDismiss, showPicker],\n  );\n\n  const _onFloatingSuggestionRemoved = React.useCallback(\n    (ev: any, item: IFloatingSuggestionItemProps<T>) => {\n      onRemoveSuggestion?.(ev, item);\n      // We want to keep showing the picker to show the user that the entry has been removed from the list.\n      showPicker(true);\n    },\n    [onRemoveSuggestion, showPicker],\n  );\n\n  const _onRemoveSelectedItems = React.useCallback(\n    (itemsToRemove: T[]) => {\n      removeItems(itemsToRemove);\n      selectedItemsListOnItemsRemoved?.(itemsToRemove);\n    },\n    [removeItems, selectedItemsListOnItemsRemoved],\n  );\n\n  const _replaceItem = React.useCallback(\n    (newItem: T | T[], index: number) => {\n      const newItems = Array.isArray(newItem) ? newItem : [newItem];\n      dropItemsAt(index, newItems, [index]);\n      selectedItemsListReplaceItem?.(newItem, index);\n    },\n    [dropItemsAt, selectedItemsListReplaceItem],\n  );\n\n  const _renderFloatingPicker = () =>\n    onRenderFloatingSuggestions({\n      ...floatingSuggestionProps,\n      pickerWidth: pickerWidth || '300px',\n      targetElement: input.current?.inputElement,\n      isSuggestionsVisible: isSuggestionsShown,\n      suggestions: suggestionItems,\n      selectedSuggestionIndex: focusItemIndex,\n      selectedFooterIndex: footerItemIndex,\n      selectedHeaderIndex: headerItemIndex,\n      pickerSuggestionsProps: pickerSuggestionsProps,\n      onFloatingSuggestionsDismiss: _onFloatingSuggestionsDismiss,\n      onSuggestionSelected: _onSuggestionSelected,\n      onKeyDown: _onInputKeyDown,\n      onRemoveSuggestion: _onFloatingSuggestionRemoved,\n    });\n\n  const _canAddItems = () => true;\n\n  return (\n    <div\n      ref={rootRef}\n      className={css('ms-BasePicker ms-BaseExtendedPicker', className ? className : '')}\n      onKeyDown={_onKeyDown}\n      onCopy={_onCopy}\n    >\n      <FocusZone direction={FocusZoneDirection.bidirectional} {...focusZoneProps}>\n        <SelectionZone\n          selection={selection}\n          selectionMode={SelectionMode.multiple}\n          className={css('ms-UnifiedPicker-selectionZone', classNames.selectionZone)}\n        >\n          <div className={css('ms-BasePicker-text', classNames.pickerText)}>\n            {headerComponent}\n            {_renderSelectedItemsList()}\n            {_canAddItems() && (\n              <div\n                aria-owns={isSuggestionsShown ? 'suggestion-list' : undefined}\n                aria-expanded={isSuggestionsShown}\n                aria-haspopup=\"listbox\"\n                role=\"combobox\"\n                className={css('ms-BasePicker-div', classNames.pickerDiv)}\n                onDrop={_onDropAutoFill}\n                onDragOver={_onDragOverAutofill}\n              >\n                <Autofill\n                  {...(inputProps as IInputProps)}\n                  className={css('ms-BasePicker-input', classNames.pickerInput)}\n                  ref={input}\n                  onFocus={_onInputFocus}\n                  onClick={_onInputClick}\n                  onInputValueChange={_onInputChange}\n                  aria-autocomplete=\"list\"\n                  aria-activedescendant={\n                    isSuggestionsShown && focusItemIndex >= 0\n                      ? 'FloatingSuggestionsItemId-' + focusItemIndex\n                      : undefined\n                  }\n                  disabled={false}\n                  onPaste={_onPaste}\n                />\n              </div>\n            )}\n          </div>\n        </SelectionZone>\n      </FocusZone>\n      {_renderFloatingPicker()}\n    </div>\n  );\n};\n"]}