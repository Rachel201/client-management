{"version":3,"file":"CompoundButton.js","sourceRoot":"../src/","sources":["components/Button/ButtonVariants/CompoundButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n// Temporary import file to experiment with next version of foundation.\nimport { composed } from '@uifabric/foundation/lib/next/composed';\nimport { IComponent } from '@uifabric/foundation/lib/next/IComponent';\nimport { IComponentStyles, IStylesFunction, ITokenFunction } from '@uifabric/foundation';\nimport { Text, ITextStyles } from 'office-ui-fabric-react';\nimport { parseGap } from 'office-ui-fabric-react/lib/components/Stack/StackUtils';\nimport { HighContrastSelector } from '../../../Styling';\nimport { useButtonState as state } from '../Button.state';\nimport { ButtonStyles, ButtonTokens } from '../Button.styles';\nimport {\n  IButtonProps,\n  IButtonSlots,\n  IButtonStyles,\n  IButtonStylesReturnType,\n  IButtonTokenReturnType,\n  IButtonTokens,\n  IButtonViewProps,\n} from '../Button.types';\nimport { ButtonSlots, ButtonView } from '../Button.view';\n\n/* eslint-disable deprecation/deprecation */\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n */\nexport interface ICompoundButtonProps extends IButtonProps {\n  /** @deprecated */\n  secondaryText?: string;\n}\n\n/** @deprecated */\nexport interface ICompoundButtonViewProps extends ICompoundButtonProps {}\n\n/** @deprecated */\nexport interface ICompountButtonTokens extends IButtonTokens {\n  /** @deprecated */\n  secondaryColor?: string;\n  /** @deprecated */\n  secondaryColorHovered?: string;\n  /** @deprecated */\n  secondaryColorPressed?: string;\n}\n\n/** @deprecated */\nexport type ICompoundButtonComponent = IComponent<\n  ICompoundButtonProps,\n  ICompountButtonTokens,\n  IButtonStyles,\n  ICompoundButtonViewProps,\n  IButtonSlots\n>;\n\nconst baseTokens: ICompoundButtonComponent['tokens'] = (props, theme) => {\n  const { palette } = theme;\n\n  return {\n    childrenGap: 5,\n    contentPadding: '16px 12px',\n    iconColor: palette.neutralSecondary,\n    iconColorHovered: palette.neutralDark,\n    iconColorPressed: 'inherit',\n    minHeight: 72,\n    secondaryColor: palette.neutralSecondary,\n    secondaryColorHovered: palette.neutralDark,\n    secondaryColorPressed: 'inherit',\n  };\n};\n\nconst primaryTokens: ICompoundButtonComponent['tokens'] = (props, theme) => {\n  const { semanticColors } = theme;\n\n  return {\n    iconColor: semanticColors.primaryButtonText,\n    iconColorHovered: semanticColors.primaryButtonTextHovered,\n    iconColorPressed: semanticColors.primaryButtonTextPressed,\n    secondaryColor: semanticColors.primaryButtonText,\n    secondaryColorHovered: semanticColors.primaryButtonTextHovered,\n    secondaryColorPressed: semanticColors.primaryButtonTextPressed,\n  };\n};\n\nconst disabledTokens: ICompoundButtonComponent['tokens'] = (props, theme) => {\n  const { semanticColors } = theme;\n\n  return {\n    iconColor: semanticColors.buttonTextDisabled,\n    iconColorHovered: semanticColors.buttonTextDisabled,\n    iconColorPressed: semanticColors.buttonTextDisabled,\n    secondaryColor: semanticColors.buttonTextDisabled,\n    secondaryColorHovered: semanticColors.buttonTextDisabled,\n    secondaryColorPressed: semanticColors.buttonTextDisabled,\n  };\n};\n\nconst CompoundButtonTokens: ICompoundButtonComponent['tokens'] = (props, theme): IButtonTokenReturnType => {\n  const regularTokens = (ButtonTokens as ITokenFunction<IButtonViewProps, IButtonTokens>)(props, theme);\n\n  return [regularTokens, baseTokens, props.primary && primaryTokens, props.disabled && disabledTokens];\n};\n\nconst CompoundButtonStyles: ICompoundButtonComponent['styles'] = (props, theme, tokens): IButtonStylesReturnType => {\n  const { rowGap, columnGap } = parseGap(tokens.childrenGap, theme);\n\n  const regularStyles = (ButtonStyles as IStylesFunction<\n    IButtonViewProps,\n    IButtonTokens,\n    IComponentStyles<IButtonSlots>\n  >)(props, theme, tokens);\n\n  return {\n    root: [\n      regularStyles.root,\n      {\n        alignItems: 'flex-start',\n        color: tokens.secondaryColor,\n        flexDirection: 'column',\n        lineHeight: '100%',\n\n        selectors: {\n          '> *': {\n            marginLeft: 0,\n            marginTop: `${0.5 * rowGap.value}${rowGap.unit} ${0.5 * columnGap.value}${columnGap.unit}`,\n            textOverflow: 'ellipsis',\n          },\n          '> *:not(:first-child)': {\n            marginLeft: 0,\n            marginTop: `${columnGap.value}${columnGap.unit}`,\n          },\n          ':hover': {\n            color: tokens.secondaryColorHovered,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: tokens.highContrastColorHovered,\n              },\n            },\n          },\n          ':active': {\n            color: tokens.secondaryColorPressed,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: tokens.highContrastColorPressed,\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            color: tokens.highContrastColor,\n          },\n        },\n      },\n    ],\n    content: [\n      regularStyles.content,\n      {\n        color: tokens.color,\n        selectors: {\n          ':hover': {\n            color: tokens.colorHovered,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: tokens.highContrastColorHovered,\n              },\n            },\n          },\n          ':active': {\n            color: tokens.colorPressed,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: tokens.highContrastColorPressed,\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            color: tokens.highContrastColor,\n          },\n        },\n      },\n    ],\n    icon: regularStyles.icon,\n  };\n};\n\nconst secondaryTextStyles: ITextStyles = {\n  root: {\n    height: 12,\n  },\n};\n\nconst CompoundButtonView: ICompoundButtonComponent['view'] = (props, slots) => {\n  const { children, secondaryText, ...rest } = props;\n\n  const secondaryTextChild = (\n    <Text variant=\"small\" styles={secondaryTextStyles}>\n      {secondaryText}\n    </Text>\n  );\n\n  const compoundButtonProps = {\n    ...rest,\n    children: [secondaryTextChild, children],\n  };\n\n  return ButtonView(compoundButtonProps, slots);\n};\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n */\nexport const CompoundButton: React.FunctionComponent<ICompoundButtonProps> = composed({\n  displayName: 'CompoundButton',\n  slots: ButtonSlots,\n  state,\n  styles: CompoundButtonStyles,\n  tokens: CompoundButtonTokens,\n  view: CompoundButtonView,\n});\n"]}