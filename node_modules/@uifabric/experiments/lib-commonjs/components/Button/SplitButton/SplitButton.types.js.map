{"version":3,"file":"SplitButton.types.js","sourceRoot":"../src/","sources":["components/Button/SplitButton/SplitButton.types.tsx"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\n// Temporary import file to experiment with next version of foundation.\nimport { IComponent } from '@uifabric/foundation/lib/next/IComponent';\nimport { IComponentStyles, IHTMLSlot, ISlotProp, ISlottableProps, IStyleableComponentProps } from '../../../Foundation';\nimport { IBaseProps } from '../../../Utilities';\nimport { INativeButtonProps } from '../Button.types';\nimport {\n  IMenuButton,\n  IMenuButtonProps,\n  IMenuButtonSlot,\n  IMenuButtonSlots,\n  IMenuButtonTokens,\n  IMenuButtonViewProps,\n} from '../MenuButton/MenuButton.types';\n\n/* eslint-disable deprecation/deprecation */\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport type ISplitButtonComponent = IComponent<\n  ISplitButtonProps,\n  ISplitButtonTokens,\n  ISplitButtonStyles,\n  ISplitButtonViewProps,\n  ISplitButtonSlots\n>;\n\n// These types are redundant with IButtonComponent but are needed until TS function return widening issue is resolved:\n// https://github.com/Microsoft/TypeScript/issues/241\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport type ISplitButtonTokenReturnType = ReturnType<Extract<ISplitButtonComponent['tokens'], Function>>;\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport type ISplitButtonStylesReturnType = ReturnType<Extract<ISplitButtonComponent['styles'], Function>>;\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport type ISplitButtonSlot = ISlotProp<ISplitButtonProps>;\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport interface ISplitButtonSlots extends IMenuButtonSlots {\n  /**\n   * Defines the root slot of the component.\n   * @deprecated\n   */\n  root?: IHTMLSlot;\n\n  /**\n   * Menu button that is going to be rendered.\n   * @deprecated\n   */\n  menuButton?: IMenuButtonSlot;\n\n  /**\n   * Defines the container for the divider that is used for styling purposes.\n   * @deprecated\n   */\n  splitDividerContainer?: IHTMLSlot;\n\n  /**\n   * Defines the divider that separates the left and right parts of a SplitButton.\n   * @deprecated\n   */\n  splitDivider?: IHTMLSlot;\n}\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport interface ISplitButton extends IMenuButton {}\n\n/**\n * @deprecated This component was experimental and is not longer being developed on, nor will it be supported in the\n * future.\n * {@docCategory Button}\n */\nexport interface ISplitButtonProps\n  extends ISlottableProps<ISplitButtonSlots>,\n    Pick<\n      IMenuButtonProps,\n      | 'href'\n      | 'primary'\n      | 'disabled'\n      | 'onClick'\n      | 'onKeyDown'\n      | 'checked'\n      | 'allowDisabledFocus'\n      | 'ariaLabel'\n      | 'keytipProps'\n      | 'uniqueId'\n      | 'defaultExpanded'\n      | 'expanded'\n      | 'onMenuDismiss'\n    >,\n    IStyleableComponentProps<ISplitButtonProps, ISplitButtonTokens, ISplitButtonStyles>,\n    IBaseProps<ISplitButton>,\n    INativeButtonProps {\n  /**\n   * Defines whether the first action of the SplitButton is disabled.\n   * @defaultvalue false\n   * @deprecated\n   */\n  primaryActionDisabled?: boolean;\n\n  /**\n   * Defines the aria label that the screen readers use when focus goes on the second focus stop of the SplitButton.\n   * @deprecated\n   */\n  secondaryAriaLabel?: string;\n\n  /**\n   * Defines an event callback that is triggered when the secondary action of a SplitButton is clicked.\n   * @deprecated\n   */\n  onSecondaryActionClick?: (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement>) => void;\n}\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport interface ISplitButtonViewProps\n  extends Pick<IMenuButtonViewProps, 'buttonRef' | 'menuButtonRef'>,\n    ISplitButtonProps {}\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport interface ISplitButtonTokens extends IMenuButtonTokens {\n  /**\n   * Defines the color of the SplitButton divider.\n   * @deprecated\n   */\n  dividerColor?: string;\n\n  /**\n   * Defines the color of the SplitButton divider when in high contrast mode.\n   * @deprecated\n   */\n  highContrastDividerColor?: string;\n\n  /**\n   * Defines the padding of the menu section of the SplitButton.\n   * @deprecated\n   */\n  secondaryPadding?: number | string;\n}\n\n/**\n * @deprecated\n * {@docCategory Button}\n */\nexport type ISplitButtonStyles = IComponentStyles<ISplitButtonSlots>;\n"]}