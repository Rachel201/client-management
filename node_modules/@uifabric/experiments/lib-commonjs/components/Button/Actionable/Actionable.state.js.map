{"version":3,"file":"Actionable.state.js","sourceRoot":"../src/","sources":["components/Button/Actionable/Actionable.state.ts"],"names":[],"mappings":";;;AAAA,+BAAoD;AAGpD,4CAA4C;AAE5C,kBAAkB;AACL,QAAA,kBAAkB,GAAkC,UAAA,KAAK;IACpE,IAAM,SAAS,GAAG,cAAM,CAA2B,IAAI,CAAC,CAAC;IAEzD,2BAAmB,CAAC,KAAK,CAAC,YAAY,EAAE,cAAM,OAAA,CAAC;QAC7C,KAAK,EAAE;YACL,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACjD,CAAC;KACF,CAAC,EAJ4C,CAI5C,CAAC,CAAC;IAEJ,IAAM,SAAS,yCACV,KAAK,KACR,SAAS,WAAA,GACV,CAAC;IAEF,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import { useImperativeHandle, useRef } from 'react';\nimport { IActionableComponent, IActionableViewProps } from './Actionable.types';\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated */\nexport const useActionableState: IActionableComponent['state'] = props => {\n  const buttonRef = useRef<HTMLButtonElement | null>(null);\n\n  useImperativeHandle(props.componentRef, () => ({\n    focus: () => {\n      buttonRef.current && buttonRef.current.focus();\n    },\n  }));\n\n  const viewProps: IActionableViewProps = {\n    ...props,\n    buttonRef,\n  };\n\n  return viewProps;\n};\n"]}