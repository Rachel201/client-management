{"version":3,"file":"CollapsibleSectionTitle.types.js","sourceRoot":"../src/","sources":["components/CollapsibleSection/CollapsibleSectionTitle.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IRefObject } from '../../Utilities';\nimport {\n  IComponent,\n  IComponentStyles,\n  IHTMLElementSlot,\n  ISlotProp,\n  ISlottableProps,\n  IStyleableComponentProps,\n} from '../../Foundation';\nimport { ITextSlot } from 'office-ui-fabric-react';\nimport { IIconSlot } from '../../utilities/factoryComponents.types';\n\nexport type ICollapsibleSectionTitleComponent = IComponent<\n  ICollapsibleSectionTitleProps,\n  ICollapsibleSectionTitleTokens,\n  ICollapsibleSectionTitleStyles\n>;\n\n// These types are redundant with ICollapsibleSectionTitleComponent but are needed until TS function\n// return widening issue is resolved:\n// https://github.com/Microsoft/TypeScript/issues/241\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\nexport type ICollapsibleSectionTitleTokenReturnType = ReturnType<\n  Extract<ICollapsibleSectionTitleComponent['tokens'], Function>\n>;\nexport type ICollapsibleSectionTitleStylesReturnType = ReturnType<\n  Extract<ICollapsibleSectionTitleComponent['styles'], Function>\n>;\n\nexport type ICollapsibleSectionTitleSlot = ISlotProp<ICollapsibleSectionTitleProps, string>;\n\nexport interface ICollapsibleSectionTitleSlots {\n  root?: IHTMLElementSlot<'button'>;\n  chevron?: IIconSlot;\n  text?: ITextSlot;\n}\n\nexport interface ICollapsibleSectionTitleProps\n  extends ISlottableProps<ICollapsibleSectionTitleSlots>,\n    IStyleableComponentProps<\n      ICollapsibleSectionTitleProps,\n      ICollapsibleSectionTitleTokens,\n      ICollapsibleSectionTitleStyles\n    >,\n    React.ButtonHTMLAttributes<HTMLButtonElement> {\n  focusElementRef?: IRefObject<HTMLButtonElement>;\n  /**\n   * Collapsed state of body associated with this component.\n   */\n  collapsed?: boolean;\n  /**\n   * Disable chevron appearance.\n   */\n  chevronDisabled?: boolean;\n  /**\n   * Indentation of title.\n   */\n  indent?: number;\n}\n\nexport interface ICollapsibleSectionTitleTokens {}\n\nexport type ICollapsibleSectionTitleStyles = IComponentStyles<ICollapsibleSectionTitleSlots>;\n"]}