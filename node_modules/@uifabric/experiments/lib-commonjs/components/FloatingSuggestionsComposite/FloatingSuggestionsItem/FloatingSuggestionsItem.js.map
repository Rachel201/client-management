{"version":3,"file":"FloatingSuggestionsItem.js","sourceRoot":"../src/","sources":["components/FloatingSuggestionsComposite/FloatingSuggestionsItem/FloatingSuggestionsItem.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAO/B,gDAA6D;AAC7D,mFAA6D;AAC7D,4DAA8E;AAEjE,QAAA,uBAAuB,GAAG,UAAe,KAAsC;IAExF,IAAA,aAAE,EACF,uBAAO,EACP,2BAAS,EACT,iCAAY,EACZ,6CAAkB,EAClB,yCAAgB,EAChB,mDAAqB,EACrB,6BAAU,CACF;IACV,IAAM,aAAa,GAAG,8BAAkB,EAAqE,CAAC;IAC9G,IAAM,UAAU,GAAG,aAAa,CAAC,0CAAS,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;IAExE,IAAM,WAAW,GAAG,UAAC,EAAmD;QACtE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACpC,EAAE,CAAC,eAAe,EAAE,CAAC;IACvB,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,UAAC,EAAmD;QACnE,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,EAAE,CAAC,eAAe,EAAE,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;QACtE,oBAAC,sBAAa;QACZ,6CAA6C;;YAA7C,6CAA6C;YAC7C,OAAO,EAAE,WAAW,EACpB,SAAS,EAAE,UAAU,CAAC,UAAU,IAE/B,kBAAkB,CAAC,CAAC,CAAC,CACpB,kBAAkB,CAAC,KAAgD,CAAC,CACrE,CAAC,CAAC,CAAC,CACF,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,IAAG,KAAK,CAAC,WAAW,CAAO,CAClE,CACa;QACf,gBAAgB,CAAC,CAAC,CAAC,CAClB,oBAAC,mBAAU,IACT,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,EACzE,KAAK,EAAE,qBAAqB,EAC5B,SAAS,EAAE,qBAAqB;YAChC,6CAA6C;YAC7C,OAAO,EAAE,QAAQ,EACjB,SAAS,EAAE,UAAU,CAAC,WAAW,GACjC,CACH,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,2BAA2B,GAAG,KAAK,CAAC,IAAI,CACnD,+BAAuB,EACvB,UAAC,SAAS,EAAE,QAAQ;IAClB,IACE,SAAS,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU;QAC5C,SAAS,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE;QAC5B,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;QAChC,SAAS,CAAC,WAAW,KAAK,QAAQ,CAAC,WAAW;QAC9C,SAAS,CAAC,gBAAgB,KAAK,QAAQ,CAAC,gBAAgB,EACxD;QACA,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  IFloatingSuggestionItemStylesProps,\n  IFloatingSuggestionItemStyles,\n  IFloatingSuggestionItemProps,\n  IFloatingSuggestionOnRenderItemProps,\n} from './FloatingSuggestionsItem.types';\nimport { classNamesFunction, css } from '../../../Utilities';\nimport { getStyles } from './FloatingSuggestionsItem.styles';\nimport { CommandButton, IconButton } from 'office-ui-fabric-react/lib/Button';\n\nexport const FloatingSuggestionsItem = <T extends {}>(props: IFloatingSuggestionItemProps<T>): JSX.Element => {\n  const {\n    id,\n    onClick,\n    className,\n    onRemoveItem,\n    onRenderSuggestion,\n    showRemoveButton,\n    removeButtonAriaLabel,\n    isSelected,\n  } = props;\n  const getClassNames = classNamesFunction<IFloatingSuggestionItemStylesProps, IFloatingSuggestionItemStyles>();\n  const classNames = getClassNames(getStyles, { isSelected: isSelected });\n\n  const onClickItem = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    onClick ? onClick(ev, props) : null;\n    ev.stopPropagation();\n  };\n\n  const onRemove = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    onRemoveItem ? onRemoveItem(ev, props) : null;\n    ev.stopPropagation();\n  };\n\n  return (\n    <div className={css(classNames.root, className ? className : '')} id={id}>\n      <CommandButton\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClickItem}\n        className={classNames.itemButton}\n      >\n        {onRenderSuggestion ? (\n          onRenderSuggestion(props as IFloatingSuggestionOnRenderItemProps<T>)\n        ) : (\n          <div className={classNames.displayText}>{props.displayText}</div>\n        )}\n      </CommandButton>\n      {showRemoveButton ? (\n        <IconButton\n          iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n          title={removeButtonAriaLabel}\n          ariaLabel={removeButtonAriaLabel}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={onRemove}\n          className={classNames.closeButton}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport const FloatingSuggestionsItemMemo = React.memo<IFloatingSuggestionItemProps<any>>(\n  FloatingSuggestionsItem,\n  (prevProps, nextProp) => {\n    if (\n      prevProps.isSelected !== nextProp.isSelected ||\n      prevProps.id !== nextProp.id ||\n      prevProps.item !== nextProp.item ||\n      prevProps.displayText !== nextProp.displayText ||\n      prevProps.showRemoveButton !== nextProp.showRemoveButton\n    ) {\n      return false;\n    }\n    return true;\n  },\n);\n"]}