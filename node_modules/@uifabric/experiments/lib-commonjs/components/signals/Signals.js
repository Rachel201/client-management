"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var Icon_1 = require("office-ui-fabric-react/lib-commonjs/Icon");
var Utilities_1 = require("office-ui-fabric-react/lib-commonjs/Utilities");
var Signal_1 = require("./Signal");
var SignalsStyles = require("./Signals.scss");
var SignalStyles = require("./Signal.scss");
var Utilities_2 = require("../../Utilities");
tslib_1.__exportStar(require("./Signal"), exports);
tslib_1.__exportStar(require("./SignalField"), exports);
exports.YouCheckedOutSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.youCheckedOut, iconName: "checkedoutbyyou12" }));
};
exports.BlockedSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.blocked, iconName: "blocked12" }));
};
exports.MissingMetadataSignal = function (props) {
    return (React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.missingMetadata, iconName: Utilities_2.getRTL() ? 'TagUnknown12Mirror' : 'TagUnknown12' })));
};
exports.WarningSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.warning, iconName: "warning12" }));
};
exports.AwaitingApprovalSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.awaitingApproval, iconName: "clock" }));
};
exports.TrendingSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.trending, iconName: "market" }));
};
exports.SomeoneCheckedOutSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.someoneCheckedOut, iconName: "checkedoutbyother12" }));
};
exports.RecordSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.record, iconName: "lock" }));
};
exports.NeedsRepublishingSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.needsRepublishing, iconName: "readingmode" }));
};
exports.ItemScheduledSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.itemScheduled, iconName: "datetime2" }));
};
/**
 * Renders a signal marking the proceeding content as new.
 */
exports.NewSignal = function (props) {
    var ariaLabel = props.ariaLabel, spanProps = tslib_1.__rest(props, ["ariaLabel"]);
    return (React.createElement("span", tslib_1.__assign({}, spanProps, { className: Utilities_1.css(SignalStyles.signal, SignalsStyles.newSignal) }),
        React.createElement(Icon_1.Icon, { ariaLabel: props.ariaLabel, className: Utilities_1.css(SignalsStyles.newIcon), iconName: "glimmer" })));
};
/**
 * Renders a signal for a live-edit scenario.
 */
exports.LiveEditSignal = function (props) {
    var className = props.className, spanProps = tslib_1.__rest(props, ["className"]);
    return React.createElement(Signal_1.Signal, tslib_1.__assign({ className: Utilities_1.css(className, SignalsStyles.liveEdit) }, spanProps));
};
exports.MentionSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.mention, iconName: "accounts" }));
};
/**
 * Renders a signal for a number of comments.
 */
exports.CommentsSignal = function (props) {
    var ariaLabel = props.ariaLabel, className = props.className, children = props.children, spanProps = tslib_1.__rest(props, ["ariaLabel", "className", "children"]);
    return (React.createElement(Signal_1.Signal, tslib_1.__assign({ className: Utilities_1.css(SignalsStyles.comments, className) }, spanProps),
        React.createElement(Icon_1.Icon, { ariaLabel: props.ariaLabel, className: Utilities_1.css(SignalsStyles.commentsIcon), iconName: "MessageFill" }),
        children ? React.createElement("span", { className: Utilities_1.css(SignalsStyles.commentsCount) }, children) : null));
};
/**
 * Renders a signal for a number of comments.
 */
exports.UnseenReplySignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.unseenReply, iconName: "commentprevious" }));
};
exports.UnseenEditSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.unseenEdit, iconName: "edit" }));
};
exports.ReadOnlySignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.readOnly, iconName: "uneditablesolid12" }));
};
exports.EmailedSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.emailed, iconName: "mail" }));
};
exports.SharedSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.shared, iconName: "people" }));
};
exports.DesktopSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.folder, iconName: "TVMonitor" }));
};
exports.DocumentsSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.folder, iconName: "Page" }));
};
exports.PicturesSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.folder, iconName: "Photo2" }));
};
exports.MalwareDetectedSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.malwareDetected, iconName: "BlockedSiteSolid12" }));
};
exports.ATPSignal = exports.MalwareDetectedSignal; // TODO Delete on next major version.
/**
 * Renders a signal for an external item.
 */
exports.ExternalSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.external, iconName: "Globe" }));
};
exports.NotFollowedSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.bookmarkOutline, iconName: "SingleBookmark" }));
};
exports.FollowedSignal = function (props) {
    return React.createElement(IconSignal, tslib_1.__assign({}, props, { signalClass: SignalsStyles.bookmarkFilled, iconName: "SingleBookmarkSolid" }));
};
/**
 * Renders a signal as just an Icon. This is the simplest Signal case.
 */
var IconSignal = function (props) {
    var ariaLabel = props.ariaLabel, className = props.className, signalClass = props.signalClass, spanProps = tslib_1.__rest(props, ["ariaLabel", "className", "signalClass"]);
    return (React.createElement(Icon_1.Icon, tslib_1.__assign({}, spanProps, { ariaLabel: props.ariaLabel, className: Utilities_1.css(SignalStyles.signal, signalClass, className) })));
};
//# sourceMappingURL=Signals.js.map