{"version":3,"file":"GridCell.js","sourceRoot":"../src/","sources":["utilities/grid/GridCell.tsx"],"names":[],"mappings":";;;IAQA;QAA8D,oCAAsB;QAApF;YAAA,qEAuHC;YApES,cAAQ,GAAG;gBACX,IAAA,gBAIa,EAHjB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACc;gBAEpB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;YAEO,mBAAa,GAAG,UAAC,EAAuC;gBACxD,IAAA,gBAKa,EAJjB,oBAAO,EACP,sBAAQ,EACR,cAAI,EACJ,8BAAY,CACM;gBAEpB,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;gBAE1D,IAAI,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;YAEO,kBAAY,GAAG,UAAC,EAAuC;gBACvD,IAAA,gBAKa,EAJjB,oBAAO,EACP,sBAAQ,EACR,cAAI,EACJ,4BAAW,CACO;gBAEpB,IAAM,eAAe,GAAG,WAAW,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;gBAEvD,IAAI,CAAC,eAAe,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBAC5C,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;YAEO,mBAAa,GAAG,UAAC,EAAuC;gBACxD,IAAA,gBAIa,EAHjB,oBAAO,EACP,sBAAQ,EACR,8BAAY,CACM;gBAEpB,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;gBAE1D,IAAI,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBAC7C,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAA;YAEO,cAAQ,GAAG;gBACX,IAAA,gBAIa,EAHjB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACc;gBAEpB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;;QAEH,CAAC;QAhHQ,yBAAM,GAAb;YACQ,IAAA,eAaQ,EAZZ,cAAI,EACJ,UAAE,EACF,wBAAS,EACT,cAAI,EACJ,sBAAQ,EACR,sBAAQ,EACR,8BAAY,EACZ,wCAAiB,EACjB,4CAAmB,EACnB,gBAAK,EACL,gBAAK,EACL,gCAAa,CACA;YAEf,OAAO,CACL,oBAAC,sBAAa,IACZ,EAAE,EAAG,EAAE,gBACM,KAAK,uBACE,IAAI,EACxB,QAAQ,EAAG,QAAQ,EACnB,SAAS,EAAG,eAAG,CAAC,SAAS;oBAErB,GAAC,EAAE,GAAG,mBAAmB,IAAG,QAAQ;oBACpC,GAAC,EAAE,GAAG,iBAAiB,IAAG,QAAQ;wBAErC,EACD,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,WAAW,EAAG,IAAI,CAAC,YAAY,EAC/B,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAG,IAAI,mBACK,QAAQ,EACxB,SAAS,EAAG,KAAK,EACjB,KAAK,EAAG,KAAK,EACb,aAAa,EAAG,aAAa,IAE3B,YAAY,CAAC,IAAI,CAAC,CACL,CAClB,CAAC;;QACJ,CAAC;QA/Ca,qBAAY,GAAG;YAC3B,QAAQ,EAAE,KAAK;YACf,EAAE,EAAE,iBAAK,CAAC,UAAU,CAAC;SACtB,CAAC;QAkHJ,eAAC;KAAA,AAvHD,CAA8D,KAAK,CAAC,SAAS,GAuH5E;IAvHY,4BAAQ","sourcesContent":["import * as React from 'react';\nimport {\n  css,\n  getId,\n} from '../../Utilities';\nimport { IGridCellProps } from './GridCell.types';\nimport { CommandButton } from '../../Button';\n\nexport class GridCell<T, P extends IGridCellProps<T>> extends React.Component<P, {}> {\n\n  public static defaultProps = {\n    disabled: false,\n    id: getId('gridCell')\n  };\n\n  public render(): JSX.Element {\n    const {\n      item,\n      id,\n      className,\n      role,\n      selected,\n      disabled,\n      onRenderItem,\n      cellDisabledStyle,\n      cellIsSelectedStyle,\n      index,\n      label,\n      getClassNames\n    } = this.props;\n\n    return (\n      <CommandButton\n        id={ id }\n        data-index={ index }\n        data-is-focusable={ true }\n        disabled={ disabled }\n        className={ css(className,\n          {\n            ['' + cellIsSelectedStyle]: selected,\n            ['' + cellDisabledStyle]: disabled\n          }\n        ) }\n        onClick={ this._onClick }\n        onMouseEnter={ this._onMouseEnter }\n        onMouseMove={ this._onMouseMove }\n        onMouseLeave={ this._onMouseLeave }\n        onFocus={ this._onFocus }\n        role={ role }\n        aria-selected={ selected }\n        ariaLabel={ label }\n        title={ label }\n        getClassNames={ getClassNames }\n      >\n        { onRenderItem(item) }\n      </CommandButton >\n    );\n  }\n\n  private _onClick = (): void => {\n    const {\n      onClick,\n      disabled,\n      item\n    } = this.props as P;\n\n    if (onClick && !disabled) {\n      onClick(item);\n    }\n  }\n\n  private _onMouseEnter = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    const {\n      onHover,\n      disabled,\n      item,\n      onMouseEnter\n    } = this.props as P;\n\n    const didUpdateOnEnter = onMouseEnter && onMouseEnter(ev);\n\n    if (!didUpdateOnEnter && onHover && !disabled) {\n      onHover(item);\n    }\n  }\n\n  private _onMouseMove = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    const {\n      onHover,\n      disabled,\n      item,\n      onMouseMove\n    } = this.props as P;\n\n    const didUpdateOnMove = onMouseMove && onMouseMove(ev);\n\n    if (!didUpdateOnMove && onHover && !disabled) {\n      onHover(item);\n    }\n  }\n\n  private _onMouseLeave = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    const {\n      onHover,\n      disabled,\n      onMouseLeave\n    } = this.props as P;\n\n    const didUpdateOnLeave = onMouseLeave && onMouseLeave(ev);\n\n    if (!didUpdateOnLeave && onHover && !disabled) {\n      onHover();\n    }\n  }\n\n  private _onFocus = (): void => {\n    const {\n      onFocus,\n      disabled,\n      item\n    } = this.props as P;\n\n    if (onFocus && !disabled) {\n      onFocus(item);\n    }\n  }\n\n}"]}