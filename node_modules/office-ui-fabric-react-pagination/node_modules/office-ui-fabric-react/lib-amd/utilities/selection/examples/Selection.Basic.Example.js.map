{"version":3,"file":"Selection.Basic.Example.js","sourceRoot":"../src/","sources":["utilities/selection/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { Check } from 'office-ui-fabric-react/lib/Check';\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport {\n  IObjectWithKey,\n  ISelection,\n  Selection,\n  SelectionMode,\n  SelectionZone\n} from 'office-ui-fabric-react/lib/Selection';\nimport { createListItems } from '@uifabric/example-app-base';\n\nimport './Selection.Example.scss';\n\nconst ITEM_COUNT = 100;\n\nexport interface ISelectionBasicExampleState {\n  items: any[];\n  selection: ISelection;\n  selectionMode?: SelectionMode;\n  canSelect?: string;\n}\n\nexport interface ISelectionItemExampleProps {\n  item?: any;\n  itemIndex?: number;\n  selection?: ISelection;\n  selectionMode?: SelectionMode;\n}\n\n/**\n * The SelectionItemExample controls and displays the selection state of a single item\n */\nexport class SelectionItemExample extends React.Component<ISelectionItemExampleProps, {}> {\n  public render(): JSX.Element {\n    const { item, itemIndex, selection } = this.props;\n    let isSelected = false;\n\n    if (selection && itemIndex !== undefined) {\n      isSelected = selection.isIndexSelected(itemIndex);\n    }\n\n    return (\n      <div className='ms-SelectionItemExample' data-is-focusable={ true } data-selection-index={ itemIndex }>\n        { (selection && selection.canSelectItem(item) && selection.mode !== SelectionMode.none) && (\n          <div className='ms-SelectionItemExample-check' data-is-focusable={ true } data-selection-toggle={ true } >\n            <Check checked={ isSelected } />\n          </div>\n        ) }\n        <span className='ms-SelectionItemExample-name'>\n          { item.name }\n        </span>\n        <a className='ms-SelectionItemExample-link' href='https://bing.com' target='_blank'>Link that avoids selection</a>\n        <a className='ms-SelectionItemExample-link' data-selection-select={ true } href='https://bing.com' target='_blank'>Link that selects first</a>\n      </div>\n    );\n  }\n}\n\n/**\n * The SelectionBasicExample controls the selection state of all items\n */\nexport class SelectionBasicExample extends React.Component<{}, ISelectionBasicExampleState> {\n  private _hasMounted: boolean;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._hasMounted = false;\n    this._onSelectionChanged = this._onSelectionChanged.bind(this);\n    this._onSelectionModeChanged = this._onSelectionModeChanged.bind(this);\n    this._onToggleSelectAll = this._onToggleSelectAll.bind(this);\n    this._onCanSelectChanged = this._onCanSelectChanged.bind(this);\n    this._canSelectItem = this._canSelectItem.bind(this);\n\n    this.state = {\n      items: createListItems(ITEM_COUNT),\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\n      selectionMode: SelectionMode.multiple,\n      canSelect: 'all'\n    };\n    this.state.selection.setItems(this.state.items as IObjectWithKey[], false);\n  }\n\n  public componentDidMount(): void {\n    this._hasMounted = true;\n  }\n\n  public render(): JSX.Element {\n    const { items, selection } = this.state;\n\n    return (\n      <div className='ms-SelectionBasicExample'>\n        <CommandBar items={ this._getCommandItems() } />\n        <MarqueeSelection selection={ selection } isEnabled={ selection.mode === SelectionMode.multiple } >\n          <SelectionZone\n            selection={ selection }\n            // tslint:disable-next-line:jsx-no-lambda\n            onItemInvoked={ this._alertItem }\n          >\n            { items.map((item: { key: string | number }, index: number) => (\n              <SelectionItemExample\n                ref={ 'detailsGroup_' + index }\n                key={ item.key }\n                item={ item }\n                itemIndex={ index }\n                selection={ selection }\n              />\n            )) }\n          </SelectionZone>\n        </MarqueeSelection>\n      </div>\n    );\n  }\n\n  private _alertItem = (item: { key?: React.Key, name: React.ReactText }): void => alert('item invoked: ' + item.name);\n\n  private _onSelectionChanged(): void {\n    if (this._hasMounted) {\n      this.forceUpdate();\n    }\n  }\n\n  private _onToggleSelectAll(): void {\n    const { selection } = this.state;\n    selection.toggleAllSelected();\n  }\n\n  private _onSelectionModeChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void {\n    this.setState((previousState: ISelectionBasicExampleState) => {\n      const newSelection = new Selection({\n        onSelectionChanged: this._onSelectionChanged,\n        canSelectItem: previousState.canSelect === 'vowels' ? this._canSelectItem : undefined,\n        selectionMode: menuItem.data\n      });\n      newSelection.setItems(previousState.items as IObjectWithKey[], false);\n\n      return {\n        selection: newSelection\n      };\n    });\n  }\n\n  private _onCanSelectChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void {\n    const canSelectItem = (menuItem.data === 'vowels') ? this._canSelectItem : undefined;\n\n    this.setState((previousState: ISelectionBasicExampleState) => {\n      const newSelection = new Selection({ onSelectionChanged: this._onSelectionChanged, canSelectItem: canSelectItem, selectionMode: previousState.selection.mode });\n      newSelection.setItems(previousState.items as IObjectWithKey[], false);\n      return {\n        selection: newSelection,\n        canSelect: (menuItem.data === 'vowels') ? 'vowels' : 'all'\n      };\n    });\n  }\n\n  private _canSelectItem(item: any): boolean {\n    return item.name && (item.name.indexOf('a') === 0 || item.name.indexOf('e') === 0 || item.name.indexOf('i') === 0 || item.name.indexOf('o') === 0 || item.name.indexOf('u') === 0);\n  }\n\n  private _getCommandItems(): IContextualMenuItem[] {\n    const { selection, canSelect } = this.state;\n\n    return [\n      {\n        key: 'selectionMode',\n        name: 'Selection Mode',\n        items: [\n          {\n            key: SelectionMode[SelectionMode.none],\n            name: 'None',\n            canCheck: true,\n            checked: selection.mode === SelectionMode.none,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.none\n\n          },\n          {\n            key: SelectionMode[SelectionMode.single],\n            name: 'Single select',\n            canCheck: true,\n            checked: selection.mode === SelectionMode.single,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.single\n          },\n          {\n            key: SelectionMode[SelectionMode.multiple],\n            name: 'Multi select',\n            canCheck: true,\n            checked: selection.mode === SelectionMode.multiple,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.multiple\n          },\n        ]\n      },\n      {\n        key: 'selectAll',\n        name: 'Select All',\n        icon: 'CheckMark',\n        onClick: this._onToggleSelectAll\n      },\n      {\n        key: 'allowCanSelect',\n        name: 'Choose selectable items',\n        items: [\n          {\n            key: 'all',\n            name: 'All items',\n            canCheck: true,\n            checked: canSelect === 'all',\n            onClick: this._onCanSelectChanged,\n            data: 'all'\n          },\n          {\n            key: 'a',\n            name: 'Names starting with vowels',\n            canCheck: true,\n            checked: canSelect === 'vowels',\n            onClick: this._onCanSelectChanged,\n            data: 'vowels'\n          }\n        ]\n      }\n    ];\n  }\n}\n"]}