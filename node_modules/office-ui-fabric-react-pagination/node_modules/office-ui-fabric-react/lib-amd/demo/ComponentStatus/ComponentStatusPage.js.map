{"version":3,"file":"ComponentStatusPage.js","sourceRoot":"../src/","sources":["demo/ComponentStatus/ComponentStatusPage.tsx"],"names":[],"mappings":";;;IAYA;QAAyC,+CAAuB;QAAhE;;QAyFA,CAAC;QAxFQ,oCAAM,GAAb;YACE,IAAM,QAAQ,GAA4B,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;YAE7J,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,sBAAsB,EAC5B,aAAa,EAAC,sBAAsB,EACpC,eAAe,EAAC,6JAA6J,EAC7K,QAAQ,EAAG,IAAI,CAAC,eAAe,EAAE,EACjC,aAAa,EAAG,QAAQ,GACxB,CACH,CAAC;QACJ,CAAC;QAEO,6CAAe,GAAvB;YACE,OAAO,CACL,oBAAC,+BAAY,QACT,OAAO,CAAS,gGAAgG,CAAC,CACtG,CAChB,CAAC;QACJ,CAAC;QAEO,+CAAiB,GAAzB;YAAA,iBAYC;YAXC,OAAO,CACL;gBACE,+BAAO,SAAS,EAAC,gBAAgB;oBAC/B,mCACI,MAAM,CAAC,IAAI,CAAC,6CAAmB,CAAC,CAAC,GAAG,CAAC,UAAC,aAAqB,EAAE,KAAa;wBAC1E,OAAO,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9C,CAAC,CAAC,CACI,CACF,CACH,CACR,CAAC;QACJ,CAAC;QAEO,8CAAgB,GAAxB,UAAyB,aAAqB;YAC5C,IAAM,SAAS,GAAG,6CAAmB,CAAC,aAAa,CAAC,CAAC;YACrD,OAAO,CACL,4BAAI,GAAG,EAAG,aAAa,GAAG,MAAM;gBAC9B,4BAAI,SAAS,EAAC,gBAAgB;oBAAC;wBAAM,aAAa;4BAAQ;wBAAM;gBAChE,4BAAI,SAAS,EAAC,oBAAoB;oBAAC,oBAAC,iCAAe,uBAC5C,SAAS,EACd,CAAK,CACH,CACP,CAAC;QACJ,CAAC;QAEO,iDAAmB,GAA3B;YAAA,iBAiBC;YAhBC,OAAO,CACL;gBACE,+BAAO,SAAS,EAAC,gBAAgB;oBAC/B;wBACE;4BACE,4BAAI,SAAS,EAAC,gBAAgB,WAAU;4BACxC,4BAAI,SAAS,EAAC,gBAAgB,kBAAiB;4BAC/C,4BAAI,SAAS,EAAC,gBAAgB,cAAa,CACxC;wBACH,+CAAwB,CAAC,GAAG,CAAC,UAAC,IAA+B;4BAC7D,OAAO,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;wBACtC,CAAC,CAAC,CACI,CACF,CACJ,CACP,CAAC;QACJ,CAAC;QAEO,+CAAiB,GAAzB,UAA0B,UAAqC;YAC7D,OAAO,CACL,4BAAI,GAAG,EAAG,UAAU,CAAC,IAAI,GAAG,MAAM;gBAChC,4BAAI,SAAS,EAAC,gBAAgB;;oBAAI,UAAU,CAAC,IAAI;wBAAQ;gBACzD,4BAAI,SAAS,EAAC,gBAAgB;;oBAAI,UAAU,CAAC,WAAW;wBAAQ;gBAChE,4BAAI,SAAS,EAAC,gBAAgB;;oBAAI,UAAU,CAAC,OAAO;oBAChD,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CACnD,CACF,CACN,CAAC;QACJ,CAAC;QAEO,yCAAW,GAAnB,UAAoB,WAA4B;YAC9C,OAAO,CACL,oBAAC,WAAI,IACH,IAAI,EAAG,WAAW,CAAC,IAAI,IAErB,GAAG,GAAG,WAAW,CAAC,YAAY,CAC3B,CACR,CAAC;QACJ,CAAC;QACH,0BAAC;IAAD,CAAC,AAzFD,CAAyC,KAAK,CAAC,SAAS,GAyFvD;IAzFY,kDAAmB","sourcesContent":["import * as React from 'react';\nimport {\n  ComponentPage,\n  IComponentPageSection,\n  PageMarkdown,\n} from '@uifabric/example-app-base';\nimport { Link } from '../../Link';\nimport { AllComponentsStatus } from './AllComponents.checklist';\nimport { ComponentStatusInfoState, IComponentStatusInfoState, InformationLink } from './ComponentStatusState';\nimport { ComponentStatus } from './ComponentStatus';\nimport './ComponentStatusPage.scss';\n\nexport class ComponentStatusPage extends React.Component<{}, {}> {\n  public render(): JSX.Element {\n    const sections: IComponentPageSection[] = [{ title: 'Badges', section: this._renderStatusesInfo() }, { title: 'Status', section: this._renderComponents() }];\n\n    return (\n      <ComponentPage\n        title='Components Checklist'\n        componentName='Components Checklist'\n        editOverviewUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/demo/ComponentStatus/docs/ComponentChecklistOverview.md'\n        overview={ this._renderOverView() }\n        otherSections={ sections }\n      />\n    );\n  }\n\n  private _renderOverView(): JSX.Element {\n    return (\n      <PageMarkdown>\n        { require<string>('!raw-loader!office-ui-fabric-react/src/demo/ComponentStatus/docs/ComponentChecklistOverview.md') }\n      </PageMarkdown>\n    );\n  }\n\n  private _renderComponents(): JSX.Element {\n    return (\n      <div>\n        <table className='componentTable'>\n          <tbody>\n            { Object.keys(AllComponentsStatus).map((componentName: string, index: number) => {\n              return this._renderComponent(componentName);\n            }) }\n          </tbody>\n        </table>\n      </div >\n    );\n  }\n\n  private _renderComponent(componentName: string): JSX.Element {\n    const component = AllComponentsStatus[componentName];\n    return (\n      <tr key={ componentName + '-key' }>\n        <th className='componentCells'><h3>{ componentName } </h3> </th>\n        <td className='componentBadgeCell'><ComponentStatus\n          { ...component }\n        /></td>\n      </tr >\n    );\n  }\n\n  private _renderStatusesInfo(): JSX.Element {\n    return (\n      <div>\n        <table className='componentTable'>\n          <tbody>\n            <tr>\n              <th className='componentCells'>Name</th>\n              <th className='componentCells'>Description</th>\n              <th className='componentCells'>Success</th>\n            </tr>\n            { ComponentStatusInfoState.map((name: IComponentStatusInfoState) => {\n              return this._renderStatusInfo(name);\n            }) }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  private _renderStatusInfo(statusInfo: IComponentStatusInfoState): JSX.Element {\n    return (\n      <tr key={ statusInfo.name + '-key' }>\n        <th className='componentCells'> { statusInfo.name } </th>\n        <td className='componentCells'> { statusInfo.description } </td>\n        <td className='componentCells'> { statusInfo.success }\n          { statusInfo.link && this._createLink(statusInfo.link) }\n        </td>\n      </tr>\n    );\n  }\n\n  private _createLink(information: InformationLink): JSX.Element {\n    return (\n      <Link\n        href={ information.link }\n      >\n        { ' ' + information.renderedText }\n      </Link>\n    );\n  }\n}\n"]}