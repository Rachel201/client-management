{"version":3,"file":"ComponentStatusState.js","sourceRoot":"../src/","sources":["demo/ComponentStatus/ComponentStatusState.tsx"],"names":[],"mappings":";;;IAYa,QAAA,wBAAwB,GAAgC;QACnE;YACE,IAAI,EAAE,gCAAgC;YACtC,WAAW,EAAE,sDAAsD;YACnE,OAAO,EAAE,4GAA4G;SACtH;QACD;YACE,IAAI,EAAE,8BAA8B;YACpC,WAAW,EAAE,6HAA6H;YAC1I,OAAO,EAAE,gPAAgP;YACzP,IAAI,EAAE;gBACJ,IAAI,EAAE,mCAAmC;gBACzC,YAAY,EAAE,0CAA0C;aACzD;SACF;QACD;YACE,IAAI,EAAE,uBAAuB;YAC7B,WAAW,EAAE,4DAA4D;YACzE,OAAO,EAAE,8HAA8H;SACxI;QACD;YACE,IAAI,EAAE,uBAAuB;YAC7B,WAAW,EAAE,iFAAiF;YAC9F,OAAO,EAAE,mLAAmL;SAC7L;QACD;YACE,IAAI,EAAE,eAAe;YACrB,WAAW,EAAE,uEAAuE;YACpF,OAAO,EAAE,+FAA+F;SACzG;KACF,CAAC","sourcesContent":["export interface IComponentStatusInfoState {\n  name: string;\n  description: string;\n  success: string;\n  link?: InformationLink;\n}\n\nexport interface InformationLink {\n  link: string;\n  renderedText: string;\n}\n\nexport const ComponentStatusInfoState: IComponentStatusInfoState[] = [\n  {\n    name: 'Keyboard Accessibility Support',\n    description: 'Components should be fully usable with the keyboard.',\n    success: 'For this badge to pass, all of the functionalities of a component needs to be accessible via the keyboard.'\n  },\n  {\n    name: 'Markup Accessibility Support',\n    description: 'Components should be appropriately marked with ARIA attributes so users with assistive technologies can interact with them.',\n    success: 'For this badge to pass, a component needs to be marked with ARIA attributes to describe its behavior for assistive technologies (e.g., screen readers). A component can use ARIA roles, states and properties to inform users of its behavior.',\n    link: {\n      link: 'https://www.w3.org/WAI/intro/aria',\n      renderedText: 'Please refer to W3C for ARIA guidelines.'\n    }\n  },\n  {\n    name: 'High Contrast Support',\n    description: 'Components should display correctly in high contrast mode.',\n    success: 'For this badge to pass, set your operating system to use high contrast and then ensure that the components render correctly.'\n  },\n  {\n    name: 'Right To Left Support',\n    description: 'For localization, components should display correctly in right to left layouts.',\n    success: 'For this badge to pass, ensure RTL (right-to-left) layouts render properly in the sample website by enabling it in the settings (located in the top right corner for LTR layout).'\n  },\n  {\n    name: 'Test Coverage',\n    description: 'To avoid regressions, make sure components are throughly unit-tested.',\n    success: 'For this badge to be marked \"good\", write unit tests that cover all edge cases and scenarios.'\n  },\n];"]}