{"version":3,"file":"ComponentStatus.js","sourceRoot":"../src/","sources":["demo/ComponentStatus/ComponentStatus.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IComponentStatusProps, ChecklistStatus } from './ComponentStatus.types';\nimport './ComponentStatus.scss';\n\nexport class ComponentStatus extends React.Component<IComponentStatusProps, {}> {\n\n  public static defaultProps: IComponentStatusProps = {\n    keyboardAccessibilitySupport: ChecklistStatus.fail,\n    markupSupport: ChecklistStatus.fail,\n    highContrastSupport: ChecklistStatus.fail,\n    rtlSupport: ChecklistStatus.fail,\n    testCoverage: ChecklistStatus.none\n  };\n\n  public render(): JSX.Element {\n    const keyboardAccessibilitySubject = 'Keyboard Accessibility';\n    const markupSubject = 'Markup';\n    const highContrastSupportSubject = 'High Contrast';\n    const rtlSubject = 'Right to Left';\n    const testCoverageSubject = 'Test Coverage';\n\n    return (\n      <div className='ComponentStatus-div'>\n        { this._definebadgeAnchor(keyboardAccessibilitySubject, this.props.keyboardAccessibilitySupport) }\n        { this._definebadgeAnchor(markupSubject, this.props.markupSupport) }\n        { this._definebadgeAnchor(highContrastSupportSubject, this.props.highContrastSupport) }\n        { this._definebadgeAnchor(rtlSubject, this.props.rtlSupport) }\n        { this._definebadgeAnchor(testCoverageSubject, this.props.testCoverage) }\n      </div >\n    );\n  }\n\n  private _definebadgeAnchor(subject: string, state: ChecklistStatus): JSX.Element {\n    const ariaLabel = subject + '. ' + state;\n    const color = this._colorForComponentStateStatus(state);\n    return this._badgeAnchor(ariaLabel, color, subject, state);\n  }\n\n  private _badgeAnchor(ariaLabel: string, color: string, subject: string, status: string): JSX.Element {\n    return (\n      <a\n        aria-label={ ariaLabel }\n        href='#/components-status'\n        className='ComponentStatus-badge'\n      >\n        <img\n          src={ this._badgeURL(color, subject, status) }\n        />\n      </a>\n    );\n  }\n\n  private _badgeURL(color: string, subject: String, status: String): string {\n    const badgeBaseURL = 'https://img.shields.io/badge/';\n    const badgeStyle = 'flat';\n    return badgeBaseURL + subject + '-' + status + '-' + color + '.svg' + '?style=' + badgeStyle;\n  }\n\n  private _colorForComponentStateStatus(testCoverageStatus: ChecklistStatus | undefined): string {\n    switch (testCoverageStatus) {\n      case ChecklistStatus.unknown:\n      case ChecklistStatus.notApplicable:\n        return 'lightgrey';\n      case ChecklistStatus.fail:\n      case ChecklistStatus.none:\n        return 'red';\n      case ChecklistStatus.poor:\n        return 'yellow';\n      case ChecklistStatus.fair:\n        return 'yellowgreen';\n      case ChecklistStatus.pass:\n      case ChecklistStatus.good:\n        return 'brightgreen';\n    }\n\n    return 'red';\n  }\n\n}"]}