{"version":3,"file":"TextField.js","sourceRoot":"../src/","sources":["components/TextField/TextField.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ITextField, ITextFieldProps } from './TextField.types';\nimport { Label } from '../../Label';\nimport { Icon } from '../../Icon';\nimport {\n  DelayedRender,\n  BaseComponent,\n  getId,\n  css,\n  getNativeProps,\n  inputProperties,\n  textAreaProperties,\n  createRef\n} from '../../Utilities';\nimport * as stylesImport from './TextField.scss';\nconst styles: any = stylesImport;\nimport { AnimationClassNames } from '../../Styling';\nexport interface ITextFieldState {\n  value?: string | undefined;\n\n  /** Is true when the control has focus. */\n  isFocused?: boolean;\n\n  /**\n   * The validation error message.\n   *\n   * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\n   * - If we have done the validation and there is validation error, errorMessage is the validation error message.\n   */\n  errorMessage?: string;\n}\n\nexport class TextField extends BaseComponent<ITextFieldProps, ITextFieldState> implements ITextField {\n  public static defaultProps: ITextFieldProps = {\n    multiline: false,\n    resizable: true,\n    autoAdjustHeight: false,\n    underlined: false,\n    borderless: false,\n    onChanged: () => { /* noop */ },\n    onBeforeChange: () => { /* noop */ },\n    onNotifyValidationResult: () => { /* noop */ },\n    onGetErrorMessage: () => undefined,\n    deferredValidationTime: 200,\n    errorMessage: '',\n    validateOnFocusIn: false,\n    validateOnFocusOut: false,\n    validateOnLoad: true,\n  };\n\n  private _id: string;\n  private _descriptionId: string;\n  private _delayedValidate: (value: string | undefined) => void;\n  private _isMounted: boolean;\n  private _lastValidation: number;\n  private _latestValue: string | undefined;\n  private _latestValidateValue: string | undefined;\n  private _isDescriptionAvailable: boolean;\n  private _textElement = createRef<HTMLTextAreaElement | HTMLInputElement | null>();\n\n  public constructor(props: ITextFieldProps) {\n    super(props);\n\n    this._warnDeprecations({\n      'iconClass': 'iconProps',\n      'addonString': 'prefix',\n      'onRenderAddon': 'onRenderPrefix'\n    });\n\n    this._warnMutuallyExclusive({\n      'value': 'defaultValue'\n    });\n\n    this._id = getId('TextField');\n    this._descriptionId = getId('TextFieldDescription');\n\n    if (props.value !== undefined) {\n      this._latestValue = props.value;\n    } else if (props.defaultValue !== undefined) {\n      this._latestValue = props.defaultValue;\n    } else {\n      this._latestValue = '';\n    }\n\n    this.state = {\n      value: this._latestValue,\n      isFocused: false,\n      errorMessage: ''\n    };\n\n    this._onInputChange = this._onInputChange.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n\n    this._delayedValidate = this._async.debounce(this._validate, this.props.deferredValidationTime);\n    this._lastValidation = 0;\n    this._isDescriptionAvailable = false;\n  }\n\n  /**\n   * Gets the current value of the text field.\n   */\n  public get value(): string | undefined {\n    return this.state.value;\n  }\n\n  public componentDidMount(): void {\n    this._isMounted = true;\n    this._adjustInputHeight();\n\n    if (this.props.validateOnLoad) {\n      this._validate(this.state.value);\n    }\n  }\n\n  public componentWillReceiveProps(newProps: ITextFieldProps): void {\n    const { onBeforeChange } = this.props;\n\n    if (newProps.value !== undefined && newProps.value !== this.state.value) {\n      if (onBeforeChange) {\n        onBeforeChange(newProps.value);\n      }\n\n      this._latestValue = newProps.value;\n      this.setState({\n        value: newProps.value,\n        errorMessage: ''\n      } as ITextFieldState,\n        () => {\n          this._adjustInputHeight();\n        });\n\n      this._delayedValidate(newProps.value);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._isMounted = false;\n  }\n\n  public render(): JSX.Element {\n    const {\n      className,\n      description,\n      disabled,\n      iconClass,\n      iconProps,\n      multiline,\n      required,\n      underlined,\n      borderless,\n      addonString, // @deprecated\n      prefix,\n      suffix,\n      onRenderAddon = this._onRenderAddon, // @deprecated\n      onRenderPrefix = this._onRenderPrefix,\n      onRenderSuffix = this._onRenderSuffix,\n      onRenderLabel = this._onRenderLabel,\n      onRenderDescription = this._onRenderDescription\n    } = this.props;\n    const { isFocused } = this.state;\n    const errorMessage = this._errorMessage;\n\n    // If a custom description render function is supplied then treat description as always available.\n    // Otherwise defer to the presence of description or error message text.\n    this._isDescriptionAvailable = Boolean(this.props.onRenderDescription || description || errorMessage);\n\n    const textFieldClassName = css('ms-TextField', styles.root, className, {\n      ['is-required ' + styles.rootIsRequiredLabel]: this.props.label && required,\n      ['is-required ' + styles.rootIsRequiredPlaceholderOnly]: !this.props.label && required,\n      ['is-disabled ' + styles.rootIsDisabled]: disabled,\n      ['is-active ' + styles.rootIsActive]: isFocused,\n      ['ms-TextField--multiline ' + styles.rootIsMultiline]: multiline,\n      ['ms-TextField--underlined ' + styles.rootIsUnderlined]: underlined,\n      ['ms-TextField--borderless ' + styles.rootIsBorderless]: borderless\n    });\n\n    return (\n      <div className={ textFieldClassName }>\n        <div className={ css('ms-TextField-wrapper', styles.wrapper, underlined ? errorMessage && styles.invalid : '') }>\n          { onRenderLabel(this.props, this._onRenderLabel) }\n          <div className={ css('ms-TextField-fieldGroup', styles.fieldGroup, isFocused && styles.fieldGroupIsFocused, errorMessage && styles.invalid) }>\n            { (addonString !== undefined || this.props.onRenderAddon) && (\n              <div className={ css('ms-TextField-prefix', styles.fieldPrefixSuffix) }>\n                { onRenderAddon(this.props, this._onRenderAddon) }\n              </div>\n            ) }\n            { (prefix !== undefined || this.props.onRenderPrefix) && (\n              <div className={ css('ms-TextField-prefix', styles.fieldPrefixSuffix) }>\n                { onRenderPrefix(this.props, this._onRenderPrefix) }\n              </div>\n            ) }\n            { multiline ? this._renderTextArea() : this._renderInput() }\n            { (iconClass || iconProps) && <Icon className={ css(iconClass, styles.icon) } { ...iconProps } /> }\n            { (suffix !== undefined || this.props.onRenderSuffix) && (\n              <div className={ css('ms-TextField-suffix', styles.fieldPrefixSuffix) }>\n                { onRenderSuffix(this.props, this._onRenderSuffix) }\n              </div>\n            ) }\n          </div>\n        </div>\n        { this._isDescriptionAvailable &&\n          <span id={ this._descriptionId }>\n            { onRenderDescription(this.props, this._onRenderDescription) }\n            { errorMessage &&\n              <div aria-live='assertive'>\n                <DelayedRender>\n                  <p\n                    className={ css('ms-TextField-errorMessage', AnimationClassNames.slideDownIn20, styles.errorMessage) }\n                  >\n                    <span className={ styles.errorText } data-automation-id='error-message'>{ errorMessage }</span>\n                  </p>\n                </DelayedRender>\n              </div>\n            }\n          </span>\n        }\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus on the text field\n   */\n  public focus() {\n    if (this._textElement.current) {\n      this._textElement.current.focus();\n    }\n  }\n\n  /**\n   * Selects the text field\n   */\n  public select() {\n    if (this._textElement.current) {\n      this._textElement.current.select();\n    }\n  }\n\n  /**\n   * Sets the selection start of the text field to a specified value\n   */\n  public setSelectionStart(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionStart = value;\n    }\n  }\n\n  /**\n   * Sets the selection end of the text field to a specified value\n   */\n  public setSelectionEnd(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionEnd = value;\n    }\n  }\n\n  /**\n   * Gets the selection start of the text field\n   */\n  public get selectionStart(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionStart : -1;\n  }\n\n  /**\n   * Gets the selection end of the text field\n   */\n  public get selectionEnd(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionEnd : -1;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in a text field.\n   * @param start Index of the start of the selection.\n   * @param end Index of the end of the selection.\n   */\n  public setSelectionRange(start: number, end: number): void {\n    if (this._textElement.current) {\n      (this._textElement.current as HTMLInputElement).setSelectionRange(start, end);\n    }\n  }\n\n  private _onFocus(ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this.setState({ isFocused: true });\n    if (this.props.validateOnFocusIn) {\n      this._validate(this.state.value);\n    }\n  }\n\n  private _onBlur(ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    this.setState({ isFocused: false });\n    if (this.props.validateOnFocusOut) {\n      this._validate(this.state.value);\n    }\n  }\n\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element | null => {\n    if (props.label) {\n      return (<Label htmlFor={ this._id }>{ props.label }</Label>);\n    }\n    return null;\n  }\n\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element | null => {\n    if (props.description) {\n      return (<span className={ css('ms-TextField-description', styles.description) }>{ props.description }</span>);\n    }\n    return null;\n  }\n\n  // @deprecated\n  private _onRenderAddon(props: ITextFieldProps): JSX.Element {\n    const { addonString } = props;\n    return (\n      <span style={ { paddingBottom: '1px' } }>{ addonString }</span>\n    );\n  }\n\n  private _onRenderPrefix(props: ITextFieldProps): JSX.Element {\n    const { prefix } = props;\n    return (\n      <span style={ { paddingBottom: '1px' } }>{ prefix }</span>\n    );\n  }\n\n  private _onRenderSuffix(props: ITextFieldProps): JSX.Element {\n    const { suffix } = props;\n    return (\n      <span style={ { paddingBottom: '1px' } }>{ suffix }</span>\n    );\n  }\n\n  private _getTextElementClassName(): string {\n    let textFieldClassName: string;\n\n    if (this.props.multiline && !this.props.resizable) {\n      textFieldClassName = css('ms-TextField-field ms-TextField-field--unresizable', styles.field, styles.fieldIsUnresizable);\n    } else {\n      textFieldClassName = css('ms-TextField-field', styles.field);\n    }\n\n    return css(textFieldClassName, this.props.inputClassName, {\n      [styles.hasIcon]: !!this.props.iconClass,\n    });\n  }\n\n  private get _errorMessage(): string | undefined {\n    let { errorMessage } = this.state;\n    if (!errorMessage) {\n      errorMessage = this.props.errorMessage;\n    }\n\n    return errorMessage;\n  }\n\n  private _renderTextArea(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const textAreaProps = getNativeProps(this.props, textAreaProperties, ['defaultValue']);\n\n    return (\n      <textarea\n        id={ this._id }\n        { ...textAreaProps }\n        ref={ this._textElement }\n        value={ this.state.value }\n        onInput={ this._onInputChange }\n        onChange={ this._onInputChange }\n        className={ this._getTextElementClassName() }\n        aria-describedby={ this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'] }\n        aria-invalid={ !!this.state.errorMessage }\n        aria-label={ this.props.ariaLabel }\n        onFocus={ this._onFocus }\n        onBlur={ this._onBlur }\n      />\n    );\n  }\n\n  private _renderInput(): React.ReactElement<React.HTMLAttributes<HTMLInputElement>> {\n    const inputProps = getNativeProps<React.HTMLAttributes<HTMLInputElement>>(this.props, inputProperties, ['defaultValue']);\n\n    return (\n      <input\n        type={ 'text' }\n        id={ this._id }\n        { ...inputProps }\n        ref={ this._textElement }\n        value={ this.state.value }\n        onInput={ this._onInputChange }\n        onChange={ this._onInputChange }\n        className={ this._getTextElementClassName() }\n        aria-label={ this.props.ariaLabel }\n        aria-describedby={ this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'] }\n        aria-invalid={ !!this.state.errorMessage }\n        onFocus={ this._onFocus }\n        onBlur={ this._onBlur }\n      />\n    );\n  }\n\n  private _onInputChange(event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const value: string = element.value;\n\n    // Avoid doing unnecessary work when the value has not changed.\n    if (value === this._latestValue) {\n      return;\n    }\n    this._latestValue = value;\n\n    this.setState({\n      value: value\n    } as ITextFieldState,\n      () => {\n        this._adjustInputHeight();\n\n        if (this.props.onChanged) {\n          this.props.onChanged(value);\n        }\n      });\n\n    const { validateOnFocusIn, validateOnFocusOut } = this.props;\n    if (!(validateOnFocusIn || validateOnFocusOut)) {\n      this._delayedValidate(value);\n    }\n\n    const onBeforeChange = this.props.onBeforeChange as (newValue: any) => void;\n    onBeforeChange(value);\n  }\n\n  private _validate(value: string | undefined): void {\n    const { validateOnFocusIn, validateOnFocusOut } = this.props;\n\n    // In case of _validate called multi-times during executing validate logic with promise return.\n    if (this._latestValidateValue === value && !(validateOnFocusIn || validateOnFocusOut)) {\n      return;\n    }\n\n    this._latestValidateValue = value;\n    const onGetErrorMessage = this.props.onGetErrorMessage as (value: string) => string | PromiseLike<string> | undefined;\n    const result = onGetErrorMessage(value || '');\n\n    if (result !== undefined) {\n      if (typeof result === 'string') {\n        this.setState({\n          errorMessage: result\n        } as ITextFieldState);\n        this._notifyAfterValidate(value, result);\n      } else {\n        const currentValidation: number = ++this._lastValidation;\n\n        result.then((errorMessage: string) => {\n          if (this._isMounted && currentValidation === this._lastValidation) {\n            this.setState({ errorMessage } as ITextFieldState);\n          }\n          this._notifyAfterValidate(value, errorMessage);\n        });\n      }\n    } else {\n      this._notifyAfterValidate(value, '');\n    }\n  }\n\n  private _notifyAfterValidate(value: string | undefined, errorMessage: string): void {\n    if (this._isMounted &&\n      value === this.state.value &&\n      this.props.onNotifyValidationResult) {\n      this.props.onNotifyValidationResult(errorMessage, value);\n    }\n  }\n\n  private _adjustInputHeight(): void {\n    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\n      const textField = this._textElement.current;\n      textField.style.height = '';\n      const scrollHeight = textField.scrollHeight + 2; // +2 to avoid vertical scroll bars\n      textField.style.height = scrollHeight + 'px';\n    }\n  }\n}\n"]}