{"version":3,"file":"DocumentCard.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCard.tsx"],"names":[],"mappings":";;;IAQA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEjC;QAAkC,wCAAsC;QAKtE,sBAAY,KAAyB;YAArC,YACE,kBAAM,KAAK,CAAC,SAKb;YA0CO,cAAQ,GAAG,UAAC,EAAiC;gBACnD,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAA;YAEO,gBAAU,GAAG,UAAC,EAAoC;gBACxD,IAAI,EAAE,CAAC,KAAK,mBAAmB,IAAI,EAAE,CAAC,KAAK,mBAAmB,EAAE;oBAC9D,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;iBACpB;YACH,CAAC,CAAA;YAEO,eAAS,GAAG,UAAC,EAAqC;gBAClD,IAAA,gBAAqC,EAAnC,oBAAO,EAAE,4BAAW,CAAgB;gBAE5C,IAAI,OAAO,EAAE;oBACX,OAAO,CAAC,EAAE,CAAC,CAAC;iBACb;qBAAM,IAAI,CAAC,OAAO,IAAI,WAAW,EAAE;oBAClC,iGAAiG;oBACjG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;oBACnC,EAAE,CAAC,cAAc,EAAE,CAAC;oBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;iBACtB;YACH,CAAC,CAAA;YAlEC,KAAI,CAAC,iBAAiB,CAAC;gBACrB,WAAW,EAAE,SAAS;aACvB,CAAC,CAAC;;QACL,CAAC;QAEM,6BAAM,GAAb;YACQ,IAAA,eAA6E,EAA3E,oBAAO,EAAE,4BAAW,EAAE,sBAAQ,EAAE,wBAAS,EAAE,cAAI,EAAE,4BAAW,CAAgB;YACpF,IAAM,UAAU,GAAG,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE3D,gFAAgF;YAChF,IAAI,KAAK,CAAC;YACV,IAAI,IAAI,KAAK,qCAAgB,CAAC,OAAO,IAAI,WAAW,EAAE;gBACpD,KAAK,GAAG;oBACN,iBAAiB,EAAE,WAAW;iBAC/B,CAAC;aACH;YAED,4DAA4D;YAC5D,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACzF,IAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAE5C,OAAO,CACL,6BACE,QAAQ,EAAG,QAAQ,EACnB,IAAI,EAAG,IAAI,EACX,SAAS,EACP,eAAG,CACD,iBAAiB,EACjB,MAAM,CAAC,IAAI;oBAET,GAAC,8BAA8B,GAAG,MAAM,CAAC,gBAAgB,IAAG,UAAU;oBACtE,GAAC,2BAA2B,GAAG,MAAM,CAAC,aAAa,IAAG,IAAI,KAAK,qCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;yBAExG,SAAS,CACV,EAEH,SAAS,EAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,EACpD,OAAO,EAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAChD,KAAK,EAAG,KAAK,IAEX,QAAQ,CACN,CACP,CAAC;;QACJ,CAAC;QAlDa,yBAAY,GAAuB;YAC/C,IAAI,EAAE,qCAAgB,CAAC,MAAM;SAC9B,CAAC;QAwEJ,mBAAC;KAAA,AA3ED,CAAkC,yBAAa,GA2E9C;IA3EY,oCAAY","sourcesContent":["import * as React from 'react';\nimport { IDocumentCardProps, DocumentCardType } from './DocumentCard.types';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css\n} from '../../Utilities';\nimport * as stylesImport from './DocumentCard.scss';\nconst styles: any = stylesImport;\n\nexport class DocumentCard extends BaseComponent<IDocumentCardProps, any> {\n  public static defaultProps: IDocumentCardProps = {\n    type: DocumentCardType.normal\n  };\n\n  constructor(props: IDocumentCardProps) {\n    super(props);\n\n    this._warnDeprecations({\n      accentColor: undefined\n    });\n  }\n\n  public render(): JSX.Element {\n    const { onClick, onClickHref, children, className, type, accentColor } = this.props;\n    const actionable = (onClick || onClickHref) ? true : false;\n\n    // Override the border color if an accent color was provided (compact card only)\n    let style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor\n      };\n    }\n\n    // if this element is actionable it should have an aria role\n    const role = this.props.role || (actionable ? (onClick ? 'button' : 'link') : undefined);\n    const tabIndex = actionable ? 0 : undefined;\n\n    return (\n      <div\n        tabIndex={ tabIndex }\n        role={ role }\n        className={\n          css(\n            'ms-DocumentCard',\n            styles.root,\n            {\n              ['ms-DocumentCard--actionable ' + styles.rootIsActionable]: actionable,\n              ['ms-DocumentCard--compact ' + styles.rootIsCompact]: type === DocumentCardType.compact ? true : false\n            },\n            className\n          )\n        }\n        onKeyDown={ actionable ? this._onKeyDown : undefined }\n        onClick={ actionable ? this._onClick : undefined }\n        style={ style }\n      >\n        { children }\n      </div>\n    );\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._onAction(ev);\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      this._onAction(ev);\n    }\n  }\n\n  private _onAction = (ev: React.SyntheticEvent<HTMLElement>): void => {\n    const { onClick, onClickHref } = this.props;\n\n    if (onClick) {\n      onClick(ev);\n    } else if (!onClick && onClickHref) {\n      // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\n      window.location.href = onClickHref;\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n}\n"]}