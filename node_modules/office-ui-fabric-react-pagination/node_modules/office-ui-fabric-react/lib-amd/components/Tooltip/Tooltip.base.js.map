{"version":3,"file":"Tooltip.base.js","sourceRoot":"../src/","sources":["components/Tooltip/Tooltip.base.tsx"],"names":[],"mappings":";;;IAkBA,IAAM,aAAa,GAAG,8BAAkB,EAAsC,CAAC;IAG/E;QAAiC,uCAAiC;QADlE;YAAA,qEAqEC;YAPS,sBAAgB,GAAG,UAAC,KAAoB;gBAC9C,OAAO,CACL,2BAAG,SAAS,EAAG,KAAI,CAAC,WAAW,CAAC,OAAO,IACnC,KAAK,CAAC,OAAO,CACb,CACL,CAAC;YACJ,CAAC,CAAA;;QACH,CAAC;QAnDQ,4BAAM,GAAb;YACQ,IAAA,eAYQ,EAXZ,wBAAS,EACT,8BAAY,EACZ,gBAAK,EACL,oCAAe,EACf,gDAAqB,EACrB,wBAAS,EACT,UAAE,EACF,sBAAQ,EACR,uBAAuC,EAAvC,4DAAuC,EACvC,gCAAa,EACb,gBAAK,CACQ;YAEf,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,SAAU,EAAE;gBAC3C,KAAK,EAAE,KAAM;gBACb,SAAS,EAAE,SAAS,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,SAAS,CAAC;gBAChE,KAAK,EAAE,KAAM;gBACb,QAAQ,EAAE,QAAS;aACpB,CAAC,CAAC;YAEH,OAAO,CACL,oBAAC,iBAAO,qBACN,MAAM,EAAG,aAAa,EACtB,eAAe,EAAG,eAAe,EACjC,qBAAqB,EAAG,qBAAqB,IACxC,YAAY,EACZ,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,IAC9C,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI;gBAEjC,6BACE,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EACpC,EAAE,EAAG,EAAE,EACP,IAAI,EAAC,SAAS,EACd,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EACtC,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,YAAY,IAEpC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAChD,CACG,CACZ,CAAC;QACJ,CAAC;QA1DD,+BAA+B;QACjB,wBAAY,GAA2B;YACnD,eAAe,mBAA2B;YAC1C,KAAK,EAAE,4BAAY,CAAC,MAAM;YAC1B,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE;gBACZ,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,CAAC;gBACX,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE,KAAK;aAClB;SACF,CAAC;QAbS,WAAW;YADvB,wBAAY,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC;WACtB,WAAW,CAoEvB;QAAD,kBAAC;KAAA,AApED,CAAiC,yBAAa,GAoE7C;IApEY,kCAAW","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  classNamesFunction,\n  customizable,\n  divProperties,\n  getNativeProps,\n  IClassNames\n} from '../../Utilities';\nimport {\n  ITooltipProps,\n  ITooltipStyleProps,\n  ITooltipStyles,\n  TooltipDelay\n} from './Tooltip.types';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\n\nconst getClassNames = classNamesFunction<ITooltipStyleProps, ITooltipStyles>();\n\n@customizable('Tooltip', ['theme'])\nexport class TooltipBase extends BaseComponent<ITooltipProps, any> {\n  // Specify default props values\n  public static defaultProps: Partial<ITooltipProps> = {\n    directionalHint: DirectionalHint.topCenter,\n    delay: TooltipDelay.medium,\n    maxWidth: '364px',\n    calloutProps: {\n      isBeakVisible: true,\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false\n    }\n  };\n\n  private _classNames: IClassNames<ITooltipStyles>;\n\n  public render(): JSX.Element {\n    const {\n      className,\n      calloutProps,\n      delay,\n      directionalHint,\n      directionalHintForRTL,\n      getStyles,\n      id,\n      maxWidth,\n      onRenderContent = this._onRenderContent,\n      targetElement,\n      theme\n    } = this.props;\n\n    this._classNames = getClassNames(getStyles!, {\n      theme: theme!,\n      className: className || (calloutProps && calloutProps.className),\n      delay: delay!,\n      maxWidth: maxWidth!\n    });\n\n    return (\n      <Callout\n        target={ targetElement }\n        directionalHint={ directionalHint }\n        directionalHintForRTL={ directionalHintForRTL }\n        { ...calloutProps }\n        { ...getNativeProps(this.props, divProperties) }\n        className={ this._classNames.root }\n      >\n        <div\n          className={ this._classNames.content }\n          id={ id }\n          role='tooltip'\n          onMouseEnter={ this.props.onMouseEnter }\n          onMouseLeave={ this.props.onMouseLeave }\n        >\n          { onRenderContent(this.props, this._onRenderContent) }\n        </div>\n      </Callout >\n    );\n  }\n\n  private _onRenderContent = (props: ITooltipProps): JSX.Element => {\n    return (\n      <p className={ this._classNames.subText }>\n        { props.content }\n      </p>\n    );\n  }\n}\n"]}