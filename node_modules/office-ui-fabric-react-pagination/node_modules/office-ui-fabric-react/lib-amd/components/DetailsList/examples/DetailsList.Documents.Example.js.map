{"version":3,"file":"DetailsList.Documents.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Documents.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport {\n  DetailsList,\n  DetailsListLayoutMode,\n  Selection,\n  SelectionMode,\n  IColumn\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { lorem } from '@uifabric/example-app-base';\nimport './DetailsListExample.scss';\n\nlet _items: IDocument[] = [];\n\nconst fileIcons: { name: string; }[] = [\n  { 'name': 'accdb' },\n  { 'name': 'csv' },\n  { 'name': 'docx' },\n  { 'name': 'dotx' },\n  { 'name': 'mpp' },\n  { 'name': 'mpt' },\n  { 'name': 'odp' },\n  { 'name': 'ods' },\n  { 'name': 'odt' },\n  { 'name': 'one' },\n  { 'name': 'onepkg' },\n  { 'name': 'onetoc' },\n  { 'name': 'potx' },\n  { 'name': 'ppsx' },\n  { 'name': 'pptx' },\n  { 'name': 'pub' },\n  { 'name': 'vsdx' },\n  { 'name': 'vssx' },\n  { 'name': 'vstx' },\n  { 'name': 'xls' },\n  { 'name': 'xlsx' },\n  { 'name': 'xltx' },\n  { 'name': 'xsn' }\n];\n\nexport interface IDetailsListDocumentsExampleState {\n  columns: IColumn[];\n  items: IDocument[];\n  selectionDetails: string;\n  isModalSelection: boolean;\n  isCompactMode: boolean;\n}\n\nexport interface IDocument {\n  [key: string]: any;\n  name: string;\n  value: string;\n  iconName: string;\n  modifiedBy: string;\n  dateModified: string;\n  dateModifiedValue: number;\n  fileSize: string;\n  fileSizeRaw: number;\n}\n\nexport class DetailsListDocumentsExample extends React.Component<any, IDetailsListDocumentsExampleState> {\n  private _selection: Selection;\n\n  constructor(props: any) {\n    super(props);\n\n    //  Populate with items for demos.\n    if (_items.length === 0) {\n      for (let i = 0; i < 500; i++) {\n        const randomDate = this._randomDate(new Date(2012, 0, 1), new Date());\n        const randomFileSize = this._randomFileSize();\n        const randomFileType = this._randomFileIcon();\n        let fileName: string = lorem(2).replace(/\\W/g, '');\n        let userName: string = lorem(2).replace(/[^a-zA-Z ]/g, '');\n        fileName = fileName.charAt(0).toUpperCase() + fileName.slice(1).concat(`.${randomFileType.docType}`);\n        userName = userName.split(' ').map((name: string) => name.charAt(0).toUpperCase() + name.slice(1)).join(' ');\n        _items.push({\n          name: fileName,\n          value: fileName,\n          iconName: randomFileType.url,\n          modifiedBy: userName,\n          dateModified: randomDate.dateFormatted,\n          dateModifiedValue: randomDate.value,\n          fileSize: randomFileSize.value,\n          fileSizeRaw: randomFileSize.rawSize\n        });\n      }\n      _items = this._sortItems(_items, 'name');\n    }\n\n    const _columns: IColumn[] = [\n      {\n        key: 'column1',\n        name: 'File Type',\n        headerClassName: 'DetailsListExample-header--FileIcon',\n        className: 'DetailsListExample-cell--FileIcon',\n        iconClassName: 'DetailsListExample-Header-FileTypeIcon',\n        iconName: 'Page',\n        isIconOnly: true,\n        fieldName: 'name',\n        minWidth: 16,\n        maxWidth: 16,\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => {\n          return (\n            <img\n              src={ item.iconName }\n              className={ 'DetailsListExample-documentIconImage' }\n            />\n          );\n        }\n      },\n      {\n        key: 'column2',\n        name: 'Name',\n        fieldName: 'name',\n        minWidth: 210,\n        maxWidth: 350,\n        isRowHeader: true,\n        isResizable: true,\n        isSorted: true,\n        isSortedDescending: false,\n        onColumnClick: this._onColumnClick,\n        data: 'string',\n        isPadded: true\n      },\n      {\n        key: 'column3',\n        name: 'Date Modified',\n        fieldName: 'dateModifiedValue',\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        onColumnClick: this._onColumnClick,\n        data: 'number',\n        onRender: (item: IDocument) => {\n          return (\n            <span>\n              { item.dateModified }\n            </span>\n          );\n        },\n        isPadded: true\n      },\n      {\n        key: 'column4',\n        name: 'Modified By',\n        fieldName: 'modifiedBy',\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        isCollapsable: true,\n        data: 'string',\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => {\n          return (\n            <span>\n              { item.modifiedBy }\n            </span>\n          );\n        },\n        isPadded: true\n      },\n      {\n        key: 'column5',\n        name: 'File Size',\n        fieldName: 'fileSizeRaw',\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        isCollapsable: true,\n        data: 'number',\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => {\n          return (\n            <span>\n              { item.fileSize }\n            </span>\n          );\n        }\n      },\n    ];\n\n    this._selection = new Selection({\n      onSelectionChanged: () => {\n        this.setState({\n          selectionDetails: this._getSelectionDetails(),\n          isModalSelection: this._selection.isModal()\n        });\n      }\n    });\n\n    this.state = {\n      items: _items,\n      columns: _columns,\n      selectionDetails: this._getSelectionDetails(),\n      isModalSelection: this._selection.isModal(),\n      isCompactMode: false\n    };\n  }\n\n  public render() {\n    const { columns, isCompactMode, items, selectionDetails } = this.state;\n\n    return (\n      <div>\n        <Toggle\n          label='Enable Compact Mode'\n          checked={ isCompactMode }\n          onChanged={ this._onChangeCompactMode }\n          onText='Compact'\n          offText='Normal'\n        />\n        <Toggle\n          label='Enable Modal Selection'\n          checked={ this.state.isModalSelection }\n          onChanged={ this._onChangeModalSelection }\n          onText='Modal'\n          offText='Normal'\n        />\n        <div>{ selectionDetails }</div>\n        <TextField\n          label='Filter by name:'\n          onChanged={ this._onChangeText }\n        />\n        <MarqueeSelection selection={ this._selection }>\n          <DetailsList\n            items={ items }\n            compact={ isCompactMode }\n            columns={ columns }\n            selectionMode={ this.state.isModalSelection ? SelectionMode.multiple : SelectionMode.none }\n            setKey='set'\n            layoutMode={ DetailsListLayoutMode.justified }\n            isHeaderVisible={ true }\n            selection={ this._selection }\n            selectionPreservedOnEmptyClick={ true }\n            onItemInvoked={ this._onItemInvoked }\n            enterModalSelectionOnTouch={ true }\n          />\n        </MarqueeSelection>\n      </div>\n    );\n  }\n\n  public componentDidUpdate(previousProps: any, previousState: IDetailsListDocumentsExampleState) {\n    if (previousState.isModalSelection !== this.state.isModalSelection) {\n      this._selection.setModal(this.state.isModalSelection);\n    }\n  }\n\n  private _onChangeCompactMode = (checked: boolean): void => {\n    this.setState({ isCompactMode: checked });\n  }\n\n  private _onChangeModalSelection = (checked: boolean): void => {\n    this.setState({ isModalSelection: checked });\n  }\n\n  private _onChangeText = (text: any): void => {\n    this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items });\n  }\n\n  private _onItemInvoked(item: any): void {\n    alert(`Item invoked: ${item.name}`);\n  }\n\n  private _randomDate(start: Date, end: Date): { value: number; dateFormatted: string; } {\n    const date: Date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const dateData = {\n      value: date.valueOf(),\n      dateFormatted: date.toLocaleDateString()\n    };\n    return dateData;\n  }\n\n  private _randomFileIcon(): { docType: string; url: string; } {\n    const docType: string = fileIcons[Math.floor(Math.random() * fileIcons.length) + 0].name;\n    return {\n      docType,\n      url: `https://static2.sharepointonline.com/files/fabric/assets/brand-icons/document/svg/${docType}_16x1.svg`\n    };\n  }\n\n  private _randomFileSize(): { value: string; rawSize: number; } {\n    const fileSize: number = Math.floor(Math.random() * 100) + 30;\n    return {\n      value: `${fileSize} KB`,\n      rawSize: fileSize\n    };\n  }\n\n  private _getSelectionDetails(): string {\n    const selectionCount = this._selection.getSelectedCount();\n\n    switch (selectionCount) {\n      case 0:\n        return 'No items selected';\n      case 1:\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\n      default:\n        return `${selectionCount} items selected`;\n    }\n  }\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\n    const { columns, items } = this.state;\n    let newItems: IDocument[] = items.slice();\n    const newColumns: IColumn[] = columns.slice();\n    const currColumn: IColumn = newColumns.filter((currCol: IColumn, idx: number) => {\n      return column.key === currCol.key;\n    })[0];\n    newColumns.forEach((newCol: IColumn) => {\n      if (newCol === currColumn) {\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\n        currColumn.isSorted = true;\n      } else {\n        newCol.isSorted = false;\n        newCol.isSortedDescending = true;\n      }\n    });\n    newItems = this._sortItems(newItems, currColumn.fieldName, currColumn.isSortedDescending);\n    this.setState({\n      columns: newColumns,\n      items: newItems\n    });\n  }\n\n  private _sortItems = (items: IDocument[], sortBy: string, descending = false): IDocument[] => {\n    if (descending) {\n      return items.sort((a: IDocument, b: IDocument) => {\n        if (a[sortBy] < b[sortBy]) {\n          return 1;\n        }\n        if (a[sortBy] > b[sortBy]) {\n          return -1;\n        }\n        return 0;\n      });\n    } else {\n      return items.sort((a: IDocument, b: IDocument) => {\n        if (a[sortBy] < b[sortBy]) {\n          return -1;\n        }\n        if (a[sortBy] > b[sortBy]) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n  }\n}\n"]}