{"version":3,"file":"DetailsList.DragDrop.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.DragDrop.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { DetailsList, Selection } from 'office-ui-fabric-react/lib/DetailsList';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { IColumn, buildColumns } from 'office-ui-fabric-react/lib/DetailsList';\nimport { IDragDropEvents, IDragDropContext } from 'office-ui-fabric-react/lib/utilities/dragdrop/interfaces';\nimport './DetailsList.DragDrop.Example.scss';\nimport { IColumnReorderOptions } from 'office-ui-fabric-react/lib/components/DetailsList';\nimport { createListItems } from '@uifabric/example-app-base';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\n\nlet _draggedItem: any = null;\nlet _draggedIndex = -1;\nlet _items: any[];\nlet _columns: IColumn[];\nexport class DetailsListDragDropExample extends React.Component<\n  {},\n  {\n    items: {}[];\n    selectionDetails?: string;\n    columns: IColumn[];\n    isColumnReorderEnabled: boolean;\n    frozenColumnCountFromStart: string;\n    frozenColumnCountFromEnd: string;\n  }\n  > {\n  private _selection: Selection;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._onRenderItemColumn = this._onRenderItemColumn.bind(this);\n    this._handleColumnReorder = this._handleColumnReorder.bind(this);\n    this._getColumnReorderOptions = this._getColumnReorderOptions.bind(this);\n    this._onChangeColumnReorderEnabled = this._onChangeColumnReorderEnabled.bind(this);\n    this._onChangeStartCountText = this._onChangeStartCountText.bind(this);\n    this._onChangeEndCountText = this._onChangeEndCountText.bind(this);\n\n    this._selection = new Selection();\n\n    _items = _items || createListItems(10, 0);\n    _columns = buildColumns(_items, true);\n\n    this.state = {\n      items: createListItems(10),\n      columns: _columns,\n      isColumnReorderEnabled: false,\n      frozenColumnCountFromStart: '1',\n      frozenColumnCountFromEnd: '0'\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      items,\n      selectionDetails,\n      columns,\n      isColumnReorderEnabled,\n      frozenColumnCountFromStart,\n      frozenColumnCountFromEnd\n    } = this.state;\n\n    return (\n      <div className={ 'detailsListDragDropExample' }>\n        <Toggle\n          label={ 'Enable Column Reorder' }\n          checked={ isColumnReorderEnabled }\n          onChanged={ this._onChangeColumnReorderEnabled }\n          onText={ 'Enabled' }\n          offText={ 'Disabled' }\n        />\n        <TextField\n          label={ 'Number of Left frozen columns:' }\n          onGetErrorMessage={ this._validateNumber }\n          value={ frozenColumnCountFromStart }\n          onChanged={ this._onChangeStartCountText }\n        />\n        <TextField\n          label={ 'Number of Right frozen columns:' }\n          onGetErrorMessage={ this._validateNumber }\n          value={ frozenColumnCountFromEnd }\n          onChanged={ this._onChangeEndCountText }\n        />\n        <div>{ selectionDetails }</div>\n        <MarqueeSelection selection={ this._selection }>\n          <DetailsList\n            setKey={ 'items' }\n            items={ items }\n            columns={ columns }\n            selection={ this._selection }\n            selectionPreservedOnEmptyClick={ true }\n            onItemInvoked={ this._onItemInvoked }\n            onRenderItemColumn={ this._onRenderItemColumn }\n            dragDropEvents={ this._getDragDropEvents() }\n            columnReorderOptions={ this.state.isColumnReorderEnabled ? this._getColumnReorderOptions() : undefined }\n          />\n        </MarqueeSelection>\n      </div>\n    );\n  }\n\n  private _handleColumnReorder(draggedIndex: number, targetIndex: number): void {\n    const draggedItems = this.state.columns[draggedIndex];\n    const newColumns: IColumn[] = [...this.state.columns];\n\n    // insert before the dropped item\n    newColumns.splice(draggedIndex, 1);\n    newColumns.splice(targetIndex, 0, draggedItems);\n    this.setState({ columns: newColumns });\n  }\n\n  private _getColumnReorderOptions(): IColumnReorderOptions {\n    return {\n      frozenColumnCountFromStart: !isNaN(Number(this.state.frozenColumnCountFromStart))\n        ? parseInt(this.state.frozenColumnCountFromStart, 10)\n        : undefined,\n      frozenColumnCountFromEnd: !isNaN(Number(this.state.frozenColumnCountFromEnd))\n        ? parseInt(this.state.frozenColumnCountFromEnd, 10)\n        : undefined,\n      handleColumnReorder: this._handleColumnReorder\n    };\n  }\n\n  private _validateNumber(value: string): string {\n    return isNaN(Number(value)) ? `The value should be a number, actual is ${value}.` : '';\n  }\n\n  private _onChangeStartCountText(text: any): void {\n    this.setState({ frozenColumnCountFromStart: text });\n  }\n\n  private _onChangeEndCountText(text: any): void {\n    this.setState({ frozenColumnCountFromEnd: text });\n  }\n\n  private _onChangeColumnReorderEnabled(checked: boolean): void {\n    this.setState({ isColumnReorderEnabled: checked });\n  }\n\n  private _getDragDropEvents(): IDragDropEvents {\n    return {\n      canDrop: (dropContext?: IDragDropContext, dragContext?: IDragDropContext) => { return true; },\n      canDrag: (item?: any) => { return true; },\n      onDragEnter: (item?: any, event?: DragEvent) => { return 'dragEnter'; }, // return string is the css classes that will be added to the entering element.\n      onDragLeave: (item?: any, event?: DragEvent) => { return; },\n      onDrop: (item?: any, event?: DragEvent) => {\n        if (_draggedItem) {\n          this._insertBeforeItem(item);\n        }\n      },\n      onDragStart: (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent) => {\n        _draggedItem = item;\n        _draggedIndex = itemIndex!;\n      },\n      onDragEnd: (item?: any, event?: DragEvent) => {\n        _draggedItem = null;\n        _draggedIndex = -1;\n      },\n    };\n  }\n\n  private _onItemInvoked(item: any): void {\n    alert(`Item invoked: ${item.name}`);\n  }\n\n  private _onRenderItemColumn(item: any, index: number, column: IColumn): JSX.Element {\n    if (column.key === 'name') {\n      return <Link data-selection-invoke={ true }>{ item[column.key] }</Link>;\n    }\n\n    return item[column.key];\n  }\n\n  private _insertBeforeItem(item: any): void {\n    const draggedItems = this._selection.isIndexSelected(_draggedIndex) ? this._selection.getSelection() : [_draggedItem];\n\n    const items: any[] = this.state.items.filter((i: number) => draggedItems.indexOf(i) === -1);\n    let insertIndex = items.indexOf(item);\n\n    // if dragging/dropping on itself, index will be 0.\n    if (insertIndex === -1) {\n      insertIndex = 0;\n    }\n\n    items.splice(insertIndex, 0, ...draggedItems);\n\n    this.setState({ items: items });\n  }\n}\n"]}