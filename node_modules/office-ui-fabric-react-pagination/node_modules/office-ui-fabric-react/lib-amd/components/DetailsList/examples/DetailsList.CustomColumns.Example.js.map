{"version":3,"file":"DetailsList.CustomColumns.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.CustomColumns.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createListItems } from '@uifabric/example-app-base';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport {\n  DetailsList,\n  buildColumns,\n  IColumn\n} from 'office-ui-fabric-react/lib/DetailsList';\n\nlet _items: any[];\n\nexport interface IDetailsListCustomColumnsExampleState {\n  sortedItems?: any[];\n  columns?: IColumn[];\n}\n\nexport class DetailsListCustomColumnsExample extends React.Component<{}, IDetailsListCustomColumnsExampleState> {\n\n  constructor(props: {}) {\n    super(props);\n\n    _items = _items || createListItems(500);\n\n    this.state = {\n      sortedItems: _items,\n      columns: _buildColumns()\n    };\n  }\n\n  public render() {\n    const { sortedItems, columns } = this.state;\n\n    return (\n      <DetailsList\n        items={ sortedItems as any[] }\n        setKey='set'\n        columns={ columns }\n        onRenderItemColumn={ _renderItemColumn }\n        onColumnHeaderClick={ this._onColumnClick }\n        onItemInvoked={ this._onItemInvoked }\n        onColumnHeaderContextMenu={ this._onColumnHeaderContextMenu }\n      />\n    );\n  }\n\n  private _onColumnClick = (event: React.MouseEvent<HTMLElement>, column: IColumn): void => {\n    const { columns } = this.state;\n    let { sortedItems } = this.state;\n    let isSortedDescending = column.isSortedDescending;\n\n    // If we've sorted this column, flip it.\n    if (column.isSorted) {\n      isSortedDescending = !isSortedDescending;\n    }\n\n    // Sort the items.\n    sortedItems = sortedItems!.concat([]).sort((a, b) => {\n      const firstValue = a[column.fieldName];\n      const secondValue = b[column.fieldName];\n\n      if (isSortedDescending) {\n        return firstValue > secondValue ? -1 : 1;\n      } else {\n        return firstValue > secondValue ? 1 : -1;\n      }\n    });\n\n    // Reset the items and columns to match the state.\n    this.setState({\n      sortedItems: sortedItems,\n      columns: columns!.map(col => {\n        col.isSorted = (col.key === column.key);\n\n        if (col.isSorted) {\n          col.isSortedDescending = isSortedDescending;\n        }\n\n        return col;\n      })\n    });\n  }\n\n  private _onColumnHeaderContextMenu(column: IColumn | undefined, ev: React.MouseEvent<HTMLElement> | undefined): void {\n    console.log(`column ${column!.key} contextmenu opened.`);\n  }\n\n  private _onItemInvoked(item: any, index: number | undefined): void {\n    alert(`Item ${item.name} at index ${index} has been invoked.`);\n  }\n}\n\nfunction _buildColumns() {\n  const columns = buildColumns(_items);\n\n  const thumbnailColumn = columns.filter(column => column.name === 'thumbnail')[0];\n\n  // Special case one column's definition.\n  thumbnailColumn.name = '';\n  thumbnailColumn.maxWidth = 50;\n\n  return columns;\n}\n\nfunction _renderItemColumn(item: any, index: number, column: IColumn) {\n  const fieldContent = item[column.fieldName];\n\n  switch (column.key) {\n    case 'thumbnail':\n      return <Image src={ fieldContent } width={ 50 } height={ 50 } imageFit={ ImageFit.cover } />;\n\n    case 'name':\n      return <Link href='#'>{ fieldContent }</Link>;\n\n    case 'color':\n      return <span data-selection-disabled={ true } style={ { color: fieldContent, height: '100%', display: 'block' } }>{ fieldContent }</span>;\n\n    default:\n      return <span>{ fieldContent }</span>;\n  }\n}\n"]}