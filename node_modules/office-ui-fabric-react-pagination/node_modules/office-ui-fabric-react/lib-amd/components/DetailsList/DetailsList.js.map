{"version":3,"file":"DetailsList.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport * as React from 'react';\nimport * as stylesImport from './DetailsList.scss';\n\nimport {\n  BaseComponent,\n  KeyCodes,\n  assign,\n  css,\n  elementContains,\n  getRTLSafeKeyCode,\n  IRenderFunction,\n  createRef\n} from '../../Utilities';\nimport {\n  CheckboxVisibility,\n  ColumnActionsMode,\n  ConstrainMode,\n  DetailsListLayoutMode,\n  IColumn,\n  IDetailsList,\n  IDetailsListProps,\n  IDetailsGroupRenderProps,\n  ColumnDragEndLocation\n} from '../DetailsList/DetailsList.types';\nimport { DetailsHeader, IDetailsHeader, SelectAllVisibility, IDetailsHeaderProps, IColumnReorderHeaderProps } from '../DetailsList/DetailsHeader';\nimport { DetailsRow, IDetailsRowProps } from '../DetailsList/DetailsRow';\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport {\n  ISelectionZone,\n  IObjectWithKey,\n  ISelection,\n  Selection,\n  SelectionMode,\n  SelectionZone,\n} from '../../utilities/selection/index';\n\nimport { DragDropHelper } from '../../utilities/dragdrop/DragDropHelper';\nimport { IGroupedList, GroupedList, IGroupRenderProps, IGroupDividerProps } from '../../GroupedList';\nimport {\n  IList,\n  List,\n  IListProps,\n  ScrollToMode\n} from '../../List';\nimport { withViewport } from '../../utilities/decorators/withViewport';\nimport { GetGroupCount } from '../../utilities/groupedList/GroupedListUtility';\nimport { IDetailsFooterProps } from '../DetailsList/DetailsFooter.types';\n\nconst styles: any = stylesImport;\n\nexport interface IDetailsListState {\n  focusedItemIndex: number;\n  lastWidth?: number;\n  lastSelectionMode?: SelectionMode;\n  adjustedColumns?: IColumn[];\n  isCollapsed?: boolean;\n  isSizing?: boolean;\n  isDropping?: boolean;\n  isSomeGroupExpanded?: boolean;\n}\n\nconst MIN_COLUMN_WIDTH = 100; // this is the global min width\nconst CHECKBOX_WIDTH = 40;\nconst GROUP_EXPAND_WIDTH = 36;\nconst DEFAULT_INNER_PADDING = 16;\nconst ISPADDED_WIDTH = 24;\n\nconst DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\nconst DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\n\nconst SHIMMER_INITIAL_ITEMS = 10;\nconst SHIMMER_ITEMS = new Array(SHIMMER_INITIAL_ITEMS);\n\n@withViewport\nexport class DetailsList extends BaseComponent<IDetailsListProps, IDetailsListState> implements IDetailsList {\n  public static defaultProps = {\n    layoutMode: DetailsListLayoutMode.justified,\n    selectionMode: SelectionMode.multiple,\n    constrainMode: ConstrainMode.horizontalConstrained,\n    checkboxVisibility: CheckboxVisibility.onHover,\n    isHeaderVisible: true,\n    enableShimmer: false\n  };\n\n  // References\n  private _root = createRef<HTMLDivElement>();\n  private _header = createRef<IDetailsHeader>();\n  private _groupedList = createRef<IGroupedList>();\n  private _list = createRef<IList>();\n  private _focusZone = createRef<IFocusZone>();\n  private _selectionZone = createRef<ISelectionZone>();\n\n  private _selection: ISelection;\n  private _activeRows: { [key: string]: DetailsRow };\n  private _dragDropHelper: DragDropHelper | null;\n  private _initialFocusedIndex: number | undefined;\n  private _pendingForceUpdate: boolean;\n\n  private _columnOverrides: {\n    [key: string]: IColumn;\n  };\n\n  constructor(props: IDetailsListProps) {\n    super(props);\n\n    this._activeRows = {};\n    this._columnOverrides = {};\n    this._onColumnIsSizingChanged = this._onColumnIsSizingChanged.bind(this);\n    this._onColumnResized = this._onColumnResized.bind(this);\n    this._onColumnAutoResized = this._onColumnAutoResized.bind(this);\n    this._onRowDidMount = this._onRowDidMount.bind(this);\n    this._onRowWillUnmount = this._onRowWillUnmount.bind(this);\n    this._onToggleCollapse = this._onToggleCollapse.bind(this);\n    this._onActiveRowChanged = this._onActiveRowChanged.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._onHeaderKeyDown = this._onHeaderKeyDown.bind(this);\n    this._onContentKeyDown = this._onContentKeyDown.bind(this);\n    this._onRenderCell = this._onRenderCell.bind(this);\n    this._onGroupExpandStateChanged = this._onGroupExpandStateChanged.bind(this);\n    this._onColumnDragEnd = this._onColumnDragEnd.bind(this);\n\n    this.state = {\n      focusedItemIndex: -1,\n      lastWidth: 0,\n      adjustedColumns: this._getAdjustedColumns(props),\n      isSizing: false,\n      isDropping: false,\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed\n    };\n\n    this._selection = props.selection || new Selection({ onSelectionChanged: undefined, getKey: props.getKey });\n\n    if (!this.props.disableSelectionZone) {\n      this._selection.setItems(props.items as IObjectWithKey[], false);\n    }\n\n    this._dragDropHelper = props.dragDropEvents\n      ? new DragDropHelper({\n        selection: this._selection,\n        minimumPixelsForDrag: props.minimumPixelsForDrag\n      })\n      : null;\n    this._initialFocusedIndex = props.initialFocusedIndex;\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    this._list.current && this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    this._groupedList.current && this._groupedList.current.scrollToIndex(index, measureItem, scrollToMode);\n  }\n\n  public focusIndex(\n    index: number,\n    forceIntoFirstElement: boolean = false,\n    measureItem?: (itemIndex: number) => number,\n    scrollToMode?: ScrollToMode): void {\n\n    const item = this.props.items[index];\n    if (item) {\n      this.scrollToIndex(index, measureItem, scrollToMode);\n\n      const itemKey = this._getItemKey(item, index);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row, forceIntoFirstElement);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropHelper) {\n      this._dragDropHelper.dispose();\n    }\n  }\n\n  public componentDidUpdate(prevProps: any, prevState: any) {\n    if (this._initialFocusedIndex !== undefined) {\n      const item = this.props.items[this._initialFocusedIndex];\n      if (item) {\n        const itemKey = this._getItemKey(item, this._initialFocusedIndex);\n        const row = this._activeRows[itemKey];\n        if (row) {\n          this._setFocusToRowIfPending(row);\n        }\n      }\n    }\n\n    if (\n      this.props.items !== prevProps.items &&\n      this.props.items.length > 0 &&\n      this.state.focusedItemIndex !== -1 &&\n      !elementContains(this._root.current, document.activeElement as HTMLElement, false)\n    ) {\n      // Item set has changed and previously-focused item is gone.\n      // Set focus to item at index of previously-focused item if it is in range,\n      // else set focus to the last item.\n      const index = this.state.focusedItemIndex < this.props.items.length ?\n        this.state.focusedItemIndex :\n        this.props.items.length - 1;\n      const item = this.props.items[index];\n      const itemKey = this._getItemKey(item, this.state.focusedItemIndex);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row);\n      } else {\n        this._initialFocusedIndex = index;\n      }\n    }\n\n    if (this.props.onDidUpdate) {\n      this.props.onDidUpdate(this);\n    }\n  }\n\n  public componentWillReceiveProps(newProps: IDetailsListProps): void {\n    const {\n      checkboxVisibility,\n      items,\n      setKey,\n      selectionMode = this._selection.mode,\n      columns,\n      viewport,\n      compact\n    } = this.props;\n    const shouldResetSelection = (newProps.setKey !== setKey) || newProps.setKey === undefined;\n    let shouldForceUpdates = false;\n\n    if (newProps.layoutMode !== this.props.layoutMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (shouldResetSelection) {\n      this._initialFocusedIndex = newProps.initialFocusedIndex;\n      // reset focusedItemIndex when setKey changes\n      this.setState({\n        focusedItemIndex: (this._initialFocusedIndex !== undefined) ? this._initialFocusedIndex : -1\n      });\n    }\n\n    if (!this.props.disableSelectionZone && newProps.items !== items) {\n      this._selection.setItems(newProps.items, shouldResetSelection);\n    }\n\n    if (\n      newProps.checkboxVisibility !== checkboxVisibility ||\n      newProps.columns !== columns ||\n      newProps.viewport!.width !== viewport!.width ||\n      newProps.compact !== compact\n    ) {\n      shouldForceUpdates = true;\n    }\n\n    this._adjustColumns(newProps, true);\n\n    if (newProps.selectionMode !== selectionMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      this._pendingForceUpdate = true;\n    }\n  }\n\n  public componentWillUpdate(): void {\n    if (this._pendingForceUpdate) {\n      this._forceListUpdates();\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaLabelForListHeader,\n      ariaLabelForSelectAllCheckbox,\n      ariaLabelForSelectionColumn,\n      className,\n      checkboxVisibility,\n      compact,\n      constrainMode,\n      dragDropEvents,\n      groups,\n      groupProps,\n      items,\n      isHeaderVisible,\n      layoutMode,\n      onItemInvoked,\n      onItemContextMenu,\n      onColumnHeaderClick,\n      onColumnHeaderContextMenu,\n      selectionMode,\n      selectionPreservedOnEmptyClick,\n      selectionZoneProps,\n      ariaLabel,\n      ariaLabelForGrid,\n      rowElementEventMap,\n      shouldApplyApplicationRole = false,\n      getKey,\n      listProps,\n      usePageCache,\n      onShouldVirtualize,\n      enableShimmer,\n      minimumPixelsForDrag\n    } = this.props;\n    const {\n      adjustedColumns,\n      isCollapsed,\n      isSizing,\n      isSomeGroupExpanded\n    } = this.state;\n    const {\n      _selection: selection,\n      _dragDropHelper: dragDropHelper\n    } = this;\n    const groupNestingDepth = this._getGroupNestingDepth();\n    const additionalListProps: IListProps = {\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\n      getKey,\n      ...listProps\n    };\n    let selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\n    if (selectionMode === SelectionMode.single) {\n      selectAllVisibility = SelectAllVisibility.hidden;\n    }\n    if (selectionMode === SelectionMode.multiple) {\n      // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\n      let isCollapsedGroupSelectVisible = groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\n      if (isCollapsedGroupSelectVisible === undefined) {\n        isCollapsedGroupSelectVisible = true;\n      }\n      const isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\n      selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\n    }\n\n    if (checkboxVisibility === CheckboxVisibility.hidden) {\n      selectAllVisibility = SelectAllVisibility.none;\n    }\n\n    const {\n      onRenderDetailsHeader = this._onRenderDetailsHeader,\n      onRenderDetailsFooter = this._onRenderDetailsFooter\n    } = this.props;\n\n    const detailsFooterProps = this._getDetailsFooterProps();\n    const columnReorderProps = this._getColumnReorderProps();\n    const rowCount = (isHeaderVisible ? 1 : 0) + GetGroupCount(groups) + (items ? items.length : 0);\n\n    const list = groups ? (\n      <GroupedList\n        ref={ this._groupedList }\n        groups={ groups }\n        groupProps={ groupProps ? this._getGroupProps(groupProps) : undefined }\n        items={ items }\n        onRenderCell={ this._onRenderCell }\n        selection={ selection }\n        selectionMode={ selectionMode }\n        dragDropEvents={ dragDropEvents }\n        dragDropHelper={ dragDropHelper as DragDropHelper }\n        eventsToRegister={ rowElementEventMap }\n        listProps={ additionalListProps }\n        onGroupExpandStateChanged={ this._onGroupExpandStateChanged }\n        usePageCache={ usePageCache }\n        onShouldVirtualize={ onShouldVirtualize }\n      />\n    ) : (\n        <List\n          ref={ this._list }\n          role='presentation'\n          items={ enableShimmer && !items.length ? SHIMMER_ITEMS : items }\n          onRenderCell={ this._onRenderListCell(0) }\n          usePageCache={ usePageCache }\n          onShouldVirtualize={ onShouldVirtualize }\n          { ...additionalListProps }\n        />\n      );\n\n    return (\n      // If shouldApplyApplicationRole is true, role application will be applied to make arrow keys work\n      // with JAWS.\n      <div\n        ref={ this._root }\n        className={ css(\n          'ms-DetailsList',\n          styles.root,\n          className,\n          layoutMode === DetailsListLayoutMode.fixedColumns && 'is-fixed',\n          constrainMode === ConstrainMode.horizontalConstrained &&\n          'is-horizontalConstrained ' + styles.rootIsHorizontalConstrained,\n          !!compact && 'ms-DetailsList--Compact ' + styles.rootCompact\n        ) }\n        data-automationid='DetailsList'\n        data-is-scrollable='false'\n        aria-label={ ariaLabel }\n        { ...(shouldApplyApplicationRole ? { role: 'application' } : {}) }\n      >\n        <div\n          role='grid'\n          aria-label={ ariaLabelForGrid }\n          aria-rowcount={ rowCount }\n          aria-colcount={ (selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) + (adjustedColumns ? adjustedColumns.length : 0) }\n          aria-readonly='true'\n        >\n          <div onKeyDown={ this._onHeaderKeyDown } role='presentation'>\n            { isHeaderVisible &&\n              onRenderDetailsHeader(\n                {\n                  componentRef: this._header,\n                  selectionMode: selectionMode!,\n                  layoutMode: layoutMode!,\n                  selection: selection,\n                  columns: adjustedColumns as IColumn[],\n                  onColumnClick: onColumnHeaderClick,\n                  onColumnContextMenu: onColumnHeaderContextMenu,\n                  onColumnResized: this._onColumnResized,\n                  onColumnIsSizingChanged: this._onColumnIsSizingChanged,\n                  onColumnAutoResized: this._onColumnAutoResized,\n                  groupNestingDepth: groupNestingDepth,\n                  isAllCollapsed: isCollapsed,\n                  onToggleCollapseAll: this._onToggleCollapse,\n                  ariaLabel: ariaLabelForListHeader,\n                  ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\n                  ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\n                  selectAllVisibility: selectAllVisibility,\n                  collapseAllVisibility: groupProps && groupProps.collapseAllVisibility,\n                  columnReorderProps: columnReorderProps,\n                  minimumPixelsForDrag: minimumPixelsForDrag\n                },\n                this._onRenderDetailsHeader\n              ) }\n          </div>\n          <div onKeyDown={ this._onContentKeyDown } role='presentation'>\n            <FocusZone\n              componentRef={ this._focusZone }\n              className={ styles.focusZone }\n              direction={ FocusZoneDirection.vertical }\n              isInnerZoneKeystroke={ isRightArrow }\n              onActiveElementChanged={ this._onActiveRowChanged }\n              onBlur={ this._onBlur }\n            >\n              { !this.props.disableSelectionZone ? (\n                <SelectionZone\n                  ref={ this._selectionZone }\n                  selection={ selection }\n                  selectionPreservedOnEmptyClick={ selectionPreservedOnEmptyClick }\n                  selectionMode={ selectionMode }\n                  onItemInvoked={ onItemInvoked }\n                  onItemContextMenu={ onItemContextMenu }\n                  enterModalOnTouch={ this.props.enterModalSelectionOnTouch }\n                  { ...selectionZoneProps || {} }\n                >\n                  { list }\n                </SelectionZone>\n              ) : (\n                  list\n                ) }\n            </FocusZone>\n          </div>\n          { onRenderDetailsFooter(\n            {\n              ...detailsFooterProps\n            },\n            this._onRenderDetailsFooter\n          ) }\n        </div>\n      </div>\n    );\n  }\n\n  public forceUpdate(): void {\n    super.forceUpdate();\n    this._forceListUpdates();\n  }\n\n  protected _onRenderRow = (props: IDetailsRowProps, defaultRender?: any): JSX.Element => {\n    return <DetailsRow { ...props } />;\n  }\n\n  private _onRenderDetailsHeader = (detailsHeaderProps: IDetailsHeaderProps, defaultRender?: IRenderFunction<IDetailsHeaderProps>): JSX.Element => {\n    return <DetailsHeader { ...detailsHeaderProps } />;\n  }\n\n  private _onRenderDetailsFooter = (\n    detailsFooterProps: IDetailsFooterProps,\n    defaultRender?: IRenderFunction<IDetailsFooterProps>\n  ): JSX.Element | null => {\n    return null;\n  }\n\n  private _onRenderListCell = (nestingDepth: number)\n    : (item: any, itemIndex: number) => React.ReactNode => {\n    return (item: any, itemIndex: number): React.ReactNode => {\n      return this._onRenderCell(nestingDepth, item, itemIndex as number);\n    };\n  }\n\n  private _onRenderCell(nestingDepth: number, item: any, index: number): React.ReactNode {\n    const {\n      compact,\n      dragDropEvents,\n      rowElementEventMap: eventsToRegister,\n      onRenderMissingItem,\n      onRenderItemColumn,\n      onRenderRow = this._onRenderRow,\n      selectionMode = this._selection.mode,\n      viewport,\n      checkboxVisibility,\n      getRowAriaLabel,\n      getRowAriaDescribedBy,\n      checkButtonAriaLabel,\n      checkboxCellClassName,\n      groupProps\n    } = this.props;\n    const collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\n    const selection = this._selection;\n    const dragDropHelper = this._dragDropHelper;\n    const {\n      adjustedColumns: columns\n    } = this.state;\n\n    const rowProps: IDetailsRowProps = {\n      item: item,\n      itemIndex: index,\n      compact: compact,\n      columns: columns as IColumn[],\n      groupNestingDepth: nestingDepth,\n      selectionMode: selectionMode,\n      selection: selection,\n      onDidMount: this._onRowDidMount,\n      onWillUnmount: this._onRowWillUnmount,\n      onRenderItemColumn: onRenderItemColumn,\n      eventsToRegister: eventsToRegister,\n      dragDropEvents: dragDropEvents,\n      dragDropHelper: dragDropHelper!,\n      viewport: viewport,\n      checkboxVisibility: checkboxVisibility,\n      collapseAllVisibility: collapseAllVisibility,\n      getRowAriaLabel: getRowAriaLabel,\n      getRowAriaDescribedBy: getRowAriaDescribedBy,\n      checkButtonAriaLabel: checkButtonAriaLabel,\n      checkboxCellClassName: checkboxCellClassName,\n    };\n\n    if (!item) {\n      if (onRenderMissingItem) {\n        return onRenderMissingItem(index, rowProps);\n      }\n\n      return null;\n    }\n\n    return onRenderRow(rowProps, this._onRenderRow);\n  }\n\n  private _onGroupExpandStateChanged(isSomeGroupExpanded: boolean): void {\n    this.setState({ isSomeGroupExpanded: isSomeGroupExpanded });\n  }\n\n  private _onColumnIsSizingChanged(column: IColumn, isSizing: boolean): void {\n    this.setState({ isSizing: isSizing });\n  }\n\n  private _onHeaderKeyDown(ev: React.KeyboardEvent<HTMLElement>): void {\n    if (ev.which === KeyCodes.down) {\n      if (this._focusZone.current && this._focusZone.current.focus()) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  }\n\n  private _onContentKeyDown(ev: React.KeyboardEvent<HTMLElement>): void {\n    if (ev.which === KeyCodes.up && !ev.altKey) {\n      if (this._header.current && this._header.current.focus()) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  }\n\n  private _getGroupNestingDepth(): number {\n    const { groups } = this.props;\n    let level = 0;\n    let groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  }\n\n  private _onRowDidMount(row: DetailsRow): void {\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    this._activeRows[itemKey] = row; // this is used for column auto resize\n\n    this._setFocusToRowIfPending(row);\n\n    const { onRowDidMount } = this.props;\n    if (onRowDidMount) {\n      onRowDidMount(item, itemIndex);\n    }\n  }\n\n  private _setFocusToRowIfPending(row: DetailsRow): void {\n    const { itemIndex } = row.props;\n    if (this._initialFocusedIndex !== undefined && itemIndex === this._initialFocusedIndex) {\n      this._setFocusToRow(row);\n      delete this._initialFocusedIndex;\n    }\n  }\n\n  private _setFocusToRow(row: DetailsRow, forceIntoFirstElement: boolean = false): void {\n    if (this._selectionZone.current) {\n      this._selectionZone.current.ignoreNextFocus();\n    }\n    this._async.setTimeout((): void => {\n      row.focus(forceIntoFirstElement);\n    }, 0);\n  }\n\n  private _onRowWillUnmount(row: DetailsRow): void {\n    const { onRowWillUnmount } = this.props;\n\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    delete this._activeRows[itemKey];\n\n    if (onRowWillUnmount) {\n      onRowWillUnmount(item, itemIndex);\n    }\n  }\n\n  private _onToggleCollapse(collapsed: boolean): void {\n    this.setState({\n      isCollapsed: collapsed\n    });\n    if (this._groupedList.current) {\n      this._groupedList.current.toggleCollapseAll(collapsed);\n    }\n  }\n\n  private _onColumnDragEnd(props: { dropLocation?: ColumnDragEndLocation }, event: MouseEvent): void {\n    const { columnReorderOptions } = this.props;\n    let finalDropLocation: ColumnDragEndLocation = ColumnDragEndLocation.outside;\n    if (columnReorderOptions && columnReorderOptions.onDragEnd) {\n      if (props.dropLocation && props.dropLocation !== ColumnDragEndLocation.header) {\n        finalDropLocation = props.dropLocation;\n      } else if (this._root.current) {\n        const clientRect = this._root.current.getBoundingClientRect();\n        if (\n          event.clientX > clientRect.left &&\n          event.clientX < clientRect.right &&\n          event.clientY > clientRect.top &&\n          event.clientY < clientRect.bottom\n        ) {\n          finalDropLocation = ColumnDragEndLocation.surface;\n        }\n      }\n      columnReorderOptions.onDragEnd(finalDropLocation);\n    }\n  }\n\n  private _forceListUpdates(): void {\n    this._pendingForceUpdate = false;\n\n    if (this._groupedList.current) {\n      this._groupedList.current.forceUpdate();\n    }\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n    }\n  }\n\n  private _adjustColumns(newProps: IDetailsListProps, forceUpdate?: boolean, resizingColumnIndex?: number): void {\n    const adjustedColumns = this._getAdjustedColumns(newProps, forceUpdate, resizingColumnIndex);\n    const { width: viewportWidth } = this.props.viewport!;\n\n    if (adjustedColumns) {\n      this.setState({\n        adjustedColumns: adjustedColumns,\n        lastWidth: viewportWidth,\n      });\n    }\n  }\n\n  /** Returns adjusted columns, given the viewport size and layout mode. */\n  private _getAdjustedColumns(newProps: IDetailsListProps, forceUpdate?: boolean, resizingColumnIndex?: number): IColumn[] | undefined {\n    const { items: newItems, layoutMode, selectionMode } = newProps;\n    let { columns: newColumns } = newProps;\n    let { width: viewportWidth } = newProps.viewport!;\n\n    const columns = this.props ? this.props.columns : [];\n    const lastWidth = this.state ? this.state.lastWidth : -1;\n    const lastSelectionMode = this.state ? this.state.lastSelectionMode : undefined;\n\n    if (viewportWidth !== undefined) {\n      if (!forceUpdate &&\n        lastWidth === viewportWidth &&\n        lastSelectionMode === selectionMode &&\n        (!columns || newColumns === columns)) {\n        return undefined;\n      }\n    } else {\n      viewportWidth = this.props.viewport!.width;\n    }\n\n    newColumns = newColumns || buildColumns(newItems, true);\n\n    let adjustedColumns: IColumn[];\n\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\n      adjustedColumns = this._getFixedColumns(newColumns);\n\n      // Preserve adjusted column calculated widths.\n      adjustedColumns.forEach(column => {\n        this._rememberCalculatedWidth(column, column.calculatedWidth!);\n      });\n    } else {\n      if (resizingColumnIndex !== undefined) {\n        adjustedColumns = this._getJustifiedColumnsAfterResize(newColumns, viewportWidth, newProps, resizingColumnIndex);\n      } else {\n        adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps, 0);\n      }\n\n      adjustedColumns.forEach(column => {\n        this._getColumnOverride(column.key).currentWidth = column.calculatedWidth;\n      });\n    }\n\n    return adjustedColumns;\n  }\n\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\n  private _getFixedColumns(newColumns: IColumn[]): IColumn[] {\n    return newColumns.map(column => {\n      const newColumn: IColumn = assign({}, column, this._columnOverrides[column.key]);\n\n      if (!newColumn.calculatedWidth) {\n        newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\n      }\n\n      return newColumn;\n    });\n  }\n\n  private _getJustifiedColumnsAfterResize(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps, resizingColumnIndex: number): IColumn[] {\n    const fixedColumns = newColumns.slice(0, resizingColumnIndex);\n    fixedColumns.forEach(column =>\n      column.calculatedWidth = this._getColumnOverride(column.key).currentWidth);\n\n    const fixedWidth = fixedColumns.reduce((total, column, i) => total + getPaddedWidth(column, i === 0), 0);\n\n    const remainingColumns = newColumns.slice(resizingColumnIndex);\n    const remainingWidth = viewportWidth - fixedWidth;\n\n    return [\n      ...fixedColumns,\n      ...this._getJustifiedColumns(remainingColumns, remainingWidth, props, resizingColumnIndex),\n    ];\n  }\n\n  /** Builds a set of columns to fix within the viewport width. */\n  private _getJustifiedColumns(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps, firstIndex: number): IColumn[] {\n    const {\n      selectionMode = this._selection.mode,\n      checkboxVisibility,\n      groups\n    } = props;\n    const outerPadding = DEFAULT_INNER_PADDING;\n    const rowCheckWidth = (selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden) ? CHECKBOX_WIDTH : 0;\n    const groupExpandWidth = groups ? GROUP_EXPAND_WIDTH : 0;\n    let totalWidth = 0; // offset because we have one less inner padding.\n    const availableWidth = viewportWidth - (outerPadding + rowCheckWidth + groupExpandWidth);\n    const adjustedColumns: IColumn[] = newColumns.map((column, i) => {\n      const newColumn = assign(\n        {},\n        column,\n        {\n          calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH\n        },\n        this._columnOverrides[column.key]);\n\n      const isFirst = i + firstIndex === 0;\n      totalWidth += getPaddedWidth(newColumn, isFirst);\n\n      return newColumn;\n    });\n\n    let lastIndex = adjustedColumns.length - 1;\n\n    // Shrink or remove collapsable columns.\n    while (lastIndex > 0 && totalWidth > availableWidth) {\n      const column = adjustedColumns[lastIndex];\n\n      const minWidth = column.minWidth || MIN_COLUMN_WIDTH;\n      const overflowWidth = totalWidth - availableWidth;\n\n      if (column.calculatedWidth! - minWidth >= overflowWidth || !column.isCollapsable) {\n        column.calculatedWidth = Math.max(column.calculatedWidth! - overflowWidth, minWidth);\n        totalWidth = availableWidth;\n      } else {\n        totalWidth -= getPaddedWidth(column, false);\n        adjustedColumns.splice(lastIndex, 1);\n      }\n      lastIndex--;\n    }\n\n    // Then expand columns starting at the beginning, until we've filled the width.\n    for (let i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\n      const column = adjustedColumns[i];\n      const isLast = i === (adjustedColumns.length - 1);\n      const overrides = this._columnOverrides[column.key];\n      if (overrides && overrides.calculatedWidth && !isLast) {\n        continue;\n      }\n\n      const spaceLeft = availableWidth - totalWidth;\n      let increment: number;\n      if (isLast) {\n        increment = spaceLeft;\n      } else {\n        const maxWidth = column.maxWidth;\n        const minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\n        increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\n      }\n\n      column.calculatedWidth = (column.calculatedWidth as number) + increment;\n      totalWidth += increment;\n    }\n\n    return adjustedColumns;\n  }\n\n  private _onColumnResized(resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number): void {\n    const newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\n    if (this.props.onColumnResize) {\n      this.props.onColumnResize(resizingColumn, newCalculatedWidth, resizingColumnIndex);\n    }\n\n    this._rememberCalculatedWidth(resizingColumn, newCalculatedWidth);\n\n    this._adjustColumns(this.props, true, resizingColumnIndex);\n    this._forceListUpdates();\n  }\n\n  private _rememberCalculatedWidth(column: IColumn, newCalculatedWidth: number): void {\n    const overrides = this._getColumnOverride(column.key);\n    overrides.calculatedWidth = newCalculatedWidth;\n    overrides.currentWidth = newCalculatedWidth;\n  }\n\n  private _getColumnOverride(key: string): IColumn {\n    return this._columnOverrides[key] = this._columnOverrides[key] || {} as IColumn;\n  }\n\n  /**\n   * Callback function when double clicked on the details header column resizer\n   * which will measure the column cells of all the active rows and resize the\n   * column to the max cell width.\n   *\n   * @private\n* @param { IColumn } column (double clicked column definition)\n* @param { number } columnIndex (double clicked column index)\n       * @todo min width 100 should be changed to const value and should be consistent with the value used on _onSizerMove method in DetailsHeader\n       */\n  private _onColumnAutoResized(column: IColumn, columnIndex: number): void {\n    let max = 0;\n    let count = 0;\n    const totalCount = Object.keys(this._activeRows).length;\n\n    for (const key in this._activeRows) {\n      if (this._activeRows.hasOwnProperty(key)) {\n        const currentRow = this._activeRows[key];\n        currentRow.measureCell(columnIndex, (width: number) => {\n          max = Math.max(max, width);\n          count++;\n          if (count === totalCount) {\n            this._onColumnResized(column, max, columnIndex);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Call back function when an element in FocusZone becomes active. It will transalate it into item\n   * and call onActiveItemChanged callback if specified.\n   *\n   * @private\n* @param { el } row element that became active in Focus Zone\n* @param { ev } focus event from Focus Zone\n                                             */\n  private _onActiveRowChanged(el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>): void {\n    const { items, onActiveItemChanged } = this.props;\n\n    if (!el) {\n      return;\n    }\n    const index = Number(el.getAttribute('data-item-index'));\n    if (index >= 0) {\n      if (onActiveItemChanged) {\n        onActiveItemChanged(items[index], index, ev);\n      }\n      this.setState({\n        focusedItemIndex: index\n      });\n    }\n  }\n\n  private _onBlur(event: React.FocusEvent<HTMLElement>): void {\n    this.setState({\n      focusedItemIndex: -1\n    });\n  }\n\n  private _getItemKey(item: any, itemIndex: number): string | number {\n    const { getKey } = this.props;\n\n    let itemKey: string | number | undefined = undefined;\n    if (item) {\n      itemKey = item.key;\n    }\n\n    if (getKey) {\n      itemKey = getKey(item, itemIndex);\n    }\n\n    if (!itemKey) {\n      itemKey = itemIndex;\n    }\n\n    return itemKey;\n  }\n\n  private _getDetailsFooterProps(): IDetailsFooterProps | undefined {\n    const { adjustedColumns: columns } = this.state;\n    const detailsFooterProps: IDetailsFooterProps = {\n      columns: columns as IColumn[],\n      groupNestingDepth: this._getGroupNestingDepth(),\n      selection: this._selection\n    };\n    return {\n      ...detailsFooterProps\n    };\n  }\n\n  private _getColumnReorderProps(): IColumnReorderHeaderProps | undefined {\n    const { columnReorderOptions } = this.props;\n    if (columnReorderOptions) {\n      return {\n        ...columnReorderOptions,\n        onColumnDragEnd: this._onColumnDragEnd\n      };\n    }\n  }\n\n  private _getGroupProps(detailsGroupProps: IDetailsGroupRenderProps): IGroupRenderProps {\n    const {\n      onRenderFooter: onRenderDetailsGroupFooter,\n      onRenderHeader: onRenderDetailsGroupHeader\n    } = detailsGroupProps;\n    const { adjustedColumns: columns } = this.state;\n    const groupNestingDepth = this._getGroupNestingDepth();\n    const onRenderFooter = onRenderDetailsGroupFooter\n      ? (props: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n        return onRenderDetailsGroupFooter(\n          {\n            ...props,\n            columns: columns,\n            groupNestingDepth: groupNestingDepth,\n            selection: this._selection\n          },\n          defaultRender\n        );\n      }\n      : undefined;\n\n    const onRenderHeader = onRenderDetailsGroupHeader\n      ? (props: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n        return onRenderDetailsGroupHeader(\n          {\n            ...props,\n            columns: columns,\n            groupNestingDepth: groupNestingDepth,\n            selection: this._selection\n          },\n          defaultRender\n        );\n      }\n      : undefined;\n\n    const groupProps = detailsGroupProps as IGroupRenderProps;\n    return {\n      ...groupProps,\n      onRenderFooter,\n      onRenderHeader\n    };\n  }\n}\n\nexport function buildColumns(\n  items: any[],\n  canResizeColumns?: boolean,\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => any,\n  sortedColumnKey?: string,\n  isSortedDescending?: boolean,\n  groupedColumnKey?: string,\n  isMultiline?: boolean) {\n  const columns: IColumn[] = [];\n\n  if (items && items.length) {\n    const firstItem = items[0];\n\n    for (const propName in firstItem) {\n      if (firstItem.hasOwnProperty(propName)) {\n        columns.push({\n          key: propName,\n          name: propName,\n          fieldName: propName,\n          minWidth: MIN_COLUMN_WIDTH,\n          maxWidth: 300,\n          isCollapsable: !!columns.length,\n          isMultiline: (isMultiline === undefined) ? false : isMultiline,\n          isSorted: sortedColumnKey === propName,\n          isSortedDescending: !!isSortedDescending,\n          isRowHeader: false,\n          columnActionsMode: ColumnActionsMode.clickable,\n          isResizable: canResizeColumns,\n          onColumnClick: onColumnClick,\n          isGrouped: groupedColumnKey === propName\n        });\n      }\n    }\n  }\n\n  return columns;\n}\n\nfunction isRightArrow(event: React.KeyboardEvent<HTMLElement>): boolean {\n  return event.which === getRTLSafeKeyCode(KeyCodes.right);\n}\n\nfunction getPaddedWidth(column: IColumn, isFirst: boolean): number {\n  return column.calculatedWidth! + (isFirst ? 0 : DEFAULT_INNER_PADDING) + (column.isPadded ? ISPADDED_WIDTH : 0);\n}\n"]}