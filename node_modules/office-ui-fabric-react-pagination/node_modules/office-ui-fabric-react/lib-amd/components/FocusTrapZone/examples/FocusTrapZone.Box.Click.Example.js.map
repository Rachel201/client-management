{"version":3,"file":"FocusTrapZone.Box.Click.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.Click.Example.tsx"],"names":[],"mappings":";;;IAaA;QAA+C,6CAAqF;QAGlI,2BAAY,KAA2C;YAAvD,YACE,kBAAM,KAAK,CAAC,SAKb;YA8DO,2BAAqB,GAAG;gBAC9B,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,IAAI;iBAChB,CAAC,CAAC;YACL,CAAC,CAAA;YAEO,+BAAyB,GAAG;gBAClC,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC,CAAC;YACL,CAAC,CAAA;YAEO,mCAA6B,GAAG,UAAC,SAAkB;gBACzD,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,SAAS;iBACrB,EAAE,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAApB,CAAoB,CAAC,CAAC;YACjC,CAAC,CAAA;YAEO,aAAO,GAAG,UAAC,MAAe;gBAChC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACxB,CAAC,CAAA;YArFC,KAAI,CAAC,KAAK,GAAG;gBACX,SAAS,EAAE,KAAK;aACjB,CAAC;;QACJ,CAAC;QAEM,kCAAM,GAAb;YAAA,iBA4BC;YA3BS,IAAA,gCAAS,CAAgB;YAEjC,OAAO,CACL;gBACE,oBAAC,sBAAa,IACZ,aAAa,EAAC,kCAAkC,EAChD,OAAO,EAAG,IAAI,CAAC,qBAAqB,EACpC,IAAI,EAAC,iBAAiB,GACtB;gBAEA,CAAC;oBACD,IAAI,SAAS,EAAE;wBACb,OAAO,CACL,oBAAC,6BAAa,IAAC,2BAA2B,EAAG,IAAI,EAAG,oBAAoB,EAAG,KAAK,IAC5E,KAAI,CAAC,iBAAiB,EAAE,CACZ,CACjB,CAAC;qBACH;yBAAM;wBACL,OAAO,CACL,iCACI,KAAI,CAAC,iBAAiB,EAAE,CACtB,CACP,CAAC;qBACH;gBACH,CAAC,CAAC,EAAE,CACA,CACP,CAAC;QACJ,CAAC;QAEO,6CAAiB,GAAzB;YAAA,iBA4BC;YA3BS,IAAA,gCAAS,CAAgB;YAEjC,OAAO,CACL,6BAAK,SAAS,EAAC,4BAA4B;gBACzC,oBAAC,qBAAS,IAAC,KAAK,EAAC,mBAAmB,EAAC,WAAW,EAAC,8BAA8B,EAAC,SAAS,EAAC,EAAE,GAAG;gBAC/F,oBAAC,WAAI,IAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,qCAAuC;gBAAA,+BAAM;gBAAA,+BAAM;gBAC7E,oBAAC,eAAM,IACL,YAAY,EAAG,IAAI,CAAC,OAAO,EAC3B,OAAO,EAAG,SAAS,EACnB,SAAS,EAAG,IAAI,CAAC,6BAA6B,EAC9C,KAAK,EAAC,iBAAiB,EACvB,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,KAAK,GACb;gBACA,CAAC;oBACD,IAAI,SAAS,EAAE;wBACb,OAAO,CACL,oBAAC,sBAAa,IACZ,aAAa,EAAC,sBAAsB,EACpC,OAAO,EAAG,KAAI,CAAC,yBAAyB,EACxC,IAAI,EAAC,sBAAsB,GAC3B,CACH,CAAC;qBACH;gBACH,CAAC,CAAC,EAAE,CACA,CACP,CAAC;QACJ,CAAC;QAuBH,wBAAC;IAAD,CAAC,AA5FD,CAA+C,KAAK,CAAC,SAAS,GA4F7D","sourcesContent":["import * as React from 'react';\n\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\nimport './FocusTrapZone.Box.Example.scss';\n\nexport interface IBoxNoClickExampleExampleState {\n  isToggled: boolean;\n}\n\nexport default class BoxNoClickExample extends React.Component<React.HTMLAttributes<HTMLDivElement>, IBoxNoClickExampleExampleState> {\n  private _toggle: IToggle;\n\n  constructor(props: React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n\n    this.state = {\n      isToggled: false,\n    };\n  }\n\n  public render() {\n    const { isToggled } = this.state;\n\n    return (\n      <div>\n        <DefaultButton\n          secondaryText='Focuses inside the FocusTrapZone'\n          onClick={ this._onButtonClickHandler }\n          text='Go to Trap Zone'\n        />\n\n        { (() => {\n          if (isToggled) {\n            return (\n              <FocusTrapZone isClickableOutsideFocusTrap={ true } forceFocusInsideTrap={ false }>\n                { this._internalContents() }\n              </FocusTrapZone>\n            );\n          } else {\n            return (\n              <div>\n                { this._internalContents() }\n              </div>\n            );\n          }\n        })() }\n      </div>\n    );\n  }\n\n  private _internalContents() {\n    const { isToggled } = this.state;\n\n    return (\n      <div className='ms-FocusTrapZoneBoxExample'>\n        <TextField label='Default TextField' placeholder='Input inside Focus Trap Zone' className='' />\n        <Link href='' className='' >Hyperlink inside FocusTrapZone</Link><br /><br />\n        <Toggle\n          componentRef={ this._setRef }\n          checked={ isToggled }\n          onChanged={ this._onFocusTrapZoneToggleChanged }\n          label='Focus Trap Zone'\n          onText='On'\n          offText='Off'\n        />\n        { (() => {\n          if (isToggled) {\n            return (\n              <DefaultButton\n                secondaryText='Exit Focus Trap Zone'\n                onClick={ this._onExitButtonClickHandler }\n                text='Exit Focus Trap Zone'\n              />\n            );\n          }\n        })() }\n      </div>\n    );\n  }\n\n  private _onButtonClickHandler = (): void => {\n    this.setState({\n      isToggled: true\n    });\n  }\n\n  private _onExitButtonClickHandler = (): void => {\n    this.setState({\n      isToggled: false\n    });\n  }\n\n  private _onFocusTrapZoneToggleChanged = (isToggled: boolean): void => {\n    this.setState({\n      isToggled: isToggled\n    }, () => this._toggle.focus());\n  }\n\n  private _setRef = (toggle: IToggle): void => {\n    this._toggle = toggle;\n  }\n}"]}