{"version":3,"file":"ChoiceGroup.Custom.Example.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/examples/ChoiceGroup.Custom.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEjC;QAA8C,oDAAe;QAA7D;YAAA,qEAyDC;YAHS,eAAS,GAAG,UAAC,EAAqC,EAAE,MAAW;gBACrE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,CAAC,CAAA;;QACH,CAAC;QAvDQ,yCAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,yBAAW,IACV,kBAAkB,EAAC,GAAG,EACtB,OAAO,EAAG;wBACR;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,oCAAoC;4BAC1C,aAAa,EAAE,UAAC,KAAK,EAAE,MAAM;gCAC3B,OAAO,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,MAAM,CAAC,IAAI,CAAC;oCAC7B,MAAO,CAAC,KAAK,CAAC;oCAChB,oBAAC,mBAAQ,IACP,SAAS,EAAG,eAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAChC,kBAAkB,EAAC,GAAG,EACtB,OAAO,EACL;4CACE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE;4CAC/B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;4CAChC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;yCACjC,EAEH,QAAQ,EAAG,KAAK,GAChB,CACE,CACP,CAAC;4BACJ,CAAC;yBACF;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;yBACjB;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,QAAQ,EAAE,IAAI;yBACf;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,QAAQ,EAAE,KAAK;yBAChB;qBACF,EACD,QAAQ,EAAG,IAAI,CAAC,SAAS,EACzB,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf,CACE,CACP,CAAC;QACJ,CAAC;QAKH,+BAAC;IAAD,CAAC,AAzDD,CAA8C,KAAK,CAAC,SAAS,GAyD5D;IAzDY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\n\nimport * as stylesImport from './ChoiceGroup.Custom.Example.scss';\nconst styles: any = stylesImport;\n\nexport class ChoiceGroupCustomExample extends React.Component {\n\n  public render() {\n    return (\n      <div>\n        <ChoiceGroup\n          defaultSelectedKey='B'\n          options={ [\n            {\n              key: 'A',\n              text: 'Mark displayed items as read after',\n              onRenderField: (props, render) => {\n                return (\n                  <div className={ css(styles.root) }>\n                    { render!(props) }\n                    <Dropdown\n                      className={ css(styles.dropdown) }\n                      defaultSelectedKey='A'\n                      options={\n                        [\n                          { key: 'A', text: '5 seconds' },\n                          { key: 'B', text: '10 seconds' },\n                          { key: 'C', text: '20 seconds' }\n                        ]\n                      }\n                      disabled={ false }\n                    />\n                  </div>\n                );\n              }\n            },\n            {\n              key: 'B',\n              text: 'Option B',\n            },\n            {\n              key: 'C',\n              text: 'Option C',\n              disabled: true\n            },\n            {\n              key: 'D',\n              text: 'Option D',\n              disabled: false\n            }\n          ] }\n          onChange={ this._onChange }\n          label='Pick one'\n          required={ true }\n        />\n      </div>\n    );\n  }\n\n  private _onChange = (ev: React.FormEvent<HTMLInputElement>, option: any): void => {\n    console.dir(option);\n  }\n}\n"]}