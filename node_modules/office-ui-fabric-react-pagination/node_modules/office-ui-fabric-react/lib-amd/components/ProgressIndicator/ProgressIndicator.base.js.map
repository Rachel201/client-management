{"version":3,"file":"ProgressIndicator.base.js","sourceRoot":"../src/","sources":["components/ProgressIndicator/ProgressIndicator.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  classNamesFunction,\n  customizable,\n} from '../../Utilities';\nimport {\n  IProgressIndicatorProps,\n  IProgressIndicatorStyleProps,\n  IProgressIndicatorStyles,\n} from './ProgressIndicator.types';\n\nconst getClassNames = classNamesFunction<IProgressIndicatorStyleProps, IProgressIndicatorStyles>();\n\n// if the percentComplete is near 0, don't animate it.\n// This prevents animations on reset to 0 scenarios\nconst ZERO_THRESHOLD = 0.01;\n\n/**\n* ProgressIndicator with no default styles.\n* [Use the `getStyles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\n*/\n@customizable('ProgressIndicator', ['theme'])\nexport class ProgressIndicatorBase extends BaseComponent<IProgressIndicatorProps, {}> {\n  public static defaultProps = {\n    label: '',\n    description: '',\n    width: 180\n  };\n\n  constructor(props: IProgressIndicatorProps) {\n    super(props);\n\n    this._warnDeprecations({\n      title: 'label'\n    });\n  }\n\n  public render() {\n    const {\n      barHeight,\n      className,\n      label = this.props.title, // Fall back to deprecated value.\n      description,\n      getStyles,\n      theme,\n      progressHidden,\n      onRenderProgress = this._onRenderProgress\n    } = this.props;\n\n    const percentComplete = typeof this.props.percentComplete === 'number' ?\n      Math.min(100, Math.max(0, this.props.percentComplete * 100)) :\n      undefined;\n\n    const classNames = getClassNames(getStyles, {\n      theme: theme!,\n      className,\n      barHeight,\n      indeterminate: percentComplete === undefined ? true : false,\n    });\n\n    return (\n      <div className={ classNames.root }>\n        {\n          label ? (\n            <div className={ classNames.itemName }>{ label }</div>\n          ) : null\n        }\n        {\n          !progressHidden ? onRenderProgress({\n            ...(this.props as IProgressIndicatorProps),\n            percentComplete: percentComplete\n          }, this._onRenderProgress) : null\n        }\n        {\n          description ? (\n            <div className={ classNames.itemDescription }>{ description }</div>\n          ) : null\n        }\n      </div>\n    );\n  }\n\n  private _onRenderProgress = (props: IProgressIndicatorProps): JSX.Element => {\n    const {\n      ariaValueText,\n      barHeight,\n      className,\n      getStyles,\n      theme,\n    } = this.props;\n\n    const percentComplete = typeof this.props.percentComplete === 'number' ?\n      Math.min(100, Math.max(0, this.props.percentComplete * 100)) :\n      undefined;\n\n    const classNames = getClassNames(getStyles, {\n      theme: theme!,\n      className,\n      barHeight,\n      indeterminate: percentComplete === undefined ? true : false,\n    });\n\n    const progressBarStyles = {\n      width: percentComplete !== undefined ? percentComplete + '%' : undefined,\n      transition: (percentComplete !== undefined && percentComplete < ZERO_THRESHOLD) ? 'none' : undefined,\n    };\n\n    const ariaValueMin = percentComplete !== undefined ? 0 : undefined;\n    const ariaValueMax = percentComplete !== undefined ? 100 : undefined;\n    const ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete!) : undefined;\n\n    return (\n      <div className={ classNames.itemProgress }>\n        <div className={ classNames.progressTrack } />\n        <div\n          className={ classNames.progressBar }\n          style={ progressBarStyles }\n          role='progressbar'\n          aria-valuemin={ ariaValueMin }\n          aria-valuemax={ ariaValueMax }\n          aria-valuenow={ ariaValueNow }\n          aria-valuetext={ ariaValueText }\n        />\n      </div>\n    );\n  }\n}\n"]}