{"version":3,"file":"FloatingPeoplePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/examples/FloatingPeoplePicker.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport {\n  BaseComponent,\n  assign\n} from 'office-ui-fabric-react/lib/Utilities';\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\nimport { SuggestionsStore } from '../../Suggestions/SuggestionsStore';\nimport { IBaseFloatingPicker, IBaseFloatingPickerSuggestionProps, FloatingPeoplePicker } from 'office-ui-fabric-react/lib/FloatingPicker';\nimport { IPersonaWithMenu } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.types';\nimport { people, mru } from 'office-ui-fabric-react/lib/ExtendedPicker';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport './FloatingPeoplePicker.Basic.Example.scss';\n\nexport interface IPeoplePickerExampleState {\n  currentPicker?: number | string;\n  peopleList: IPersonaProps[];\n  mostRecentlyUsed: IPersonaProps[];\n  currentSelectedItems?: IPersonaProps[];\n  searchValue: string;\n}\n\nexport class FloatingPeoplePickerTypesExample extends BaseComponent<{}, IPeoplePickerExampleState> {\n  private _picker: IBaseFloatingPicker;\n  private _inputElement: HTMLInputElement;\n\n  constructor(props: {}) {\n    super(props);\n    const peopleList: IPersonaWithMenu[] = [];\n    people.forEach((persona: IPersonaProps) => {\n      const target: IPersonaWithMenu = {};\n\n      assign(target, persona);\n      peopleList.push(target);\n    });\n\n    this.state = {\n      peopleList: peopleList,\n      mostRecentlyUsed: mru,\n      currentSelectedItems: [],\n      searchValue: ''\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <div className='ms-SearchBoxSmallExample' ref={ this._setInputElementRef }>\n          <SearchBox\n            placeholder={ 'Search a person' }\n            onChange={ this._onSearchChange }\n            value={ this.state.searchValue }\n            onFocus={ this._onFocus }\n          />\n        </div>\n        { this._renderFloatingPicker() }\n      </div>\n    );\n  }\n\n  private _onFocus = (): void => {\n    if (this._picker) {\n      this._picker.showPicker();\n    }\n  }\n\n  private _setInputElementRef = (ref: HTMLDivElement) => {\n    if (ref && ref.getElementsByClassName('ms-SearchBox-field').length > 0) {\n      this._inputElement = ref.getElementsByClassName('ms-SearchBox-field')[0] as HTMLInputElement;\n    }\n  }\n\n  private _renderFloatingPicker(): JSX.Element {\n    const suggestionProps: IBaseFloatingPickerSuggestionProps = {\n      footerItemsProps: [{\n        renderItem: () => { return (<div>Showing { this._picker.suggestions.length } results</div>); },\n        shouldShow: () => {\n          return this._picker.suggestions.length > 0;\n        }\n      }],\n    };\n\n    return (\n      <FloatingPeoplePicker\n        suggestionsStore={ new SuggestionsStore<IPersonaProps>() }\n        onResolveSuggestions={ this._onFilterChanged }\n        getTextFromItem={ this._getTextFromItem }\n        pickerSuggestionsProps={ suggestionProps }\n        key={ 'normal' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        componentRef={ this._setComponentRef }\n        onChange={ this._onPickerChange }\n        inputElement={ this._inputElement }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _setComponentRef = (component: IBaseFloatingPicker): void => {\n    this._picker = component;\n  }\n\n  private _onSearchChange = (newValue: string): void => {\n    if (newValue !== this.state.searchValue) {\n      this.setState({ searchValue: newValue });\n      this._picker.onQueryStringChanged(newValue);\n    }\n  }\n\n  private _onPickerChange = (selectedSuggestion: IPersonaProps): void => {\n    this.setState({ searchValue: selectedSuggestion.text ? selectedSuggestion.text : '' });\n    this._picker.hidePicker();\n  }\n\n  private _onRemoveSuggestion = (item: IPersonaProps): void => {\n    const { peopleList, mostRecentlyUsed: mruState } = this.state;\n    const indexPeopleList: number = peopleList.indexOf(item);\n    const indexMostRecentlyUsed: number = mruState.indexOf(item);\n\n    if (indexPeopleList >= 0) {\n      const newPeople: IPersonaProps[] = peopleList.slice(0, indexPeopleList).concat(peopleList.slice(indexPeopleList + 1));\n      this.setState({ peopleList: newPeople });\n    }\n\n    if (indexMostRecentlyUsed >= 0) {\n      const newSuggestedPeople: IPersonaProps[]\n        = mruState.slice(0, indexMostRecentlyUsed).concat(mruState.slice(indexMostRecentlyUsed + 1));\n      this.setState({ mostRecentlyUsed: newSuggestedPeople });\n    }\n  }\n\n  private _onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] => {\n    if (filterText) {\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\n\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\n      return filteredPersonas;\n    } else {\n      return [];\n    }\n  }\n\n  private _getTextFromItem(persona: IPersonaProps): string {\n    return persona.text as string;\n  }\n\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]): boolean {\n    if (!personas || !personas.length || personas.length === 0) {\n      return false;\n    }\n    return personas.filter((item: IPersonaProps) => item.text === persona.text).length > 0;\n  }\n\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\n    return this.state.peopleList.filter((item: IPersonaProps) => this._doesTextStartWith(item.text as string, filterText));\n  }\n\n  private _doesTextStartWith(text: string, filterText: string): boolean {\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n  }\n\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]): IPersonaProps[] {\n    return personas.filter((persona: IPersonaProps) => !this._listContainsPersona(persona, possibleDupes));\n  }\n\n  private _validateInput = (input: string): boolean => {\n    if (input.indexOf('@') !== -1) {\n      return true;\n    } else if (input.length > 1) {\n      return false;\n    } else {\n      return false;\n    }\n  }\n}"]}