{"version":3,"file":"SuggestionsCore.js","sourceRoot":"../src/","sources":["components/FloatingPicker/Suggestions/SuggestionsCore.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  css,\n  autobind\n} from '../../../Utilities';\nimport { ISuggestionItemProps, SuggestionsItem, ISuggestionModel } from '../../../Pickers';\nimport { ISuggestionsCoreProps } from './Suggestions.types';\nimport * as stylesImport from './SuggestionsCore.scss';\n// tslint:disable-next-line:no-any\nconst styles: any = stylesImport;\n\n/**\n * Class when used with SuggestionsStore, renders a basic suggestions control\n */\nexport class SuggestionsCore<T> extends BaseComponent<ISuggestionsCoreProps<T>, {}> {\n  public currentIndex: number;\n  public currentSuggestion: ISuggestionModel<T> | undefined;\n  protected _selectedElement: HTMLDivElement;\n  private SuggestionsItemOfProperType: new (props: ISuggestionItemProps<T>) => SuggestionsItem<T> =\n    SuggestionsItem as new (props: ISuggestionItemProps<T>) => SuggestionsItem<T>;\n\n  constructor(suggestionsProps: ISuggestionsCoreProps<T>) {\n    super(suggestionsProps);\n    this.currentIndex = -1;\n  }\n\n  /**\n   * Increments the selected suggestion index\n   */\n  public nextSuggestion(): boolean {\n    const { suggestions } = this.props;\n\n    if (suggestions && suggestions.length > 0) {\n      if (this.currentIndex === -1) {\n        this.setSelectedSuggestion(0);\n        return true;\n      } else if (this.currentIndex < (suggestions.length - 1)) {\n        this.setSelectedSuggestion(this.currentIndex + 1);\n        return true;\n      } else if (this.props.shouldLoopSelection && this.currentIndex === (suggestions.length - 1)) {\n        this.setSelectedSuggestion(0);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Decrements the selected suggestion index\n   */\n  public previousSuggestion(): boolean {\n    const { suggestions } = this.props;\n\n    if (suggestions && suggestions.length > 0) {\n      if (this.currentIndex === -1) {\n        this.setSelectedSuggestion(suggestions.length - 1);\n        return true;\n      } else if (this.currentIndex > 0) {\n        this.setSelectedSuggestion(this.currentIndex - 1);\n        return true;\n      } else if (this.props.shouldLoopSelection && this.currentIndex === 0) {\n        this.setSelectedSuggestion(suggestions.length - 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getCurrentItem(): ISuggestionModel<T> {\n    return this.props.suggestions[this.currentIndex];\n  }\n\n  public getSuggestionAtIndex(index: number): ISuggestionModel<T> {\n    return this.props.suggestions[index];\n  }\n\n  public hasSuggestionSelected(): boolean {\n    return this.currentIndex !== -1 && this.currentIndex < this.props.suggestions.length;\n  }\n\n  public removeSuggestion(index: number): void {\n    this.props.suggestions.splice(index, 1);\n  }\n\n  public deselectAllSuggestions(): void {\n    if (this.currentIndex > -1 && this.props.suggestions[this.currentIndex]) {\n      this.props.suggestions[this.currentIndex].selected = false;\n      this.currentIndex = -1;\n      this.forceUpdate();\n    }\n  }\n\n  public setSelectedSuggestion(index: number): void {\n    const { suggestions } = this.props;\n\n    if (index > suggestions.length - 1 || index < 0) {\n      this.currentIndex = 0;\n      this.currentSuggestion!.selected = false;\n      this.currentSuggestion = suggestions[0];\n      this.currentSuggestion.selected = true;\n    } else {\n      if (this.currentIndex > -1) {\n        suggestions[this.currentIndex].selected = false;\n      }\n      suggestions[index].selected = true;\n      this.currentIndex = index;\n      this.currentSuggestion = suggestions[index];\n    }\n\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate(): void {\n    this.scrollSelected();\n  }\n\n  public render(): JSX.Element {\n    const {\n      onRenderSuggestion,\n      suggestionsItemClassName,\n      resultsMaximumNumber,\n      showRemoveButtons,\n      suggestionsContainerAriaLabel } = this.props;\n    const TypedSuggestionsItem = this.SuggestionsItemOfProperType;\n    let { suggestions } = this.props;\n\n    if (resultsMaximumNumber) {\n      suggestions = suggestions.slice(0, resultsMaximumNumber);\n    }\n\n    return (\n      <div\n        className={ css('ms-Suggestions-container', styles.suggestionsContainer) }\n        id='suggestion-list'\n        role='list'\n        aria-label={ suggestionsContainerAriaLabel }\n      >\n        { suggestions.map((suggestion: ISuggestionModel<T>, index: number) =>\n          <div\n            ref={ this._resolveRef(suggestion.selected || index === this.currentIndex ? '_selectedElement' : '') }\n            // tslint:disable\n            key={ (suggestion.item as any)['key'] ? (suggestion.item as any)['key'] : index }\n            // tslint:enable\n            id={ 'sug-' + index }\n            role='listitem'\n            aria-label={ suggestion.ariaLabel }\n          >\n            <TypedSuggestionsItem\n              id={ 'sug-item' + index }\n              suggestionModel={ suggestion }\n              // tslint:disable-next-line:no-any\n              RenderSuggestion={ onRenderSuggestion as any }\n              onClick={ this._onClickTypedSuggestionsItem(suggestion.item, index) }\n              className={ suggestionsItemClassName }\n              showRemoveButton={ showRemoveButtons }\n              onRemoveItem={ this._onRemoveTypedSuggestionsItem(suggestion.item, index) }\n              isSelectedOverride={ index === this.currentIndex }\n            />\n          </div>) }\n      </div>);\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement && this._selectedElement.scrollIntoView !== undefined) {\n      this._selectedElement.scrollIntoView(false);\n    }\n  }\n\n  @autobind\n  private _onClickTypedSuggestionsItem(item: T, index: number): (ev: React.MouseEvent<HTMLElement>) => void {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      this.props.onSuggestionClick(ev, item, index);\n    };\n  }\n\n  @autobind\n  private _onRemoveTypedSuggestionsItem(item: T, index: number): (ev: React.MouseEvent<HTMLElement>) => void {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\n      onSuggestionRemove(ev, item, index);\n      ev.stopPropagation();\n    };\n  }\n}"]}