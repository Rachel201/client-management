{"version":3,"file":"PeoplePicker.Types.Example.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/examples/PeoplePicker.Types.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport {\n  BaseComponent,\n  assign\n} from 'office-ui-fabric-react/lib/Utilities';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { IPersonaProps, Persona } from 'office-ui-fabric-react/lib/Persona';\nimport {\n  CompactPeoplePicker,\n  IBasePickerSuggestionsProps,\n  IBasePicker,\n  ListPeoplePicker,\n  NormalPeoplePicker,\n  ValidationState\n} from 'office-ui-fabric-react/lib/Pickers';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { IPersonaWithMenu } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.types';\nimport { people, mru } from './PeoplePickerExampleData';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Promise } from 'es6-promise';\nimport './PeoplePicker.Types.Example.scss';\n\nexport interface IPeoplePickerExampleState {\n  currentPicker?: number | string;\n  delayResults?: boolean;\n  peopleList: IPersonaProps[];\n  mostRecentlyUsed: IPersonaProps[];\n  currentSelectedItems?: IPersonaProps[];\n}\n\nconst suggestionProps: IBasePickerSuggestionsProps = {\n  suggestionsHeaderText: 'Suggested People',\n  mostRecentlyUsedHeaderText: 'Suggested Contacts',\n  noResultsFoundText: 'No results found',\n  loadingText: 'Loading',\n  showRemoveButtons: true,\n  suggestionsAvailableAlertText: 'People Picker Suggestions available',\n  suggestionsContainerAriaLabel: 'Suggested contacts'\n};\n\nconst limitedSearchAdditionalProps: IBasePickerSuggestionsProps = {\n  searchForMoreText: 'Load all Results',\n  resultsMaximumNumber: 10,\n  searchingText: 'Searching...'\n};\n\nconst limitedSearchSuggestionProps: IBasePickerSuggestionsProps = assign(limitedSearchAdditionalProps, suggestionProps);\n\nexport class PeoplePickerTypesExample extends BaseComponent<any, IPeoplePickerExampleState> {\n  private _picker: IBasePicker<IPersonaProps>;\n\n  constructor(props: {}) {\n    super(props);\n    const peopleList: IPersonaWithMenu[] = [];\n    people.forEach((persona: IPersonaProps) => {\n      const target: IPersonaWithMenu = {};\n\n      assign(target, persona);\n      peopleList.push(target);\n    });\n\n    this.state = {\n      currentPicker: 1,\n      delayResults: false,\n      peopleList: peopleList,\n      mostRecentlyUsed: mru,\n      currentSelectedItems: []\n    };\n  }\n\n  public render() {\n    let currentPicker: JSX.Element | undefined = undefined;\n\n    switch (this.state.currentPicker) {\n      case 1:\n        currentPicker = this._renderNormalPicker();\n        break;\n      case 2:\n        currentPicker = this._renderCompactPicker();\n        break;\n      case 3:\n        currentPicker = this._renderListPicker();\n        break;\n      case 4:\n        currentPicker = this._renderPreselectedItemsPicker();\n        break;\n      case 5:\n        currentPicker = this._renderLimitedSearch();\n        break;\n      case 6:\n        currentPicker = this._renderProcessSelectionPicker();\n      case 7:\n        currentPicker = this._renderControlledPicker();\n        break;\n      default:\n    }\n\n    return (\n      <div>\n        { currentPicker }\n        <div className={ 'dropdown-div' }>\n          <Dropdown\n            label='Select People Picker Type'\n            options={ [\n              { key: 1, text: 'Normal' },\n              { key: 2, text: 'Compact' },\n              { key: 3, text: 'Members List' },\n              { key: 4, text: 'Preselected Items' },\n              { key: 5, text: 'Limit Search' },\n              { key: 6, text: 'Process Selection' },\n              { key: 7, text: 'Controlled Picker' }\n            ] }\n            selectedKey={ this.state.currentPicker }\n            onChanged={ this._dropDownSelected }\n          />\n          <Toggle\n            label='Delay Suggestion Results'\n            defaultChecked={ false }\n            onChanged={ this._toggleDelayResultsChange }\n          />\n        </div>\n        <PrimaryButton\n          text='Set focus'\n          onClick={ this._onSetFocusButtonClicked }\n        />\n      </div>\n    );\n  }\n\n  private _getTextFromItem(persona: IPersonaProps): string {\n    return persona.text as string;\n  }\n  private _renderListPicker() {\n    return (\n      <ListPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ this._getTextFromItem }\n        className={ 'ms-PeoplePicker' }\n        pickerSuggestionsProps={ suggestionProps }\n        key={ 'list' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ this._resolveRef('_picker') }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _renderNormalPicker() {\n    return (\n      <NormalPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ this._getTextFromItem }\n        pickerSuggestionsProps={ suggestionProps }\n        className={ 'ms-PeoplePicker' }\n        key={ 'normal' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        removeButtonAriaLabel={ 'Remove' }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ this._resolveRef('_picker') }\n        onInputChange={ this._onInputChange }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _renderCompactPicker() {\n    return (\n      <CompactPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ this._getTextFromItem }\n        pickerSuggestionsProps={ suggestionProps }\n        className={ 'ms-PeoplePicker' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ this._resolveRef('_picker') }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _renderPreselectedItemsPicker() {\n    return (\n      <CompactPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ this._getTextFromItem }\n        className={ 'ms-PeoplePicker' }\n        defaultSelectedItems={ people.splice(0, 3) }\n        key={ 'list' }\n        pickerSuggestionsProps={ suggestionProps }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ this._resolveRef('_picker') }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _renderLimitedSearch() {\n    limitedSearchSuggestionProps.resultsFooter = this._renderFooterText;\n\n    return (\n      <CompactPeoplePicker\n        onResolveSuggestions={ this._onFilterChangedWithLimit }\n        onEmptyInputFocus={ this._returnMostRecentlyUsedWithLimit }\n        getTextFromItem={ this._getTextFromItem }\n        className={ 'ms-PeoplePicker' }\n        onGetMoreResults={ this._onFilterChanged }\n        pickerSuggestionsProps={ limitedSearchSuggestionProps }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ this._resolveRef('_picker') }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _renderProcessSelectionPicker() {\n    return (\n      <NormalPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ this._getTextFromItem }\n        pickerSuggestionsProps={ suggestionProps }\n        className={ 'ms-PeoplePicker' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        removeButtonAriaLabel={ 'Remove' }\n        onItemSelected={ this._onItemSelected }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ this._resolveRef('_picker') }\n        resolveDelay={ 300 }\n      />\n    );\n  }\n\n  private _renderControlledPicker() {\n    const controlledItems = [];\n    for (let i = 0; i < 5; i++) {\n      const item = this.state.peopleList[i];\n      if (this.state.currentSelectedItems!.indexOf(item) === -1) {\n        controlledItems.push(this.state.peopleList[i]);\n      }\n    }\n    return (\n      <div>\n        <NormalPeoplePicker\n          onResolveSuggestions={ this._onFilterChanged }\n          getTextFromItem={ this._getTextFromItem }\n          pickerSuggestionsProps={ suggestionProps }\n          className={ 'ms-PeoplePicker' }\n          key={ 'controlled' }\n          selectedItems={ this.state.currentSelectedItems }\n          onChange={ this._onItemsChange }\n          inputProps={ {\n            onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n            onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called')\n          } }\n          componentRef={ this._resolveRef('_picker') }\n          resolveDelay={ 300 }\n        />\n        <label> Click to Add a person </label>\n        { controlledItems.map((item, index) => <div key={ index }>\n          <DefaultButton\n            className='controlledPickerButton'\n            // tslint:disable-next-line:jsx-no-lambda\n            onClick={ () => {\n              this.setState({\n                currentSelectedItems: this.state.currentSelectedItems!.concat([item])\n              });\n            } }\n          >\n            <Persona { ...item } />\n          </DefaultButton>\n        </div>) }\n      </div>\n    );\n  }\n\n  private _onItemsChange = (items: any[]): void => {\n    this.setState({\n      currentSelectedItems: items\n    });\n  }\n\n  private _onSetFocusButtonClicked = (): void => {\n    if (this._picker) {\n      this._picker.focusInput();\n    }\n  }\n\n  private _renderFooterText = (): JSX.Element => {\n    return <div>No additional results</div>;\n  }\n\n  private _onRemoveSuggestion = (item: IPersonaProps): void => {\n    const { peopleList, mostRecentlyUsed: mruState } = this.state;\n    const indexPeopleList: number = peopleList.indexOf(item);\n    const indexMostRecentlyUsed: number = mruState.indexOf(item);\n\n    if (indexPeopleList >= 0) {\n      const newPeople: IPersonaProps[] = peopleList.slice(0, indexPeopleList).concat(peopleList.slice(indexPeopleList + 1));\n      this.setState({ peopleList: newPeople });\n    }\n\n    if (indexMostRecentlyUsed >= 0) {\n      const newSuggestedPeople: IPersonaProps[] = mruState.slice(0, indexMostRecentlyUsed).concat(mruState.slice(indexMostRecentlyUsed + 1));\n      this.setState({ mostRecentlyUsed: newSuggestedPeople });\n    }\n  }\n\n  private _onItemSelected = (item: IPersonaProps): Promise<IPersonaProps> => {\n    const processedItem = Object.assign({}, item);\n    processedItem.text = `${item.text} (selected)`;\n    return new Promise<IPersonaProps>((resolve, reject) => setTimeout(() => resolve(processedItem), 250));\n  }\n\n  private _onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] | Promise<IPersonaProps[]> => {\n    if (filterText) {\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\n\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\n      return this._filterPromise(filteredPersonas);\n    } else {\n      return [];\n    }\n  }\n\n  private _returnMostRecentlyUsed = (currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> => {\n    let { mostRecentlyUsed } = this.state;\n    mostRecentlyUsed = this._removeDuplicates(mostRecentlyUsed, currentPersonas);\n    return this._filterPromise(mostRecentlyUsed);\n  }\n\n  private _returnMostRecentlyUsedWithLimit = (currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> => {\n    let { mostRecentlyUsed } = this.state;\n    mostRecentlyUsed = this._removeDuplicates(mostRecentlyUsed, currentPersonas);\n    mostRecentlyUsed = mostRecentlyUsed.splice(0, 3);\n    return this._filterPromise(mostRecentlyUsed);\n  }\n\n  private _onFilterChangedWithLimit = (filterText: string, currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> => {\n    return this._onFilterChanged(filterText, currentPersonas, 3);\n  }\n\n  private _filterPromise(personasToReturn: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\n    if (this.state.delayResults) {\n      return this._convertResultsToPromise(personasToReturn);\n    } else {\n      return personasToReturn;\n    }\n  }\n\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\n    if (!personas || !personas.length || personas.length === 0) {\n      return false;\n    }\n    return personas.filter(item => item.text === persona.text).length > 0;\n  }\n\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\n    return this.state.peopleList.filter(item => this._doesTextStartWith(item.text as string, filterText));\n  }\n\n  private _doesTextStartWith(text: string, filterText: string): boolean {\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n  }\n\n  private _convertResultsToPromise(results: IPersonaProps[]): Promise<IPersonaProps[]> {\n    return new Promise<IPersonaProps[]>((resolve, reject) => setTimeout(() => resolve(results), 2000));\n  }\n\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]) {\n    return personas.filter(persona => !this._listContainsPersona(persona, possibleDupes));\n  }\n\n  private _toggleDelayResultsChange = (toggleState: boolean): void => {\n    this.setState({ delayResults: toggleState });\n  }\n\n  private _dropDownSelected = (option: IDropdownOption): void => {\n    this.setState({ currentPicker: option.key });\n  }\n\n  private _validateInput = (input: string): ValidationState => {\n    if (input.indexOf('@') !== -1) {\n      return ValidationState.valid;\n    } else if (input.length > 1) {\n      return ValidationState.warning;\n    } else {\n      return ValidationState.invalid;\n    }\n  }\n\n  /**\n   * Takes in the picker input and modifies it in whichever way\n   * the caller wants, i.e. parsing entries copied from Outlook (sample\n   * input: \"Aaron Reid <aaron>\").\n   *\n   * @param input The text entered into the picker.\n   */\n  private _onInputChange(input: string): string {\n    const outlookRegEx = /<.*>/g;\n    const emailAddress = outlookRegEx.exec(input);\n\n    if (emailAddress && emailAddress[0]) {\n      return emailAddress[0].substring(1, emailAddress[0].length - 1);\n    }\n\n    return input;\n  }\n}\n"]}