{"version":3,"file":"OverflowSet.Custom.Example.js","sourceRoot":"../src/","sources":["components/OverflowSet/examples/OverflowSet.Custom.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, css } from 'office-ui-fabric-react/lib/Utilities';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport {\n  IOverflowSetItemProps,\n  OverflowSet\n} from 'office-ui-fabric-react/lib/OverflowSet';\n\nimport * as stylesImport from './OverflowSet.Example.scss';\nconst styles: any = stylesImport;\n\nexport class OverflowSetCustomExample extends BaseComponent<any, any> {\n\n  public render(): JSX.Element {\n    return (\n      <OverflowSet\n        items={ [\n          {\n            key: 'search',\n            onRender: (item: any) => {\n              return (\n                <SearchBox\n                  placeholder='Search'\n                />\n              );\n            }\n          },\n          {\n            key: 'newItem',\n            name: 'New',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: () => { return; },\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail',\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ],\n            },\n          },\n          {\n            key: 'upload',\n            name: 'Upload',\n            icon: 'Upload',\n            onClick: () => { return; },\n          },\n          {\n            key: 'share',\n            name: 'Share',\n            icon: 'Share',\n            onClick: () => { return; }\n          }\n        ] }\n        overflowItems={ [\n          {\n            key: 'newItem',\n            name: 'Add',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: () => { return; },\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail',\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ],\n            },\n          },\n          {\n            key: 'move',\n            name: 'Move to...',\n            icon: 'MoveToFolder',\n            onClick: () => { return; }\n          },\n          {\n            key: 'copy',\n            name: 'Copy to...',\n            icon: 'Copy',\n            onClick: () => { return; }\n          },\n          {\n            key: 'rename',\n            name: 'Rename...',\n            icon: 'Edit',\n            onClick: () => { return; }\n          },\n          {\n            key: 'disabled',\n            name: 'Disabled...',\n            icon: 'Cancel',\n            disabled: true,\n            onClick: () => { return; }\n          }\n        ]\n        }\n        onRenderOverflowButton={ this._onRenderOverflowButton }\n        onRenderItem={ this._onRenderItem }\n      />\n    );\n  }\n\n  private _onRenderItem(item: IOverflowSetItemProps): JSX.Element {\n    if (item.onRender) {\n      return (\n        item.onRender(item)\n      );\n    }\n    return (\n      <DefaultButton\n        iconProps={ { iconName: item.icon } }\n        menuProps={ item.subMenuProps }\n        text={ item.name }\n      />\n    );\n  }\n\n  private _onRenderOverflowButton(overflowItems: any[] | undefined): JSX.Element {\n    return (\n      <DefaultButton\n        className={ css(styles.overflowButton) }\n        menuIconProps={ { iconName: 'More' } }\n        menuProps={ { items: overflowItems! } }\n      />\n    );\n  }\n}\n"]}