{"version":3,"file":"Fabric.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.tsx"],"names":[],"mappings":";;;IAcA,IAAM,aAAa,GAAG,8BAAkB,EAAoC,CAAC;IAG7E;QAA4B,kCAE1B;QAGA,gBAAY,KAAmB;YAA/B,YACE,kBAAM,KAAK,CAAC,SAEb;YALO,kBAAY,GAAG,qBAAS,EAAkB,CAAC;YAiC3C,kBAAY,GAAG,UAAC,EAAc;gBACpC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;YAC3C,CAAC,CAAA;YAEO,gBAAU,GAAG,UAAC,EAAiB;gBACrC,IAAI,gCAAoB,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;oBAClC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzC;YACH,CAAC,CAAA;YArCC,KAAI,CAAC,KAAK,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;;QACzC,CAAC;QAEM,uBAAM,GAAb;YACE,IAAM,UAAU,GAAG,aAAa,CAAC,yBAAS,uBAEnC,IAAI,CAAC,KAA0B,EAC/B,IAAI,CAAC,KAAK,EACb,CAAC;YACL,IAAM,QAAQ,GAAG,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,CAAC;YAE3D,OAAO,CACL,gDACO,QAAQ,IACb,SAAS,EAAG,UAAU,CAAC,IAAI,EAC3B,GAAG,EAAG,IAAI,CAAC,YAAY,IACvB,CACH,CAAC;QACJ,CAAC;QAEM,kCAAiB,GAAxB;YACE,IAAM,GAAG,GAAG,qBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAE/C,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC3D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACxD;QACH,CAAC;QAlCU,MAAM;YADlB,wBAAY,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;WACrB,MAAM,CA6ClB;QAAD,aAAC;KAAA,AA7CD,CAA4B,yBAAa,GA6CxC;IA7CY,wBAAM","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  createRef,\n  customizable,\n  getNativeProps,\n  divProperties,\n  classNamesFunction,\n  getWindow,\n  isDirectionalKeyCode\n} from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\n\n@customizable('Fabric', ['theme'])\nexport class Fabric extends BaseComponent<IFabricProps, {\n  isFocusVisible: boolean;\n}> {\n  private _rootElement = createRef<HTMLDivElement>();\n\n  constructor(props: IFabricProps) {\n    super(props);\n    this.state = { isFocusVisible: false };\n  }\n\n  public render() {\n    const classNames = getClassNames(getStyles,\n      {\n        ...this.props as IFabricStyleProps,\n        ...this.state\n      });\n    const divProps = getNativeProps(this.props, divProperties);\n\n    return (\n      <div\n        { ...divProps }\n        className={ classNames.root }\n        ref={ this._rootElement }\n      />\n    );\n  }\n\n  public componentDidMount(): void {\n    const win = getWindow(this._rootElement.value);\n\n    if (win) {\n      this._events.on(win, 'mousedown', this._onMouseDown, true);\n      this._events.on(win, 'keydown', this._onKeyDown, true);\n    }\n  }\n\n  private _onMouseDown = (ev: MouseEvent): void => {\n    this.setState({ isFocusVisible: false });\n  }\n\n  private _onKeyDown = (ev: KeyboardEvent): void => {\n    if (isDirectionalKeyCode(ev.which)) {\n      this.setState({ isFocusVisible: true });\n    }\n  }\n}\n"]}