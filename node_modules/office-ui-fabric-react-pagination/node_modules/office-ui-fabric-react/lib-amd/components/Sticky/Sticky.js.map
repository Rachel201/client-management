{"version":3,"file":"Sticky.js","sourceRoot":"../src/","sources":["components/Sticky/Sticky.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { BaseComponent, createRef } from '../../Utilities';\nimport { IStickyProps, StickyPositionType } from './Sticky.types';\n\nexport interface IStickyState {\n  isStickyTop: boolean;\n  isStickyBottom: boolean;\n}\n\nexport interface IStickyContext {\n  scrollablePane: PropTypes.Requireable<object>;\n}\n\nexport class Sticky extends BaseComponent<IStickyProps, IStickyState> {\n  public static defaultProps: IStickyProps = {\n    stickyPosition: StickyPositionType.Both\n  };\n\n  public static contextTypes: IStickyContext = {\n    scrollablePane: PropTypes.object\n  };\n\n  public context: {\n    scrollablePane: {\n      subscribe: (handler: Function) => void;\n      unsubscribe: (handler: Function) => void;\n      addSticky: (sticky: Sticky) => void;\n      removeSticky: (sticky: Sticky) => void;\n      updateStickyRefHeights: () => void;\n      sortSticky: (sticky: Sticky) => void;\n      notifySubscribers: (sort?: boolean) => void;\n    }\n  };\n\n  public distanceFromTop: number;\n  private _root = createRef<HTMLDivElement>();\n  private _stickyContentTop = createRef<HTMLDivElement>();\n  private _stickyContentBottom = createRef<HTMLDivElement>();\n  private _nonStickyContent = createRef<HTMLDivElement>();\n\n  constructor(props: IStickyProps) {\n    super(props);\n    this.state = {\n      isStickyTop: false,\n      isStickyBottom: false\n    };\n    this.distanceFromTop = 0;\n  }\n\n  public get root(): HTMLDivElement | null {\n    return this._root.current;\n  }\n\n  public get stickyContentTop(): HTMLDivElement | null {\n    return this._stickyContentTop.current;\n  }\n\n  public get stickyContentBottom(): HTMLDivElement | null {\n    return this._stickyContentBottom.current;\n  }\n\n  public get nonStickyContent(): HTMLDivElement | null {\n    return this._nonStickyContent.current;\n  }\n\n  public get canStickyTop(): boolean {\n    return this.props.stickyPosition === StickyPositionType.Both || this.props.stickyPosition === StickyPositionType.Header;\n  }\n\n  public get canStickyBottom(): boolean {\n    return this.props.stickyPosition === StickyPositionType.Both || this.props.stickyPosition === StickyPositionType.Footer;\n  }\n\n  public componentDidMount(): void {\n    if (!this.context.scrollablePane) {\n      throw new TypeError('Expected Sticky to be mounted within ScrollablePane');\n    }\n    const { scrollablePane } = this.context;\n    scrollablePane.subscribe(this._onScrollEvent);\n    scrollablePane.addSticky(this);\n  }\n\n  public componentWillUnmount(): void {\n    const { scrollablePane } = this.context;\n    scrollablePane.unsubscribe(this._onScrollEvent);\n    scrollablePane.removeSticky(this);\n  }\n\n  public componentDidUpdate(prevProps: IStickyProps, prevState: IStickyState): void {\n    const { scrollablePane } = this.context;\n    if (prevState.isStickyTop !== this.state.isStickyTop || prevState.isStickyBottom !== this.state.isStickyBottom) {\n      scrollablePane.updateStickyRefHeights();\n    }\n  }\n\n  public shouldComponentUpdate(nextProps: IStickyProps, nextState: IStickyState): boolean {\n    const { isStickyTop, isStickyBottom } = this.state;\n    return isStickyTop !== nextState.isStickyTop ||\n      isStickyBottom !== nextState.isStickyBottom ||\n      this.props.stickyPosition !== nextProps.stickyPosition ||\n      this.props.children !== nextProps.children;\n  }\n\n  public render(): JSX.Element {\n    const { isStickyTop, isStickyBottom } = this.state;\n\n    return (\n      <div ref={ this._root }>\n        {\n          this.canStickyTop &&\n          <div\n            className={ this.props.stickyClassName }\n            ref={ this._stickyContentTop }\n            aria-hidden={ !isStickyTop }\n          >\n            <div style={ this._getStickyPlaceholderHeight(isStickyTop) } />\n          </div>\n        }\n        {\n          this.canStickyBottom &&\n          <div\n            className={ this.props.stickyClassName }\n            ref={ this._stickyContentBottom }\n            aria-hidden={ !isStickyBottom }\n          >\n            <div style={ this._getStickyPlaceholderHeight(isStickyBottom) } />\n          </div>\n        }\n        <div style={ this._getNonStickyPlaceholderHeight() } />\n        <div\n          ref={ this._nonStickyContent }\n          className={ isStickyTop || isStickyBottom ? this.props.stickyClassName : undefined }\n          style={ this._getContentStyles(isStickyTop || isStickyBottom) }\n        >\n          { this.props.children }\n        </div>\n      </div>\n    );\n  }\n\n  public addSticky(stickyContent: HTMLDivElement): void {\n    if (this.nonStickyContent) {\n      stickyContent.appendChild(this.nonStickyContent);\n    }\n  }\n\n  public resetSticky(): void {\n    if (this.nonStickyContent && this.root) {\n      this.root.appendChild(this.nonStickyContent);\n    }\n  }\n\n  public setDistanceFromTop(container: HTMLDivElement): void {\n    this.distanceFromTop = this._getNonStickyDistanceFromTop(container);\n  }\n\n  private _getContentStyles(isSticky: boolean): React.CSSProperties {\n    return {\n      backgroundColor: this.props.stickyBackgroundColor || this._getBackground()\n    };\n  }\n\n  private _getStickyPlaceholderHeight(isSticky: boolean): React.CSSProperties {\n    const height = this.nonStickyContent ? this.nonStickyContent.offsetHeight : 0;\n\n    return {\n      visibility: isSticky ? 'hidden' : 'visible',\n      height: isSticky ? 0 : height\n    };\n  }\n\n  private _getNonStickyPlaceholderHeight(): React.CSSProperties {\n    const { isStickyTop, isStickyBottom, } = this.state;\n    if (isStickyTop || isStickyBottom) {\n      const height = this.nonStickyContent ? this.nonStickyContent.offsetHeight : 0;\n      return {\n        height: height\n      };\n    } else {\n      return {\n        position: 'absolute'\n      };\n    }\n  }\n\n  private _onScrollEvent = (container: HTMLElement, footerStickyContainer: HTMLElement): void => {\n    if (this.root && this.nonStickyContent) {\n      this.distanceFromTop = this._getNonStickyDistanceFromTop(container);\n      let isStickyTop = false;\n      let isStickyBottom = false;\n\n      if (this.canStickyTop) {\n        const distanceToStickTop = this.distanceFromTop - this._getStickyDistanceFromTop();\n        isStickyTop = distanceToStickTop < container.scrollTop;\n      }\n\n      // Can sticky bottom if the scrollablePane - total sticky footer height is smaller than the sticky's distance from the top of the pane\n      if (this.canStickyBottom && container.clientHeight - footerStickyContainer.offsetHeight <= this.distanceFromTop) {\n        isStickyBottom = this.distanceFromTop - container.scrollTop > this._getStickyDistanceFromTopForFooter(container, footerStickyContainer);\n      }\n\n      this.setState({\n        isStickyTop: this.canStickyTop && isStickyTop,\n        isStickyBottom: isStickyBottom\n      });\n    }\n  }\n\n  private _getStickyDistanceFromTop = (): number => {\n    let distance = 0;\n    if (this.stickyContentTop) {\n      distance = this.stickyContentTop.offsetTop;\n    }\n\n    return distance;\n  }\n\n  private _getStickyDistanceFromTopForFooter = (container: HTMLElement, footerStickyVisibleContainer: HTMLElement): number => {\n    let distance = 0;\n    if (this.stickyContentBottom) {\n      distance = container.clientHeight - footerStickyVisibleContainer.offsetHeight + this.stickyContentBottom.offsetTop;\n    }\n\n    return distance;\n  }\n\n  private _getNonStickyDistanceFromTop = (container: HTMLElement): number => {\n    let distance = 0;\n    let currElem = this.root;\n\n    if (currElem) {\n      while (currElem.offsetParent !== container) {\n        distance += currElem.offsetTop;\n        currElem = currElem.offsetParent as HTMLDivElement;\n      }\n\n      if (currElem.offsetParent === container) {\n        distance += currElem.offsetTop;\n      }\n    }\n    return distance;\n  }\n\n  // Gets background of nearest parent element that has a declared background-color attribute\n  private _getBackground(): string | undefined {\n    if (!this.root) {\n      return undefined;\n    }\n\n    let curr: HTMLElement = this.root;\n\n    while (window.getComputedStyle(curr).getPropertyValue('background-color') === 'rgba(0, 0, 0, 0)' ||\n      window.getComputedStyle(curr).getPropertyValue('background-color') === 'transparent') {\n      if (curr.tagName === 'HTML') {\n        // Fallback color if no element has a declared background-color attribute\n        return undefined;\n      }\n      if (curr.parentElement) {\n        curr = curr.parentElement;\n      }\n    }\n    return window.getComputedStyle(curr).getPropertyValue('background-color');\n  }\n}\n"]}