{"version":3,"file":"BaseSelectedItemsList.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/BaseSelectedItemsList.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes\n} from '../../Utilities';\nimport { Selection } from '../../Selection';\n\nimport { IBaseSelectedItemsList, IBaseSelectedItemsListProps, ISelectedItemProps } from './BaseSelectedItemsList.types';\n\nexport interface IBaseSelectedItemsListState {\n  // tslint:disable-next-line:no-any\n  items?: any;\n  suggestedDisplayValue?: string;\n  moreSuggestionsAvailable?: boolean;\n  isSearching?: boolean;\n  isMostRecentlyUsedVisible?: boolean;\n  suggestionsVisible?: boolean;\n  suggestionsLoading?: boolean;\n  isResultsFooterVisible?: boolean;\n}\n\nexport class BaseSelectedItemsList<T, P extends IBaseSelectedItemsListProps<T>>\n  extends BaseComponent<P, IBaseSelectedItemsListState> implements IBaseSelectedItemsList<T> {\n\n  protected root: HTMLElement;\n  protected selection: Selection;\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    const items: T[] = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\n    this.state = {\n      items: items,\n    };\n\n    // Create a new selection if one is not specified\n    this.selection = this.props.selection\n      ? this.props.selection as Selection\n      : new Selection({ onSelectionChanged: this.onSelectionChanged });\n  }\n\n  public get items(): T[] {\n    return this.state.items;\n  }\n\n  public addItems = (items: T[]): void => {\n    // tslint:disable-next-line:no-any\n    const processedItems: T[] | PromiseLike<T[]> = this.props.onItemSelected ? (this.props.onItemSelected as any)(items) : items;\n\n    const processedItemObjects: T[] = processedItems as T[];\n    const processedItemPromiseLikes: PromiseLike<T[]> = processedItems as PromiseLike<T[]>;\n\n    if (processedItemPromiseLikes && processedItemPromiseLikes.then) {\n      processedItemPromiseLikes.then((resolvedProcessedItems: T[]) => {\n        const newItems: T[] = this.state.items.concat(resolvedProcessedItems);\n        this.updateItems(newItems);\n      });\n    } else {\n      const newItems: T[] = this.state.items.concat(processedItemObjects);\n      this.updateItems(newItems);\n    }\n    this.setState({ suggestedDisplayValue: '' });\n  }\n\n  public removeItemAt = (index: number): void => {\n    const { items } = this.state;\n    // tslint:disable-next-line:no-any\n    if (index > -1) {\n      if (this.props.onItemDeleted) {\n        (this.props.onItemDeleted as (item: T) => void)(items[index]);\n      }\n\n      const newItems = items.slice(0, index).concat(items.slice(index + 1));\n      this.updateItems(newItems);\n    }\n  }\n\n  public removeItem = (item: ISelectedItemProps<T>): void => {\n    const { items } = this.state;\n    const index: number = items.indexOf(item);\n\n    this.removeItemAt(index);\n  }\n\n  // tslint:disable-next-line:no-any\n  public removeItems = (itemsToRemove: any[]): void => {\n    const { items } = this.state;\n    // tslint:disable-next-line:no-any\n    const newItems: T[] = items.filter((item: any) => itemsToRemove.indexOf(item) === -1);\n    const firstItemToRemove = itemsToRemove[0];\n    const index: number = items.indexOf(firstItemToRemove);\n\n    if (this.props.onItemDeleted) {\n      itemsToRemove.forEach((item: T) => {\n        (this.props.onItemDeleted as (item: T) => void)(item);\n      });\n    }\n\n    this.updateItems(newItems, index);\n  }\n\n  /**\n   * Controls what happens whenever there is an action that impacts the selected items.\n   * If selectedItems is provided as a property then this will act as a controlled component and it will not update it's own state.\n  */\n  public updateItems(items: T[], focusIndex?: number): void {\n    if (this.props.selectedItems) {\n      // If the component is a controlled component then the controlling component will need\n      this.onChange(items);\n    } else {\n      this.setState({ items: items }, () => {\n        this._onSelectedItemsUpdated(items, focusIndex);\n      });\n    }\n  }\n\n  public onCopy = (ev: React.ClipboardEvent<HTMLElement>): void => {\n    if (this.props.onCopyItems && this.selection.getSelectedCount() > 0) {\n      const selectedItems: T[] = this.selection.getSelection() as T[];\n      this.copyItems(selectedItems);\n    }\n  }\n\n  public unselectAll(): void {\n    this.selection.setAllSelected(false);\n  }\n\n  public componentWillUpdate(newProps: P, newState: IBaseSelectedItemsListState): void {\n    if (newState.items && newState.items !== this.state.items) {\n      this.selection.setItems(newState.items);\n    }\n  }\n\n  public componentDidMount(): void {\n    this.selection.setItems(this.state.items);\n  }\n\n  public componentWillReceiveProps(newProps: P): void {\n    const newItems = newProps.selectedItems;\n\n    if (newItems) {\n      this.setState({ items: newProps.selectedItems });\n    }\n\n    if (newProps.selection) {\n      this.selection = newProps.selection;\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  public render(): any {\n    return this.renderItems();\n  }\n\n  protected renderItems = (): JSX.Element[] => {\n    const { removeButtonAriaLabel } = this.props;\n    const onRenderItem = this.props.onRenderItem as (props: ISelectedItemProps<T>) => JSX.Element;\n\n    const { items } = this.state;\n    // tslint:disable-next-line:no-any\n    return items.map((item: any, index: number) => onRenderItem({\n      item,\n      index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item),\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: (itemToCopy: T) => this.copyItems([itemToCopy]),\n    }));\n  }\n\n  protected onSelectionChanged = (): void => {\n    this.forceUpdate();\n  }\n\n  protected onChange(items?: T[]): void {\n    if (this.props.onChange) {\n      (this.props.onChange as (items?: T[]) => void)(items);\n    }\n  }\n\n  protected onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    switch (ev.which) {\n      case KeyCodes.backspace:\n        ev.stopPropagation();\n        this.onBackspace(ev);\n        break;\n\n      case KeyCodes.del:\n        this.onBackspace(ev);\n    }\n  }\n\n  protected onItemChange = (changedItem: T, index: number): void => {\n    const { items } = this.state;\n\n    if (index >= 0) {\n      const newItems: T[] = items;\n      newItems[index] = changedItem;\n\n      this.updateItems(newItems);\n    }\n  }\n\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>): void {\n    if (this.state.items.length) {\n      if (this.selection.getSelectedCount() > 0) {\n        this.removeItems(this.selection.getSelection());\n      } else {\n        this.removeItem(this.state.items[this.state.items.length - 1]);\n      }\n    }\n  }\n\n  protected copyItems(items: T[]): void {\n    if (this.props.onCopyItems) {\n      // tslint:disable-next-line:no-any\n      const copyText = (this.props.onCopyItems as any)(items);\n\n      const copyInput = document.createElement('input') as HTMLInputElement;\n      document.body.appendChild(copyInput);\n\n      try {\n        // Try to copy the text directly to the clipboard\n        copyInput.value = copyText;\n        copyInput.select();\n        if (!document.execCommand('copy')) {\n          // The command failed. Fallback to the method below.\n          throw new Error();\n        }\n      } catch (err) {\n        // no op\n      } finally {\n        document.body.removeChild(copyInput);\n      }\n    }\n  }\n\n  protected _isFocusZoneInnerKeystroke(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    return false;\n  }\n\n  private _onSelectedItemsUpdated(items?: T[], focusIndex?: number): void {\n    this.onChange(items);\n  }\n}"]}