{"version":3,"file":"SelectedPeopleList.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/SelectedPeopleList.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { IBaseSelectedItemsListProps, ISelectedItemProps } from '../BaseSelectedItemsList.types';\nimport { IPersonaProps } from '../../../Persona';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { IRenderFunction } from '../../../Utilities';\nimport { IContextualMenuItem } from '../../../ContextualMenu';\nimport { IBaseFloatingPickerProps } from '../../../FloatingPicker';\nimport { EditingItem } from './Items/EditingItem';\n\nexport interface IExtendedPersonaProps extends IPersonaProps {\n  isValid: boolean;\n  blockRecipientRemoval?: boolean;\n  shouldBlockSelection?: boolean;\n  canExpand?: boolean;\n  isEditing?: boolean;\n}\n\nexport interface ISelectedPeopleItemProps extends ISelectedItemProps<IExtendedPersonaProps> {\n  onExpandItem?: () => void;\n  renderPersonaCoin?: IRenderFunction<IPersonaProps>;\n  renderPrimaryText?: IRenderFunction<IPersonaProps>;\n}\n\nexport interface ISelectedPeopleProps extends IBaseSelectedItemsListProps<IExtendedPersonaProps> {\n  onExpandGroup?: (item: IExtendedPersonaProps) => void;\n  removeMenuItemText?: string;\n  copyMenuItemText?: string;\n  editMenuItemText?: string;\n  getEditingItemText?: (item: IExtendedPersonaProps) => string;\n  onRenderFloatingPicker?: (props: IBaseFloatingPickerProps<IPersonaProps>) => JSX.Element;\n  floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>;\n}\n\nexport class BasePeopleSelectedItemsList extends BaseSelectedItemsList<IExtendedPersonaProps, ISelectedPeopleProps> {\n}\n\n/**\n * Standard People Picker.\n */\nexport class SelectedPeopleList extends BasePeopleSelectedItemsList {\n\n  // tslint:disable-next-line:no-any\n  public static defaultProps: any = {\n    onRenderItem: (props: ISelectedPeopleItemProps) => <ExtendedSelectedItem { ...props } />,\n  };\n\n  public replaceItem = (itemToReplace: IExtendedPersonaProps, itemsToReplaceWith: IExtendedPersonaProps[]): void => {\n    const { items } = this.state;\n    const index: number = items.indexOf(itemToReplace);\n    if (index > -1) {\n      const newItems = items.slice(0, index).concat(itemsToReplaceWith).concat(items.slice(index + 1));\n      this.updateItems(newItems);\n    }\n  }\n\n  protected renderItems = (): JSX.Element[] => {\n    const { items } = this.state;\n    // tslint:disable-next-line:no-any\n    return items.map((item: any, index: number) => this._renderItem(item, index));\n  }\n\n  // tslint:disable-next-line:no-any\n  private _renderItem(item: any, index: number): JSX.Element {\n    const { removeButtonAriaLabel } = this.props;\n    const props = {\n      item,\n      index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item),\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: (itemToCopy: IExtendedPersonaProps) => this.copyItems([itemToCopy]),\n      onExpandItem: this.props.onExpandGroup ? () => (this.props.onExpandGroup as (item: IExtendedPersonaProps) => void)(item) : undefined,\n      menuItems: this._createMenuItems(item),\n    };\n\n    if ((item as IExtendedPersonaProps).isEditing) {\n      return (\n        <EditingItem\n          { ...props }\n          onRenderFloatingPicker={ this.props.onRenderFloatingPicker }\n          floatingPickerProps={ this.props.floatingPickerProps }\n          onEditingComplete={ this._completeEditing }\n          getEditingItemText={ this.props.getEditingItemText }\n        />\n      );\n    } else {\n      const onRenderItem = this.props.onRenderItem as (props: ISelectedPeopleItemProps) => JSX.Element;\n      const renderedItem = onRenderItem(props);\n      return (\n        props.menuItems.length > 0 ?\n          (\n            <SelectedItemWithContextMenu\n              renderedItem={ renderedItem }\n              beginEditing={ this._beginEditing }\n              menuItems={ this._createMenuItems(props.item) }\n              item={ props.item }\n            />\n          )\n          : renderedItem\n      );\n    }\n  }\n\n  private _beginEditing = (item: IExtendedPersonaProps): void => {\n    item.isEditing = true;\n    this.forceUpdate();\n  }\n\n  // tslint:disable-next-line:no-any\n  private _completeEditing = (oldItem: any, newItem: any): void => {\n    oldItem.isEditing = false;\n    this.replaceItem(oldItem, newItem);\n  }\n\n  // tslint:disable-next-line:no-any\n  private _createMenuItems(item: any): IContextualMenuItem[] {\n    const menuItems: IContextualMenuItem[] = [];\n\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        name: this.props.editMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this._beginEditing(menuItem.data);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.removeMenuItemText) {\n      menuItems.push(\n        {\n          key: 'Remove',\n          name: this.props.removeMenuItemText,\n          onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n            this.removeItem(menuItem.data as ISelectedItemProps<IExtendedPersonaProps>);\n          },\n          data: item,\n        });\n    }\n\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        name: this.props.copyMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          if (this.props.onCopyItems) {\n            (this.copyItems as (items: IExtendedPersonaProps[]) => void)([menuItem.data] as IExtendedPersonaProps[]);\n          }\n        },\n        data: item,\n      });\n    }\n\n    return menuItems;\n  }\n}"]}