{"version":3,"file":"Calendar.Button.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport {\n  Calendar,\n  DayOfWeek\n} from 'office-ui-fabric-react/lib/Calendar';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\n\nconst DayPickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today'\n};\n\nexport interface ICalendarButtonExampleState {\n  showCalendar: boolean;\n  selectedDate: Date | null;\n}\n\nexport interface ICalendarButtonExampleProps {\n  isDayPickerVisible?: boolean;\n  isMonthPickerVisible?: boolean;\n  highlightCurrentMonth?: boolean;\n  highlightSelectedMonth?: boolean;\n  buttonString?: string;\n  showMonthPickerAsOverlay?: boolean;\n}\n\nexport class CalendarButtonExample extends React.Component<ICalendarButtonExampleProps, ICalendarButtonExampleState> {\n  public static defaultProps: ICalendarButtonExampleProps = {\n    showMonthPickerAsOverlay: false,\n    isDayPickerVisible: true,\n    isMonthPickerVisible: true,\n    buttonString: 'Click for Calendar'\n  };\n\n  private _calendarButtonElement: HTMLElement;\n\n  public constructor(props: ICalendarButtonExampleProps) {\n    super(props);\n\n    this.state = {\n      showCalendar: false,\n      selectedDate: null\n    };\n\n    this._onClick = this._onClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n    this._onSelectDate = this._onSelectDate.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <div ref={ (calendarBtn) => this._calendarButtonElement = calendarBtn! }>\n          <DefaultButton\n            onClick={ this._onClick }\n            text={ !this.state.selectedDate ? this.props.buttonString : this.state.selectedDate.toLocaleDateString() }\n          />\n        </div>\n        { this.state.showCalendar && (\n          <Callout\n            isBeakVisible={ false }\n            className='ms-DatePicker-callout'\n            gapSpace={ 0 }\n            doNotLayer={ false }\n            target={ this._calendarButtonElement }\n            directionalHint={ DirectionalHint.bottomLeftEdge }\n            onDismiss={ this._onDismiss }\n            setInitialFocus={ true }\n          >\n            <FocusTrapZone isClickableOutsideFocusTrap={ true }>\n              <Calendar\n                onSelectDate={ this._onSelectDate }\n                onDismiss={ this._onDismiss }\n                isMonthPickerVisible={ this.props.isMonthPickerVisible }\n                value={ this.state.selectedDate! }\n                firstDayOfWeek={ DayOfWeek.Sunday }\n                strings={ DayPickerStrings }\n                isDayPickerVisible={ this.props.isDayPickerVisible }\n                highlightCurrentMonth={ this.props.highlightCurrentMonth }\n                highlightSelectedMonth={ this.props.highlightSelectedMonth }\n                showMonthPickerAsOverlay={ this.props.showMonthPickerAsOverlay }\n              />\n            </FocusTrapZone>\n          </Callout>\n        )\n        }\n      </div>\n    );\n  }\n\n  private _onClick(event: any): void {\n    this.setState((prevState: ICalendarButtonExampleState) => {\n      prevState.showCalendar = !prevState.showCalendar;\n      return prevState;\n    });\n  }\n\n  private _onDismiss(): void {\n    this.setState((prevState: ICalendarButtonExampleState) => {\n      prevState.showCalendar = false;\n      return prevState;\n    });\n  }\n\n  private _onSelectDate(date: Date): void {\n    this.setState((prevState: ICalendarButtonExampleState) => {\n      prevState.showCalendar = false;\n      prevState.selectedDate = date;\n      return prevState;\n    });\n  }\n}\n"]}