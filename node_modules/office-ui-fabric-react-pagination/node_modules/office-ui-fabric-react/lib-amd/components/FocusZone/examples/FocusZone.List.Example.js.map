{"version":3,"file":"FocusZone.List.Example.js","sourceRoot":"../src/","sources":["components/FocusZone/examples/FocusZone.List.Example.tsx"],"names":[],"mappings":";;;IAYA,IAAM,KAAK,GAAG,uBAAW,CAAC,EAAE,EAAE,UAAC,KAAK,IAAK,OAAA,CAAC;QACxC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE;QACrB,IAAI,EAAE,OAAO,GAAG,KAAK;QACrB,GAAG,EAAE,0BAA0B,GAAG,CAAC,GAAG,GAAG,KAAM,CAAC;KACjD,CAAC,EAJuC,CAIvC,CAAC,CAAC;IAEJ,IAAM,OAAO,GAAc;QACzB;YACE,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,GAAG;SACd;QACD;YACE,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,WAAI,IAAC,IAAI,EAAG,IAAI,CAAC,GAAG,IAAK,IAAI,CAAC,GAAG,CAAS,EAA3C,CAA2C;SAC9D;QACD;YACE,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,sBAAa,QAAG,IAAI,CAAC,GAAG,CAAkB,EAA3C,CAA2C;SAC9D;KACF,CAAC;IAEF;QAA0C,gDAAe;QAGvD,8BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YAFC,KAAI,CAAC,UAAU,GAAG,IAAI,uBAAS,EAAE,CAAC;YAClC,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;QAClC,CAAC;QAEM,qCAAM,GAAb;YAAA,iBAoBC;YAnBC,OAAO,CACL,oBAAC,qBAAS,IACR,SAAS,EAAC,yBAAyB,EACnC,SAAS,EAAG,8BAAkB,CAAC,QAAQ,EACvC,oBAAoB,EAAG,IAAI,EAC3B,oBAAoB,EAAG,IAAI,CAAC,qBAAqB,IAE/C,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC3B,oBAAC,wBAAU,IACT,GAAG,EAAG,KAAK,EACX,IAAI,EAAG,IAAI,EACX,SAAS,EAAG,KAAK,EACjB,OAAO,EAAG,OAAO,EACjB,aAAa,EAAG,2BAAa,CAAC,MAAM,EACpC,SAAS,EAAG,KAAI,CAAC,UAAU,GAC3B,CACH,EAT4B,CAS5B,CAAC,CACQ,CACb,CAAC;QACJ,CAAC;QAEO,oDAAqB,GAA7B,UAA8B,EAAoC;YAChE,OAAO,EAAE,CAAC,KAAK,KAAK,6BAAiB,gBAAgB,CAAC;QACxD,CAAC;QAEH,2BAAC;IAAD,CAAC,AApCD,CAA0C,KAAK,CAAC,SAAS,GAoCxD;IApCY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  createArray,\n  getRTLSafeKeyCode\n} from 'office-ui-fabric-react/lib/Utilities';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport { DetailsRow, IColumn, Selection, SelectionMode } from 'office-ui-fabric-react/lib/DetailsList';\nimport './FocusZone.List.Example.scss';\n\nconst ITEMS = createArray(10, (index) => ({\n  key: index.toString(),\n  name: 'Item-' + index,\n  url: 'http://placehold.it/100x' + (200 + index!)\n}));\n\nconst COLUMNS: IColumn[] = [\n  {\n    key: 'name',\n    name: 'Name',\n    fieldName: 'name',\n    minWidth: 100\n  },\n  {\n    key: 'link',\n    name: 'Link',\n    fieldName: 'url',\n    minWidth: 100,\n    onRender: item => <Link href={ item.url }>{ item.url }</Link>\n  },\n  {\n    key: 'link',\n    name: 'Link',\n    fieldName: 'url',\n    minWidth: 100,\n    onRender: item => <DefaultButton>{ item.url }</DefaultButton>\n  }\n];\n\nexport class FocusZoneListExample extends React.Component {\n  private _selection: Selection;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._selection = new Selection();\n    this._selection.setItems(ITEMS);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FocusZone\n        className='ms-FocusZoneListExample'\n        direction={ FocusZoneDirection.vertical }\n        isCircularNavigation={ true }\n        isInnerZoneKeystroke={ this._isInnerZoneKeystroke }\n      >\n        { ITEMS.map((item, index) => (\n          <DetailsRow\n            key={ index }\n            item={ item }\n            itemIndex={ index }\n            columns={ COLUMNS }\n            selectionMode={ SelectionMode.single }\n            selection={ this._selection }\n          />\n        )) }\n      </FocusZone>\n    );\n  }\n\n  private _isInnerZoneKeystroke(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n  }\n\n}\n"]}