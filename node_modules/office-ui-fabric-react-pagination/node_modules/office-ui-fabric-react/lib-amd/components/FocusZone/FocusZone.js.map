{"version":3,"file":"FocusZone.js","sourceRoot":"../src/","sources":["components/FocusZone/FocusZone.tsx"],"names":[],"mappings":";;;IA4BA,IAAM,sBAAsB,GAAG,mBAAmB,CAAC;IACnD,IAAM,2BAA2B,GAAG,6BAA6B,CAAC;IAClE,IAAM,sBAAsB,GAAG,mBAAmB,CAAC;IACnD,IAAM,QAAQ,GAAG,UAAU,CAAC;IAC5B,IAAM,gBAAgB,GAAG,uBAAuB,CAAC;IACjD,IAAM,kBAAkB,GAAG,yBAAyB,CAAC;IACrD,IAAM,0BAA0B,GAAG,SAAS,CAAC;IAC7C,IAAM,mCAAmC,GAAG,CAAC,SAAS,CAAC;IAEvD,IAAM,aAAa,GAEf,EAAE,CAAC;IAMP,IAAM,mBAAmB,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAE5F,IAAM,sBAAsB,GAAG,KAAK,CAAC;IAErC;QAA+B,qCAAkC;QAmB/D,mBAAY,KAAsB;YAAlC,YACE,kBAAM,KAAK,CAAC,SAeb;YA5BO,WAAK,GAAG,qBAAS,EAAe,CAAC;YA2JjC,cAAQ,GAAG,UAAC,EAAiC;gBAC7C,IAAA,gBAA6F,EAA3F,kDAAsB,EAAE,oEAA+B,EAAE,4CAAmB,CAAgB;gBAEpG,IAAI,mBAAmB,EAAE;oBACvB,mBAAmB,EAAE,CAAC;iBACvB;gBAED,IAAI,KAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,MAAqB,CAAC,EAAE;oBAC/D,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC,MAAqB,CAAC;oBAC/C,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,aAAa,GAAG,EAAE,CAAC,MAAqB,CAAC;oBAE7C,OAAO,aAAa,IAAI,aAAa,KAAK,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;wBAC5D,IAAI,6BAAiB,CAAC,aAAa,CAAC,IAAI,KAAI,CAAC,4BAA4B,CAAC,aAAa,CAAC,EAAE;4BACxF,KAAI,CAAC,cAAc,GAAG,aAAa,CAAC;4BACpC,MAAM;yBACP;wBACD,aAAa,GAAG,qBAAS,CAAC,aAAa,EAAE,sBAAsB,CAAgB,CAAC;qBACjF;iBACF;gBAED,IAAI,sBAAsB,EAAE;oBAC1B,sBAAsB,CAAC,KAAI,CAAC,cAA6B,EAAE,EAAE,CAAC,CAAC;iBAChE;gBAED,IAAI,+BAA+B,EAAE;oBACnC,EAAE,CAAC,eAAe,EAAE,CAAC;iBACtB;YACH,CAAC,CAAA;YAWO,kBAAY,GAAG,UAAC,EAAiC;gBAC/C,IAAA,+BAAQ,CAAgB;gBAEhC,IAAI,QAAQ,EAAE;oBACZ,OAAO;iBACR;gBAED,IAAI,MAAM,GAAG,EAAE,CAAC,MAAqB,CAAC;gBACtC,IAAM,IAAI,GAAG,EAAE,CAAC;gBAEhB,OAAO,MAAM,IAAI,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAClB,MAAM,GAAG,qBAAS,CAAC,MAAM,EAAE,sBAAsB,CAAgB,CAAC;iBACnE;gBAED,OAAO,IAAI,CAAC,MAAM,EAAE;oBAClB,MAAM,GAAG,IAAI,CAAC,GAAG,EAAiB,CAAC;oBAEnC,IAAI,MAAM,IAAI,6BAAiB,CAAC,MAAM,CAAC,EAAE;wBACvC,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;qBACtC;oBAED,IAAI,8BAAkB,CAAC,MAAM,CAAC,EAAE;wBAC9B,qEAAqE;wBACrE,MAAM;qBACP;iBACF;YACH,CAAC,CAAA;YAwBD;;eAEG;YACK,gBAAU,GAAG,UAAC,EAAoC;gBAClD,IAAA,gBAA0D,EAAxD,wBAAS,EAAE,sBAAQ,EAAE,8CAAoB,CAAgB;gBAEjE,IAAI,QAAQ,EAAE;oBACZ,OAAO;iBACR;gBAED,IAAI,QAAQ,CAAC,aAAa,KAAK,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,YAAY,EAAE;oBACtE,iEAAiE;oBACjE,wBAAwB;oBACxB,OAAO;iBACR;gBAED,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACxB,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;iBAC1B;gBAED,qEAAqE;gBACrE,IAAI,EAAE,CAAC,kBAAkB,EAAE,EAAE;oBAC3B,OAAO;iBACR;gBAED,IACE,oBAAoB;oBACpB,oBAAoB,CAAC,EAAE,CAAC;oBACxB,KAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,MAAqB,CAAC,EAAE;oBAE7D,eAAe;oBACf,IAAM,SAAS,GAAG,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAE5C,IAAI,SAAS,EAAE;wBACb,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;4BAC1B,OAAO;yBACR;qBACF;yBAAM,IAAI,iCAAqB,CAAC,EAAE,CAAC,MAAqB,CAAC,EAAE;wBAC1D,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,0BAAc,CAAC,EAAE,CAAC,MAAqB,EAAG,EAAE,CAAC,MAAsB,CAAC,UAAyB,EAAE,IAAI,CAAgB,CAAC,EAAE;4BAC3I,OAAO;yBACR;qBACF;yBAAM;wBACL,OAAO;qBACR;iBACF;qBAAM,IAAI,EAAE,CAAC,MAAM,EAAE;oBACpB,OAAO;iBACR;qBAAM;oBACL,QAAQ,EAAE,CAAC,KAAK,EAAE;wBAChB;4BACE,IAAI,KAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,MAAqB,CAAC,EAAE;gCAC9D,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IAAI,SAAS,KAAK,oCAAkB,CAAC,QAAQ,IAAI,KAAI,CAAC,cAAc,EAAE,EAAE;gCACtE,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IAAI,SAAS,KAAK,oCAAkB,CAAC,QAAQ,IAAI,KAAI,CAAC,eAAe,EAAE,EAAE;gCACvE,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IAAI,SAAS,KAAK,oCAAkB,CAAC,UAAU,IAAI,KAAI,CAAC,YAAY,EAAE,EAAE;gCACtE,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IAAI,SAAS,KAAK,oCAAkB,CAAC,UAAU,IAAI,KAAI,CAAC,cAAc,EAAE,EAAE;gCACxE,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IAAI,KAAI,CAAC,KAAK,CAAC,WAAW;gCACxB,KAAI,CAAC,KAAK,CAAC,YAAY,gBAAkC;gCACzD,CAAC,KAAI,CAAC,KAAK,CAAC,YAAY,sBAAwC;oCAC9D,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,MAAqB,CAAC,CAAC,EAAE;gCACnD,IAAI,YAAY,GAAG,KAAK,CAAC;gCACzB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gCAC9B,IAAI,SAAS,KAAK,oCAAkB,CAAC,QAAQ;oCAC3C,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,cAA6B,EAAE,kBAAkB,CAAC,EAAE;oCAChF,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC;iCAC1E;qCAAM,IAAI,SAAS,KAAK,oCAAkB,CAAC,UAAU,IAAI,SAAS,KAAK,oCAAkB,CAAC,aAAa,EAAE;oCACxG,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,eAAe,EAAE,CAAC;iCAC7E;gCACD,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gCAC/B,IAAI,YAAY,EAAE;oCAChB,MAAM;iCACP;6BACF;4BACD,OAAO;wBAET;4BACE,IACE,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,MAAqB,CAAC;gCAC9C,CAAC,KAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,MAA0B,EAAE,KAAK,CAAC,EAAE;gCACnE,OAAO,KAAK,CAAC;6BACd;4BACD,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAgC,CAAC;4BAC7F,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,UAAU,IAAI,KAAI,CAAC,YAAY,CAAC,0BAAc,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAgB,CAAC,EAAE;gCAC9H,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IACE,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,MAAqB,CAAC;gCAC9C,CAAC,KAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,MAA0B,EAAE,IAAI,CAAC,EAAE;gCAClE,OAAO,KAAK,CAAC;6BACd;4BAED,IAAM,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAA+B,CAAC;4BAC3F,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,YAAY,CAAC,8BAAkB,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAgB,CAAC,EAAE;gCAC/H,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,IAAI,KAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,MAAqB,CAAC,EAAE;gCAC9D,MAAM;6BACP;4BACD,OAAO;wBAET;4BACE,OAAO;qBACV;iBACF;gBAED,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;YACvB,CAAC,CAAA;YA/WC,KAAI,CAAC,iBAAiB,CAAC;gBACrB,SAAS,EAAE,SAAS;gBACpB,aAAa,EAAE,cAAc;aAC9B,CAAC,CAAC;YAEH,KAAI,CAAC,GAAG,GAAG,iBAAK,CAAC,WAAW,CAAC,CAAC;YAE9B,KAAI,CAAC,eAAe,GAAG;gBACrB,IAAI,EAAE,CAAC;gBACP,GAAG,EAAE,CAAC;aACP,CAAC;YAEF,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;;QACjC,CAAC;QAEM,qCAAiB,GAAxB;YACE,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACtB,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC;gBAEnE,IAAI,aAAa,GAAG,qBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;gBAE1E,OACE,aAAa;oBACb,aAAa,KAAK,QAAQ,CAAC,IAAI;oBAC/B,aAAa,CAAC,QAAQ,KAAK,CAAC,EAC5B;oBACA,IAAI,8BAAkB,CAAC,aAAa,CAAC,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,MAAM;qBACP;oBACD,aAAa,GAAG,qBAAS,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;iBAClE;gBAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACtB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;iBACzE;gBAED,8EAA8E;gBAC9E,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAEzB,IAAI,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;oBACnC,IAAI,CAAC,cAAc,GAAG,uBAAW,EAAG,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAgB,CAAC;oBACnG,IAAI,CAAC,KAAK,EAAE,CAAC;iBACd;aACF;QACH,CAAC;QAEM,wCAAoB,GAA3B;YACE,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;QAEM,0BAAM,GAAb;YACQ,IAAA,eAAsE,EAApE,wBAAS,EAAE,oCAAe,EAAE,kCAAc,EAAE,wBAAS,CAAgB;YAC7E,IAAM,QAAQ,GAAG,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,iCAAqB,CAAC,CAAC;YAEnE,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC;YAE5C,OAAO,CACL,oBAAC,GAAG,qBACF,IAAI,EAAC,cAAc,IAEhB,QAAQ,EAMR,SAAgB,IAEnB,SAAS,EAAG,eAAG,CAAC,cAAc,EAAE,SAAS,CAAC,EAC1C,GAAG,EAAG,IAAI,CAAC,KAAK,uBACI,IAAI,CAAC,GAAG,qBACV,cAAc,sBACb,eAAe,EAClC,SAAS,EAAG,IAAI,CAAC,UAAU,EAC3B,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,kBAAkB,EAAG,IAAI,CAAC,YAAY,KAEpC,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,CACP,CAAC;QACJ,CAAC;QAED;;;;WAIG;QACI,yBAAK,GAAZ,UAAa,qBAAsC;YAAtC,sCAAA,EAAA,6BAAsC;YACjD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,sBAAsB,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;oBACrH,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAgB,CAAC;oBAE/E,IAAI,gBAAgB,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;wBAC3C,IAAM,SAAS,GAAG,aAAa,CAAC,gBAAgB,CAAC,YAAY,CAAC,sBAAsB,CAAW,CAAC,CAAC;wBAEjG,OAAO,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAClE;oBAED,OAAO,KAAK,CAAC;iBACd;qBAAM,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,cAAc,IAAI,2BAAe,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC;uBAC/G,6BAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;oBAC3C,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAyB,CAAC;oBAEhE,OAAO,IAAI,CAAC,YAAY,CAAC,0BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAgB,CAAC,CAAC;iBAC/F;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QAED;;;;;;WAMG;QACI,gCAAY,GAAnB,UAAoB,OAAoB;YAC9B,IAAA,wCAAa,CAAgB;YAErC,IAAI,aAAa,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;gBAC5C,OAAO,KAAK,CAAC;aACd;YAED,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;gBAED,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAiCD;;WAEG;QACK,qCAAiB,GAAzB,UAA0B,EAAiB;YACzC,IAAI,EAAE,CAAC,KAAK,gBAAiB,EAAE;gBAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;QACH,CAAC;QA+BO,qCAAiB,GAAzB,UAA0B,OAAoB,EAAE,cAAwB;YACtE,IAAM,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC;YAElD,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAE9B,IAAI,qBAAqB,EAAE;gBACzB,IAAI,8BAAkB,CAAC,qBAAqB,CAAC,EAAE;oBAC7C,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,CAAC;iBAC/C;gBAED,qBAAqB,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;aACrC;YAED,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,cAAc,EAAE;oBAC3C,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC9C;gBAED,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC;aAClC;QACH,CAAC;QA4ID;;WAEG;QACK,+CAA2B,GAAnC,UAAoC,MAAmB;YACrD,IAAI,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACjC,OAAO,KAAK,CAAC;aACd;YAED,GAAG;gBACD,IAAI,MAAM,CAAC,OAAO,KAAK,QAAQ,IAAI,MAAM,CAAC,OAAO,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,IAAI,MAAM,CAAC,OAAO,KAAK,UAAU,EAAE;oBACxH,OAAO,KAAK,CAAC;iBACd;gBAED,IACE,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC;oBACzC,MAAM,CAAC,YAAY,CAAC,sBAAsB,CAAC,KAAK,MAAM;oBACtD,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,KAAK,MAAM,EAAE;oBAC7D,sBAAU,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBAE9C,OAAO,IAAI,CAAC;iBACb;gBAED,MAAM,GAAG,qBAAS,CAAC,MAAM,EAAE,sBAAsB,CAAgB,CAAC;aACnE,QAAQ,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YAExC,OAAO,KAAK,CAAC;QACf,CAAC;QAED;;WAEG;QACK,sCAAkB,GAA1B,UAA2B,WAAgC;YACzD,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YAEvE,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;YAED,IAAI,8BAAkB,CAAC,WAAW,CAAC,EAAE;gBACnC,OAAO,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAW,CAAC,CAAC;aAClF;YAED,IAAI,KAAK,GAAG,WAAW,CAAC,iBAAuC,CAAC;YAEhE,OAAO,KAAK,EAAE;gBACZ,IAAI,8BAAkB,CAAC,KAAK,CAAC,EAAE;oBAC7B,OAAO,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,sBAAsB,CAAW,CAAC,CAAC;iBAC5E;gBACD,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAE7C,IAAI,KAAK,EAAE;oBACT,OAAO,KAAK,CAAC;iBACd;gBAED,KAAK,GAAG,KAAK,CAAC,kBAAwC,CAAC;aACxD;YAED,OAAO,IAAI,CAAC;QACd,CAAC;QAEO,8BAAU,GAAlB,UACE,SAAkB,EAClB,qBAAiF,EACjF,EAAU,EACV,cAA8B;YAA9B,+BAAA,EAAA,qBAA8B;YAE9B,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAClC,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC;YAC3B,IAAI,gBAAgB,GAA4B,SAAS,CAAC;YAC1D,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,oCAAkB,CAAC,aAAa,CAAC;YAElF,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACnC,OAAO,KAAK,CAAC;aACd;YAED,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;gBACjC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAA2B,EAAE,SAAS,CAAC,EAAE;oBACvE,OAAO,KAAK,CAAC;iBACd;aACF;YAED,IAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAE5E,GAAG;gBACD,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,0BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,8BAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAgB,CAAC;gBAErI,IAAI,eAAe,EAAE;oBACnB,IAAI,OAAO,EAAE;wBACX,IAAM,UAAU,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;wBACnD,IAAM,eAAe,GAAG,qBAAqB,CAAC,UAAwB,EAAE,UAAU,CAAC,CAAC;wBAEpF,IAAI,eAAe,KAAK,CAAC,CAAC,IAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE;4BACtD,gBAAgB,GAAG,OAAO,CAAC;4BAC3B,MAAM;yBACP;wBAED,IAAI,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,CAAC,IAAI,eAAe,GAAG,iBAAiB,CAAC,EAAE;4BAC7F,iBAAiB,GAAG,eAAe,CAAC;4BACpC,gBAAgB,GAAG,OAAO,CAAC;yBAC5B;wBAED,IAAI,iBAAiB,IAAI,CAAC,IAAI,eAAe,GAAG,CAAC,EAAE;4BACjD,MAAM;yBACP;qBACF;iBACF;qBAAM;oBACL,gBAAgB,GAAG,OAAO,CAAC;oBAC3B,MAAM;iBACP;aAEF,QAAQ,OAAO,EAAE;YAElB,8BAA8B;YAC9B,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,IAAI,CAAC,cAAc,EAAE;gBAChE,YAAY,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;aACrC;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,oBAAoB,IAAI,cAAc,EAAE;gBAC5D,IAAI,SAAS,EAAE;oBACb,OAAO,IAAI,CAAC,YAAY,CAAC,0BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAgC,EAAE,IAAI,CAAgB,CAAC,CAAC;iBACxI;qBAAM;oBACL,OAAO,IAAI,CAAC,YAAY,CAAC,8BAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAA+B,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAgB,CAAC,CAAC;iBACvJ;aACF;YAED,OAAO,YAAY,CAAC;QACtB,CAAC;QAEO,kCAAc,GAAtB;YAAA,iBAsCC;YArCC,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;YACnB,IAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAEhD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,UAAC,UAAsB,EAAE,UAAsB;gBACvE,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;gBAClB,oFAAoF;gBACpF,mFAAmF;gBACnF,iGAAiG;gBACjG,2DAA2D;gBAC3D,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAEvD,IAAI,aAAa,GAAG,gBAAgB,EAAE;oBACpC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,cAA6B,EAAE,gBAAgB,CAAC,EAAE;wBAChF,OAAO,mCAAmC,CAAC;qBAC5C;oBAED,OAAO,0BAA0B,CAAC;iBACnC;gBAED,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,gBAAgB,CAAC;oBACzD,CAAC,aAAa,KAAK,SAAS,CAAC,EAAE;oBAC/B,SAAS,GAAG,aAAa,CAAC;oBAC1B,IAAI,aAAa,IAAI,UAAU,CAAC,IAAI,IAAI,aAAa,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;wBAC7F,QAAQ,GAAG,CAAC,CAAC;qBACd;yBAAM;wBACL,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;qBACjF;iBACF;gBAED,OAAO,QAAQ,CAAC;YAClB,CAAC,CAAC,EAAE;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAA6B,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAEO,gCAAY,GAApB;YAAA,iBAsCC;YArCC,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;YACnB,IAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAEhD,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,UAAC,UAAsB,EAAE,UAAsB;gBACxE,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;gBAClB,oFAAoF;gBACpF,mFAAmF;gBACnF,iGAAiG;gBACjG,2DAA2D;gBAC3D,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACvD,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAEjD,IAAI,gBAAgB,GAAG,aAAa,EAAE;oBACpC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,cAA6B,EAAE,gBAAgB,CAAC,EAAE;wBAChF,OAAO,mCAAmC,CAAC;qBAC5C;oBACD,OAAO,0BAA0B,CAAC;iBACnC;gBAED,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,gBAAgB,IAAI,aAAa,CAAC;oBACzD,CAAC,aAAa,KAAK,SAAS,CAAC,EAAE;oBAC/B,SAAS,GAAG,aAAa,CAAC;oBAC1B,IAAI,aAAa,IAAI,UAAU,CAAC,IAAI,IAAI,aAAa,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;wBAC7F,QAAQ,GAAG,CAAC,CAAC;qBACd;yBAAM;wBACL,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;qBACjF;iBACF;gBAED,OAAO,QAAQ,CAAC;YAClB,CAAC,CAAC,EAAE;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAA6B,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAEO,kCAAc,GAAtB;YAAA,iBA4BC;YA3BC,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAA6B,EAAE,kBAAkB,CAAC,CAAC;YACjG,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAM,EAAE,EAAE,UAAC,UAAsB,EAAE,UAAsB;gBAC3E,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;gBAElB,IACE,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG;oBAClC,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK;oBACpC,KAAI,CAAC,KAAK,CAAC,SAAS,KAAK,oCAAkB,CAAC,QAAQ,EACpD;oBAEA,QAAQ,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;iBAChD;qBAAM;oBACL,IAAI,CAAC,UAAU,EAAE;wBACf,QAAQ,GAAG,mCAAmC,CAAC;qBAChD;iBACF;gBAED,OAAO,QAAQ,CAAC;YAClB,CAAC,EACC,SAAS,CAAC,MAAM,EAChB,UAAU,CACX,EAAE;gBACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAEO,mCAAe,GAAvB;YAAA,iBA0BC;YAzBC,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAA6B,EAAE,kBAAkB,CAAC,CAAC;YACjG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,kBAAM,EAAE,EAAE,UAAC,UAAsB,EAAE,UAAsB;gBAC5E,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;gBAElB,IACE,UAAU,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM;oBAClC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI;oBAClC,KAAI,CAAC,KAAK,CAAC,SAAS,KAAK,oCAAkB,CAAC,QAAQ,EACpD;oBAEA,QAAQ,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;iBAC9C;qBAAM,IAAI,CAAC,UAAU,EAAE;oBACtB,QAAQ,GAAG,mCAAmC,CAAC;iBAChD;gBAED,OAAO,QAAQ,CAAC;YAClB,CAAC,EACC,SAAS,CAAC,MAAM,EAChB,UAAU,CACX,EAAE;gBACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAEO,sCAAkB,GAA1B,UAA2B,OAAoB,EAAE,YAAsB,EAAE,UAAoB;YAC3F,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,oCAAkB,CAAC,aAAa;gBAC3D,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,YAAY,IAAI,UAAU,CAAC,EAAE;gBAEvD,IAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;gBAC7C,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1C,IAAM,KAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAEzC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;oBACzB,IAAI,CAAC,eAAe,GAAG,EAAE,IAAI,MAAA,EAAE,GAAG,OAAA,EAAE,CAAC;iBACtC;gBAED,IAAI,YAAY,EAAE;oBAChB,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;iBAClC;gBAED,IAAI,UAAU,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,GAAG,GAAG,KAAG,CAAC;iBAChC;aACF;QACH,CAAC;QAEO,gDAA4B,GAApC,UAAqC,OAAqB;YACxD,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5D,CAAC;QAEO,iCAAa,GAArB,UAAsB,OAAqB;YACzC,IAAI,aAAa,GAAG,qBAAS,CAAC,OAAsB,EAAE,sBAAsB,CAAC,CAAC;YAE9E,OAAO,aAAa,IAAI,aAAa,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,EAAE;gBAC/F,IAAI,8BAAkB,CAAC,aAAa,CAAC,EAAE;oBACrC,OAAO,aAAa,CAAC;iBACtB;gBAED,aAAa,GAAG,qBAAS,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;aAClE;YAED,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5B,CAAC;QAEO,qCAAiB,GAAzB,UAA0B,OAAqB;YAC7C,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBAClC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC7B,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,2BAAe,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE;oBACzE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;aACF;YAED,+DAA+D;YAC/D,6EAA6E;YAC7E,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,6BAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBAClE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;YAED,IAAM,UAAU,GAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC;YAE/C,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;gBACnF,IAAM,KAAK,GAAG,UAAU,CAAC,UAAU,CAAgB,CAAC;gBAEpD,IAAI,CAAC,8BAAkB,CAAC,KAAK,CAAC,EAAE;oBAC9B,yFAAyF;oBACzF,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,sBAAsB,CAAC,KAAK,OAAO,EAAE;wBAChF,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;qBACpC;oBAED,IAAI,6BAAiB,CAAC,KAAK,CAAC,EAAE;wBAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;4BACvB,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;yBACpC;6BAAM,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,CAAC,EAAE;4BACxH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;4BAClC,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE;gCACxC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;6BACnC;yBACF;6BAAM,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;4BAChD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;yBACpC;qBACF;yBAAM,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,IAAI,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,OAAO,EAAE;wBACjF,gCAAgC;wBAChC,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;qBAC1C;iBACF;qBAAM,IAAI,KAAK,CAAC,YAAY,CAAC,sBAAsB,CAAC,KAAK,MAAM,EAAE;oBAChE,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,CAAC,EAAE;wBACjH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;wBAClC,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE;4BACxC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;yBACnC;qBACF;yBAAM,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;wBAChD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;qBACpC;iBACF;gBAED,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;aAC/B;QACH,CAAC;QAEO,mCAAe,GAAvB,UAAwB,OAAoB;YAC1C,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,UAAU,CAAC,EAAE;gBAC7H,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QAEO,yCAAqB,GAA7B,UAA8B,OAAyB,EAAE,SAAmB;YAC1E,2DAA2D;YAC3D,IAAI,CAAC,IAAI,CAAC,iBAAiB;gBACzB,OAAO;gBACP,OAAO,CAAC,IAAI;gBACZ,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC9D,IAAM,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;gBAC9C,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;gBAC1C,IAAM,eAAe,GAAG,cAAc,KAAK,YAAY,CAAC;gBACxD,IAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;gBAEjC,kDAAkD;gBAClD,8BAA8B;gBAC9B,+DAA+D;gBAC/D,sEAAsE;gBACtE,oHAAoH;gBACpH,kIAAkI;gBAClI,0CAA0C;gBAC1C,IACE,eAAe;oBACf,CAAC,cAAe,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;oBACnC,CAAC,cAAc,KAAK,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC;oBACnD,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,8BAA8B;2BACpE,IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC,CAAC,EACzD;oBACA,OAAO,KAAK,CAAC;iBACd;aACF;YAED,OAAO,IAAI,CAAC;QACd,CAAC;QAEO,oCAAgB,GAAxB,UAAyB,OAAoB,EAAE,mBAAwE;YACrH,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,2BAAe,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC5F,CAAC;QAxxBa,sBAAY,GAAoB;YAC5C,oBAAoB,EAAE,KAAK;YAC3B,SAAS,EAAE,oCAAkB,CAAC,aAAa;SAC5C,CAAC;QAsxBJ,gBAAC;KAAA,AA3xBD,CAA+B,yBAAa,GA2xB3C;IA3xBY,8BAAS","sourcesContent":["import * as React from 'react';\nimport {\n  FocusZoneDirection,\n  FocusZoneTabbableElements,\n  IFocusZone,\n  IFocusZoneProps\n} from './FocusZone.types';\nimport {\n  BaseComponent,\n  EventGroup,\n  KeyCodes,\n  css,\n  htmlElementProperties,\n  elementContains,\n  getDocument,\n  getId,\n  getNextElement,\n  getNativeProps,\n  getParent,\n  getPreviousElement,\n  getRTL,\n  isElementFocusZone,\n  isElementFocusSubZone,\n  isElementTabbable,\n  shouldWrapFocus,\n  createRef\n} from '../../Utilities';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_ENTER_DISABLED_ATTRIBUTE = 'data-disable-click-on-enter';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nconst _allInstances: {\n  [key: string]: FocusZone\n} = {};\n\ninterface IPoint {\n  left: number;\n  top: number;\n}\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\nexport class FocusZone extends BaseComponent<IFocusZoneProps, {}> implements IFocusZone {\n\n  public static defaultProps: IFocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional\n  };\n\n  private _root = createRef<HTMLElement>();\n  private _id: string;\n  /** The most recently focused child element. */\n  private _activeElement: HTMLElement | null;\n  /** The child element with tabindex=0. */\n  private _defaultFocusElement: HTMLElement | null;\n  private _focusAlignment: IPoint;\n  private _isInnerZone: boolean;\n\n  /** Used to allow us to move to next focusable element even when we're focusing on a input element when pressing tab */\n  private _processingTabKey: boolean;\n\n  constructor(props: IFocusZoneProps) {\n    super(props);\n\n    this._warnDeprecations({\n      rootProps: undefined,\n      'allowTabKey': 'handleTabKey'\n    });\n\n    this._id = getId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0\n    };\n\n    this._processingTabKey = false;\n  }\n\n  public componentDidMount(): void {\n    _allInstances[this._id] = this;\n    if (this._root.current) {\n      const windowElement = this._root.current.ownerDocument.defaultView;\n\n      let parentElement = getParent(this._root.current, ALLOW_VIRTUAL_ELEMENTS);\n\n      while (\n        parentElement &&\n        parentElement !== document.body &&\n        parentElement.nodeType === 1\n      ) {\n        if (isElementFocusZone(parentElement)) {\n          this._isInnerZone = true;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n      }\n\n      if (!this._isInnerZone) {\n        this._events.on(windowElement, 'keydown', this._onKeyDownCapture, true);\n      }\n\n      // Assign initial tab indexes so that we can set initial focus as appropriate.\n      this._updateTabIndexes();\n\n      if (this.props.defaultActiveElement) {\n        this._activeElement = getDocument()!.querySelector(this.props.defaultActiveElement) as HTMLElement;\n        this.focus();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    delete _allInstances[this._id];\n  }\n\n  public render() {\n    const { rootProps, ariaDescribedBy, ariaLabelledBy, className } = this.props;\n    const divProps = getNativeProps(this.props, htmlElementProperties);\n\n    const Tag = this.props.elementType || 'div';\n\n    return (\n      <Tag\n        role='presentation'\n        {\n        ...divProps\n        }\n        {\n        // root props has been deprecated and should get removed.\n        // it needs to be marked as \"any\" since root props expects a div element, but really Tag can\n        // be any native element so typescript rightly flags this as a problem.\n        ...rootProps as any\n        }\n        className={ css('ms-FocusZone', className) }\n        ref={ this._root }\n        data-focuszone-id={ this._id }\n        aria-labelledby={ ariaLabelledBy }\n        aria-describedby={ ariaDescribedBy }\n        onKeyDown={ this._onKeyDown }\n        onFocus={ this._onFocus }\n        onMouseDownCapture={ this._onMouseDown }\n      >\n        { this.props.children }\n      </Tag>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param {boolean} forceIntoFirstElement If true, focus will be forced into the first element, even if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (!forceIntoFirstElement && this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' && this._isInnerZone) {\n        const ownerZoneElement = this._getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      } else if (!forceIntoFirstElement && this._activeElement && elementContains(this._root.current, this._activeElement)\n        && isElementTabbable(this._activeElement)) {\n        this._activeElement.focus();\n        return true;\n      } else {\n        const firstChild = this._root.current.firstChild as HTMLElement;\n\n        return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * onBeforeFocus to created delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param {HTMLElement} element The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusElement(element: HTMLElement): boolean {\n    const { onBeforeFocus } = this.props;\n\n    if (onBeforeFocus && !onBeforeFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      this._setActiveElement(element);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    const { onActiveElementChanged, doNotAllowFocusEventToPropagate, onFocusNotification } = this.props;\n\n    if (onFocusNotification) {\n      onFocusNotification();\n    }\n\n    if (this._isImmediateDescendantOfZone(ev.target as HTMLElement)) {\n      this._activeElement = ev.target as HTMLElement;\n      this._setFocusAlignment(this._activeElement);\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this._isImmediateDescendantOfZone(parentElement)) {\n          this._activeElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (doNotAllowFocusEventToPropagate) {\n      ev.stopPropagation();\n    }\n  }\n\n  /**\n   * Handle global tab presses so that we can patch tabindexes on the fly.\n   */\n  private _onKeyDownCapture(ev: KeyboardEvent) {\n    if (ev.which === KeyCodes.tab) {\n      this._updateTabIndexes();\n    }\n  }\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this._setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  }\n\n  private _setActiveElement(element: HTMLElement, forceAlignemnt?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this._updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignemnt) {\n        this._setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    const { direction, disabled, isInnerZoneKeystroke } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    if (document.activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return;\n    }\n\n    if (\n      isInnerZoneKeystroke &&\n      isInnerZoneKeystroke(ev) &&\n      this._isImmediateDescendantOfZone(ev.target as HTMLElement)) {\n\n      // Try to focus\n      const innerZone = this._getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (!this.focusElement(getNextElement(ev.target as HTMLElement, (ev.target as HTMLElement).firstChild as HTMLElement, true) as HTMLElement)) {\n          return;\n        }\n      } else {\n        return;\n      }\n    } else if (ev.altKey) {\n      return;\n    } else {\n      switch (ev.which) {\n        case KeyCodes.space:\n          if (this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.left:\n          if (direction !== FocusZoneDirection.vertical && this._moveFocusLeft()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.right:\n          if (direction !== FocusZoneDirection.vertical && this._moveFocusRight()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.up:\n          if (direction !== FocusZoneDirection.horizontal && this._moveFocusUp()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.down:\n          if (direction !== FocusZoneDirection.horizontal && this._moveFocusDown()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.tab:\n          if (this.props.allowTabKey ||\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this._isElementInput(ev.target as HTMLElement))) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (direction === FocusZoneDirection.vertical ||\n              !this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)) {\n              focusChanged = ev.shiftKey ? this._moveFocusUp() : this._moveFocusDown();\n            } else if (direction === FocusZoneDirection.horizontal || direction === FocusZoneDirection.bidirectional) {\n              focusChanged = ev.shiftKey ? this._moveFocusLeft() : this._moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.home:\n          if (\n            this._isElementInput(ev.target as HTMLElement) &&\n            !this._shouldInputLoseFocus(ev.target as HTMLInputElement, false)) {\n            return false;\n          }\n          const firstChild = this._root.current && this._root.current.firstChild as HTMLElement | null;\n          if (this._root.current && firstChild && this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.end:\n          if (\n            this._isElementInput(ev.target as HTMLElement) &&\n            !this._shouldInputLoseFocus(ev.target as HTMLInputElement, true)) {\n            return false;\n          }\n\n          const lastChild = this._root.current && this._root.current.lastChild as HTMLElement | null;\n          if (this._root.current && this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.enter:\n          if (this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        default:\n          return;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  private _tryInvokeClickForFocusable(target: HTMLElement): boolean {\n    if (target === this._root.current) {\n      return false;\n    }\n\n    do {\n      if (target.tagName === 'BUTTON' || target.tagName === 'A' || target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n        return false;\n      }\n\n      if (\n        this._isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true') {\n        EventGroup.raise(target, 'click', null, true);\n\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  private _getFirstInnerZone(rootElement?: HTMLElement | null): FocusZone | null {\n    rootElement = rootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this._getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  private _moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    ev?: Event,\n    useDefaultWrap: boolean = true): boolean {\n\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (isForward ? getNextElement(this._root.current, element) : getPreviousElement(this._root.current, element)) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement);\n      } else {\n        return this.focusElement(getPreviousElement(this._root.current, this._root.current.lastElementChild as HTMLElement, true, true, true) as HTMLElement);\n      }\n    }\n\n    return changedFocus;\n  }\n\n  private _moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (this._moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n      let distance = -1;\n      // ClientRect values can be floats that differ by very small fractions of a decimal.\n      // If the difference between top and bottom are within a pixel then we should treat\n      // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n      // but without Math.Floor they will be handled incorrectly.\n      const targetRectTop = Math.floor(targetRect.top);\n      const activeRectBottom = Math.floor(activeRect.bottom);\n\n      if (targetRectTop < activeRectBottom) {\n        if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n          return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n        }\n\n        return LARGE_DISTANCE_FROM_CENTER;\n      }\n\n      if ((targetTop === -1 && targetRectTop >= activeRectBottom) ||\n        (targetRectTop === targetTop)) {\n        targetTop = targetRectTop;\n        if (leftAlignment >= targetRect.left && leftAlignment <= (targetRect.left + targetRect.width)) {\n          distance = 0;\n        } else {\n          distance = Math.abs((targetRect.left + (targetRect.width / 2)) - leftAlignment);\n        }\n      }\n\n      return distance;\n    })) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (this._moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n      let distance = -1;\n      // ClientRect values can be floats that differ by very small fractions of a decimal.\n      // If the difference between top and bottom are within a pixel then we should treat\n      // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n      // but without Math.Floor they will be handled incorrectly.\n      const targetRectBottom = Math.floor(targetRect.bottom);\n      const targetRectTop = Math.floor(targetRect.top);\n      const activeRectTop = Math.floor(activeRect.top);\n\n      if (targetRectBottom > activeRectTop) {\n        if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n          return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n        }\n        return LARGE_DISTANCE_FROM_CENTER;\n      }\n\n      if ((targetTop === -1 && targetRectBottom <= activeRectTop) ||\n        (targetRectTop === targetTop)) {\n        targetTop = targetRectTop;\n        if (leftAlignment >= targetRect.left && leftAlignment <= (targetRect.left + targetRect.width)) {\n          distance = 0;\n        } else {\n          distance = Math.abs((targetRect.left + (targetRect.width / 2)) - leftAlignment);\n        }\n      }\n\n      return distance;\n    })) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusLeft(): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (this._moveFocus(getRTL(), (activeRect: ClientRect, targetRect: ClientRect) => {\n      let distance = -1;\n\n      if (\n        targetRect.bottom > activeRect.top &&\n        targetRect.right <= activeRect.right &&\n        this.props.direction !== FocusZoneDirection.vertical\n      ) {\n\n        distance = activeRect.right - targetRect.right;\n      } else {\n        if (!shouldWrap) {\n          distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n        }\n      }\n\n      return distance;\n    },\n      undefined /*ev*/,\n      shouldWrap\n    )) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusRight(): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (this._moveFocus(!getRTL(), (activeRect: ClientRect, targetRect: ClientRect) => {\n      let distance = -1;\n\n      if (\n        targetRect.top < activeRect.bottom &&\n        targetRect.left >= activeRect.left &&\n        this.props.direction !== FocusZoneDirection.vertical\n      ) {\n\n        distance = targetRect.left - activeRect.left;\n      } else if (!shouldWrap) {\n        distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n      }\n\n      return distance;\n    },\n      undefined /*ev*/,\n      shouldWrap\n    )) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean) {\n    if (this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)) {\n\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + (rect.width / 2);\n      const top = rect.top + (rect.height / 2);\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  private _isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this._getOwnerZone(element) === this._root.current;\n  }\n\n  private _getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    while (parentElement && parentElement !== this._root.current && parentElement !== document.body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return this._root.current;\n  }\n\n  private _updateTabIndexes(element?: HTMLElement) {\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (!this._isInnerZone && ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (!this._isInnerZone && ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this._updateTabIndexes(child);\n    }\n  }\n\n  private _isElementInput(element: HTMLElement): boolean {\n    if (element && element.tagName && (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')) {\n      return true;\n    }\n    return false;\n  }\n\n  private _shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean) {\n    // If a tab was used, we want to focus on the next element.\n    if (!this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward.\n      // 3. when selection start is not the end of length and it is forward.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit tab)\n      // and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is determined by calling the\n      // callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward) ||\n        (selectionStart !== inputValue.length && isForward) ||\n        (!!this.props.handleTabKey && !(this.props.shouldInputLoseFocusOnArrowKey\n          && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private _shouldWrapFocus(element: HTMLElement, noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap'): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n}\n"]}