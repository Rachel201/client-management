{"version":3,"file":"ScrollablePanePage.js","sourceRoot":"../src/","sources":["components/ScrollablePane/ScrollablePanePage.tsx"],"names":[],"mappings":";;;IAaA,IAAM,gCAAgC,GAAG,OAAO,CAAC,8GAA8G,CAAW,CAAC;IAE3K,IAAM,oCAAoC,GAAG,OAAO,CAAC,kHAAkH,CAAW,CAAC;IAEnL;QAAwC,8CAA6C;QAArF;;QAyDA,CAAC;QAxDQ,mCAAM,GAAb;YACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,gBAAgB,EACtB,aAAa,EAAC,uBAAuB,EACrC,YAAY,EAAC,+HAA+H,EAC5I,YAAY,EACV;oBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,SAAS,EAAC,IAAI,EAAG,gCAAgC;wBAClE,oBAAC,6DAA4B,OAAG,CACpB;oBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,2BAA2B,EAAC,IAAI,EAAG,oCAAoC;wBACxF,oBAAC,qEAAgC,OAAG,CACxB,CACV,EAER,gBAAgB,EAAG,IAAI,EACvB,kBAAkB,EAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,EACpC,gBAAgB,EACd;oBACE,oBAAC,qCAAkB,IACjB,OAAO,EAAG;4BACR,OAAO,CAAS,0FAA0F,CAAC;4BAC3G,OAAO,CAAS,0EAA0E,CAAC;yBAC5F,GACD,CACE,EAER,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,iGAAiG,CAAC,CACvG,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,4FAA4F,CAAC,CAClG,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,8FAA8F,CAAC,CACpG,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,+CAAoB,EACzB,GAEJ,CACH,CAAC;QACJ,CAAC;QAEH,yBAAC;IAAD,CAAC,AAzDD,CAAwC,KAAK,CAAC,SAAS,GAyDtD;IAzDY,gDAAkB","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  ComponentPage,\n  IComponentDemoPageProps,\n  PageMarkdown,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { ScrollablePaneDefaultExample } from './examples/ScrollablePane.Default.Example';\nimport { ScrollablePaneDetailsListExample } from './examples/ScrollablePane.DetailsList.Example';\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\nimport { ScrollablePaneStatus } from './ScrollablePane.checklist';\n\nconst ScrollablePaneDefaultExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx') as string;\n\nconst ScrollablePaneDetailsListExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ScrollablePane/examples/ScrollablePane.DetailsList.Example.tsx') as string;\n\nexport class ScrollablePanePage extends React.Component<IComponentDemoPageProps, any> {\n  public render(): JSX.Element {\n    return (\n      <ComponentPage\n        title='ScrollablePane'\n        componentName='ScrollablePaneExample'\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/ScrollablePane'\n        exampleCards={\n          <div>\n            <ExampleCard title='Default' code={ ScrollablePaneDefaultExampleCode }>\n              <ScrollablePaneDefaultExample />\n            </ExampleCard>\n            <ExampleCard title='DetailsList Locked Header' code={ ScrollablePaneDetailsListExampleCode }>\n              <ScrollablePaneDetailsListExample />\n            </ExampleCard>\n          </div>\n        }\n        allowNativeProps={ true }\n        nativePropsElement={ ['a', 'button'] }\n        propertiesTables={\n          <div>\n            <PropertiesTableSet\n              sources={ [\n                require<string>('!raw-loader!office-ui-fabric-react/src/components/ScrollablePane/ScrollablePane.types.ts'),\n                require<string>('!raw-loader!office-ui-fabric-react/src/components/Sticky/Sticky.types.ts')\n              ] }\n            />\n          </div>\n        }\n        overview={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/ScrollablePane/docs/ScrollablePaneOverview.md') }\n          </PageMarkdown>\n        }\n        bestPractices={\n          <div />\n        }\n        dos={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/ScrollablePane/docs/ScrollablePaneDos.md') }\n          </PageMarkdown>\n        }\n        donts={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/ScrollablePane/docs/ScrollablePaneDonts.md') }\n          </PageMarkdown>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        componentStatus={\n          <ComponentStatus\n            { ...ScrollablePaneStatus }\n          />\n        }\n      />\n    );\n  }\n\n}\n"]}