{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,MAAM,GAAG;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;KACV,CAAC;IAEF;QAAkD,wDAAe;QAAjE;;QA+CA,CAAC;QA9CQ,6CAAM,GAAb;YACE,IAAM,YAAY,GAAkB,EAAE,CAAC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/C;YAED,OAAO,CACL,6BACE,KAAK,EAAG;oBACN,MAAM,EAAE,OAAO;oBACf,QAAQ,EAAE,UAAU;oBACpB,SAAS,EAAE,SAAS;iBACrB;gBAED,oBAAC,+BAAc,IAAC,SAAS,EAAC,8BAA8B,IACpD,YAAY,CAAC,GAAG,CAAC,UAAC,GAAG;oBACrB,OAAO,GAAG,CAAC;gBACb,CAAC,CAAC,CACa,CACb,CACP,CAAC;QACJ,CAAC;QAEO,yDAAkB,GAA1B,UAA2B,KAAa;YACtC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7E,OAAO,CACL,6BACE,GAAG,EAAG,KAAK,EACX,KAAK,EAAG;oBACN,eAAe,EAAE,KAAK;iBACvB;gBAED,oBAAC,eAAM,IACL,cAAc,EAAG,2BAAkB,CAAC,IAAI;oBAExC,6BAAK,SAAS,EAAC,QAAQ;;wBACD,KAAK,GAAG,CAAC,CACzB,CACC;gBACT,6BAAK,SAAS,EAAC,aAAa,IACxB,wBAAK,CAAC,GAAG,CAAC,CACR,CACF,CACP,CAAC;QACJ,CAAC;QACH,mCAAC;IAAD,CAAC,AA/CD,CAAkD,KAAK,CAAC,SAAS,GA+ChE;IA/CY,oEAA4B","sourcesContent":["import * as React from 'react';\nimport { ScrollablePane } from 'office-ui-fabric-react/lib/ScrollablePane';\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\nimport { lorem } from '@uifabric/example-app-base';\nimport './ScrollablePane.Example.scss';\n\nconst colors = [\n  '#eaeaea',\n  '#dadada',\n  '#d0d0d0',\n  '#c8c8c8',\n  '#a6a6a6',\n  '#c7e0f4',\n  '#71afe5',\n  '#eff6fc',\n  '#deecf9'\n];\n\nexport class ScrollablePaneDefaultExample extends React.Component {\n  public render() {\n    const contentAreas: JSX.Element[] = [];\n    for (let i = 0; i < 5; i++) {\n      contentAreas.push(this._createContentArea(i));\n    }\n\n    return (\n      <div\n        style={ {\n          height: '900px',\n          position: 'relative',\n          maxHeight: 'inherit'\n        } }\n      >\n        <ScrollablePane className='scrollablePaneDefaultExample'>\n          { contentAreas.map((ele) => {\n            return ele;\n          }) }\n        </ScrollablePane>\n      </div>\n    );\n  }\n\n  private _createContentArea(index: number) {\n    const color = colors.splice(Math.floor(Math.random() * colors.length), 1)[0];\n\n    return (\n      <div\n        key={ index }\n        style={ {\n          backgroundColor: color\n        } }\n      >\n        <Sticky\n          stickyPosition={ StickyPositionType.Both }\n        >\n          <div className='sticky'>\n            Sticky Component #{ index + 1 }\n          </div>\n        </Sticky>\n        <div className='textContent'>\n          { lorem(200) }\n        </div>\n      </div>\n    );\n  }\n}\n"]}