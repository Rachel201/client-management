{"version":3,"file":"ScrollablePane.DetailsList.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.DetailsList.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport {\n  DetailsList,\n  DetailsListLayoutMode,\n  IDetailsHeaderProps,\n  Selection,\n  IColumn\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport {\n  IRenderFunction\n} from 'office-ui-fabric-react/lib/Utilities';\nimport {\n  TooltipHost,\n  ITooltipHostProps\n} from 'office-ui-fabric-react/lib/Tooltip';\nimport {\n  ScrollablePane\n} from 'office-ui-fabric-react/lib/ScrollablePane';\nimport {\n  Sticky,\n  StickyPositionType\n} from 'office-ui-fabric-react/lib/Sticky';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\n\nconst _items: {\n  key: number,\n  name: string,\n  value: number\n}[] = [];\n\nconst _columns: IColumn[] = [\n  {\n    key: 'column1',\n    name: 'Name',\n    fieldName: 'name',\n    minWidth: 100,\n    maxWidth: 200,\n    isResizable: true,\n    ariaLabel: 'Operations for name'\n  },\n  {\n    key: 'column2',\n    name: 'Value',\n    fieldName: 'value',\n    minWidth: 100,\n    maxWidth: 200,\n    isResizable: true,\n    ariaLabel: 'Operations for value'\n  },\n];\n\nexport class ScrollablePaneDetailsListExample extends React.Component<{}, {\n  items: {}[];\n  selectionDetails: string;\n}> {\n  private _selection: Selection;\n\n  constructor(props: {}) {\n    super(props);\n\n    // Populate with items for demos.\n    if (_items.length === 0) {\n      for (let i = 0; i < 200; i++) {\n        _items.push({\n          key: i,\n          name: 'Item ' + i,\n          value: i\n        });\n      }\n    }\n\n    this._selection = new Selection({\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\n    });\n\n    this.state = {\n      items: _items,\n      selectionDetails: this._getSelectionDetails()\n    };\n  }\n\n  public render(): JSX.Element {\n    const { items, selectionDetails } = this.state;\n\n    return (\n      <div\n        style={ {\n          height: '10000px',\n          position: 'relative',\n          maxHeight: 'inherit'\n        } }\n      >\n        <ScrollablePane>\n          <Sticky stickyPosition={ StickyPositionType.Header }>{ selectionDetails }</Sticky>\n          <TextField\n            label='Filter by name:'\n            // tslint:disable-next-line:jsx-no-lambda\n            onChanged={ text => this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items }) }\n          />\n          <Sticky stickyPosition={ StickyPositionType.Header }>\n            <h1 style={ { margin: '0px' } }>Item List</h1>\n          </Sticky>\n          <MarqueeSelection selection={ this._selection }>\n            <DetailsList\n              items={ items }\n              columns={ _columns }\n              setKey='set'\n              layoutMode={ DetailsListLayoutMode.fixedColumns }\n              onRenderDetailsHeader={\n                // tslint:disable-next-line:jsx-no-lambda\n                (detailsHeaderProps: IDetailsHeaderProps, defaultRender: IRenderFunction<IDetailsHeaderProps>) => (\n                  <Sticky stickyPosition={ StickyPositionType.Header }>\n                    { defaultRender({\n                      ...detailsHeaderProps,\n                      onRenderColumnHeaderTooltip: (tooltipHostProps: ITooltipHostProps) => <TooltipHost { ...tooltipHostProps } />\n                    }) }\n                  </Sticky>\n                ) }\n              selection={ this._selection }\n              selectionPreservedOnEmptyClick={ true }\n              ariaLabelForSelectionColumn='Toggle selection'\n              ariaLabelForSelectAllCheckbox='Toggle selection for all items'\n              // tslint:disable-next-line:jsx-no-lambda\n              onItemInvoked={ (item) => alert(`Item invoked: ${item.name}`) }\n            />\n          </MarqueeSelection>\n        </ScrollablePane>\n      </div>\n    );\n  }\n\n  private _getSelectionDetails(): string {\n    const selectionCount = this._selection.getSelectedCount();\n\n    switch (selectionCount) {\n      case 0:\n        return 'No items selected';\n      case 1:\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\n      default:\n        return `${selectionCount} items selected`;\n    }\n  }\n}\n"]}