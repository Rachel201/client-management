{"version":3,"file":"CommandBar.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  buttonProperties,\n  anchorProperties,\n  css,\n  divProperties,\n  getId,\n  getNativeProps\n} from '../../Utilities';\nimport { ICommandBar, ICommandBarProps, ICommandBarItemProps } from './CommandBar.types';\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { ContextualMenu, IContextualMenuProps, IContextualMenuItem } from '../../ContextualMenu';\nimport { hasSubmenu } from '../../utilities/contextualMenu/index';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  Icon,\n  IIconProps\n} from '../../Icon';\nimport { FontClassNames } from '../../Styling';\nimport { TooltipHost } from '../../Tooltip';\nimport * as stylesImport from './CommandBar.scss';\nimport { createRef } from '../../Utilities';\nimport { KeytipData } from '../../KeytipData';\n\nconst styles: any = stylesImport;\n\nconst OVERFLOW_KEY = 'overflow';\nconst OVERFLOW_WIDTH = 41.5;\n\nexport interface ICommandBarState {\n  renderedItems?: IContextualMenuItem[];\n  renderedOverflowItems?: IContextualMenuItem[];\n  expandedMenuItemKey?: string;\n  expandedMenuId?: string;\n  contextualMenuProps?: IContextualMenuProps;\n  contextualMenuTarget?: HTMLElement;\n  renderedFarItems?: IContextualMenuItem[];\n}\n\nexport class CommandBar extends BaseComponent<ICommandBarProps, ICommandBarState> implements ICommandBar {\n  public static defaultProps: ICommandBarProps = {\n    items: [],\n    overflowItems: [],\n    farItems: []\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n  };\n\n  private _searchSurface = createRef<HTMLDivElement>();\n  private _commandSurface = createRef<HTMLDivElement>();\n  private _commandBarRegion = createRef<HTMLDivElement>();\n  private _farCommandSurface = createRef<HTMLDivElement>();\n  private _focusZone = createRef<IFocusZone>();\n  private _overflow = createRef<HTMLDivElement>();\n\n  private _id: string;\n  private _overflowWidth: number;\n  private _commandItemWidths: { [key: string]: number } | null;\n\n  constructor(props: ICommandBarProps) {\n    super(props);\n\n    this.state = this._getStateFromProps(props);\n\n    this._id = getId('CommandBar');\n  }\n\n  public componentDidMount(): void {\n    // Asynchronously update command bar layout to eliminate forced synchronous reflow\n    this._asyncMeasure();\n    this._events.on(window, 'resize', this._updateRenderedItems);\n  }\n\n  public componentWillReceiveProps(nextProps: ICommandBarProps): void {\n    this.setState(this._getStateFromProps(nextProps));\n    this._commandItemWidths = null;\n  }\n\n  public componentDidUpdate(prevProps: ICommandBarProps, prevStates: ICommandBarState) {\n    if (!this._commandItemWidths) {\n      // Asynchronously update command bar layout to eliminate forced synchronous reflow\n      this._asyncMeasure();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { isSearchBoxVisible, searchPlaceholderText, className } = this.props;\n    const { renderedItems, contextualMenuProps, expandedMenuItemKey, expandedMenuId, renderedOverflowItems, contextualMenuTarget, renderedFarItems } = this.state;\n    let searchBox;\n\n    if (isSearchBoxVisible) {\n      searchBox = (\n        <div className={ css('ms-CommandBarSearch', styles.search) } ref={ this._searchSurface }>\n          <input className={ css('ms-CommandBarSearch-input', styles.searchInput) } type='text' placeholder={ searchPlaceholderText } />\n          <div\n            className={ css(\n              'ms-CommandBarSearch-iconWrapper ms-CommandBarSearch-iconSearchWrapper',\n              styles.searchIconWrapper, styles.searchIconSearchWrapper) }\n          >\n            { <Icon iconName={ 'Search' } /> }\n          </div>\n          <div\n            className={ css(\n              'ms-CommandBarSearch-iconWrapper ms-CommandBarSearch-iconClearWrapper',\n              FontClassNames.small,\n              styles.searchIconWrapper,\n              styles.searchIconClearWrapper\n            ) }\n          >\n            <Icon iconName='cancel' />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={ css('ms-CommandBar', styles.root, className) } ref={ this._commandBarRegion }>\n        { searchBox }\n        <FocusZone componentRef={ this._focusZone } className={ styles.container } direction={ FocusZoneDirection.horizontal } role='menubar' >\n          <div className={ css('ms-CommandBar-primaryCommands', styles.primaryCommands) } ref={ this._commandSurface }>\n            { renderedItems!.map(item => (\n              this._renderItemInCommandBar(item, expandedMenuItemKey!)\n            )).concat((renderedOverflowItems && renderedOverflowItems.length) ? [\n              <div className={ css('ms-CommandBarItem', styles.item) } key={ OVERFLOW_KEY } ref={ this._overflow }>\n                <button\n                  type='button'\n                  id={ this._id + OVERFLOW_KEY }\n                  className={ css('ms-CommandBarItem-link', styles.itemLink, {\n                    ['is-expanded ' + styles.itemLinkIsExpanded]: (expandedMenuItemKey === OVERFLOW_KEY)\n                  }) }\n                  onClick={ this._onOverflowClick }\n                  role='menuitem'\n                  aria-expanded={ this.state.expandedMenuItemKey === OVERFLOW_KEY }\n                  aria-label={ this.props.elipisisAriaLabel || '' }\n                  aria-haspopup={ true }\n                  data-automation-id='commandBarOverflow'\n                >\n                  <Icon className={ css('ms-CommandBarItem-overflow', styles.itemOverflow) } iconName='more' />\n                </button>\n              </div>\n            ] : []) }\n          </div>\n          <div className={ css('ms-CommandBar-sideCommands', styles.sideCommands) } ref={ this._farCommandSurface }>\n            { renderedFarItems!.map(item => (\n              this._renderItemInCommandBar(item, expandedMenuItemKey!, true)\n            )) }\n          </div>\n        </FocusZone>\n        { (contextualMenuProps) ?\n          (<ContextualMenu\n            className={ 'ms-CommandBar-menuHost' }\n            directionalHint={ DirectionalHint.bottomAutoEdge }\n            { ...contextualMenuProps }\n            target={ contextualMenuTarget }\n            labelElementId={ expandedMenuId }\n            onDismiss={ this._onContextMenuDismiss }\n          />\n          ) : (null)\n        }\n      </div >\n    );\n  }\n\n  public focus() {\n    const { current: focusZone } = this._focusZone;\n    focusZone && focusZone.focus();\n  }\n\n  private _renderItemInCommandBar(item: ICommandBarItemProps, expandedMenuItemKey: string, isFarItem?: boolean): JSX.Element {\n    if (item.onRender) {\n      return (\n        <div className={ css('ms-CommandBarItem', styles.item, item.className) } key={ item.key } ref={ item.key }>\n          { item.onRender(item, this._onContextMenuDismiss) }\n        </div>\n      );\n    }\n\n    const itemKey = item.key;\n    const isLink = item.onClick || hasSubmenu(item);\n    const className = css(\n      isLink ? ('ms-CommandBarItem-link ' + styles.itemLink) : ('ms-CommandBarItem-text ' + styles.itemText),\n      !item.name && ('ms-CommandBarItem--noName ' + styles.itemLinkIsNoName),\n      (expandedMenuItemKey === item.key) && ('is-expanded ' + styles.itemLinkIsExpanded),\n      item.inactive ? styles.inactive : ''\n    );\n\n    let tooltipContent = '';\n\n    if (item.title) {\n      tooltipContent = item.title;\n    }\n\n    const hasIcon = !!item.icon || !!item.iconProps;\n    const isNameVisible = !!item.name && !item.iconOnly;\n    const ariaLabel = item.ariaLabel || (item.iconOnly ? item.name : undefined);\n    const itemHasSubmenu = hasSubmenu(item);\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    let command: React.ReactNode;\n    if (item.href) {\n      // Allow the disabled property on anchor elements for commandbar\n      const nativeProps = getNativeProps(item, anchorProperties.concat(['disabled']));\n      command = (\n        <KeytipData\n          keytipProps={ keytipProps }\n          ariaDescribedBy={ (nativeProps as any)['aria-describedby'] }\n          disabled={ item.disabled }\n        >\n          { (keytipAttributes: any): JSX.Element => (\n            <a\n              { ...nativeProps }\n              { ...keytipAttributes }\n              id={ this._id + item.key }\n              className={ className }\n              href={ item.disabled ? undefined : item.href }\n              onClick={ this._onItemClick(item) }\n              title={ '' }\n              aria-disabled={ item.inactive }\n              data-command-key={ itemKey }\n              aria-haspopup={ itemHasSubmenu }\n              role='menuitem'\n              aria-label={ ariaLabel }\n            >\n              { (hasIcon) ? this._renderIcon(item) : (null) }\n              { isNameVisible && (\n                <span\n                  className={ css('ms-CommandBarItem-commandText', styles.itemCommandText) }\n                >\n                  { item.name }\n                </span>\n              ) }\n            </a>\n          ) }\n        </KeytipData>\n      );\n    } else if (isLink) {\n      const nativeProps = getNativeProps(item, buttonProperties);\n      command = (\n        <KeytipData\n          keytipProps={ keytipProps }\n          ariaDescribedBy={ (nativeProps as any)['aria-describedby'] }\n          disabled={ item.disabled }\n        >\n          { (keytipAttributes: any): JSX.Element => (\n            <button\n              { ...nativeProps }\n              { ...keytipAttributes }\n              id={ this._id + item.key }\n              className={ className }\n              onClick={ this._onItemClick(item) }\n              title={ '' }\n              aria-disabled={ item.inactive }\n              data-command-key={ itemKey }\n              aria-haspopup={ itemHasSubmenu }\n              aria-expanded={ itemHasSubmenu ? expandedMenuItemKey === item.key : undefined }\n              role='menuitem'\n              aria-label={ ariaLabel }\n            >\n              { (hasIcon) ? this._renderIcon(item) : (null) }\n              { isNameVisible && (\n                <span\n                  className={ css('ms-CommandBarItem-commandText', styles.itemCommandText) }\n                >\n                  { item.name }\n                </span>\n              ) }\n              { itemHasSubmenu ? (\n                <Icon className={ css('ms-CommandBarItem-chevronDown', styles.itemChevronDown) } iconName='ChevronDown' />\n              ) : (null) }\n            </button>\n          )\n          }\n        </KeytipData >\n      );\n    } else {\n      // Allow the disabled property on div elements for commandbar\n      const nativeProps = getNativeProps(item, divProperties.concat(['disabled']));\n      command = (\n        <div\n          { ...nativeProps }\n          id={ this._id + item.key }\n          className={ className }\n          title={ '' }\n          aria-disabled={ item.inactive }\n          data-command-key={ itemKey }\n          aria-haspopup={ itemHasSubmenu }\n          aria-label={ ariaLabel }\n        >\n          { (hasIcon) ? this._renderIcon(item) : (null) }\n          { (isNameVisible) && (\n            <span\n              className={ css('ms-CommandBarItem-commandText', styles.itemCommandText) }\n              aria-hidden='true'\n              role='presentation'\n            >\n              { item.name }\n            </span>\n          ) }\n        </div>\n      );\n    }\n\n    if (item.iconOnly && item.name) {\n      command = (\n        <TooltipHost content={ item.name }>\n          { command }\n        </TooltipHost>\n      );\n    } else if (tooltipContent) {\n      command = (\n        <TooltipHost content={ tooltipContent }>\n          { command }\n        </TooltipHost>\n      );\n    }\n\n    return (\n      <div className={ css('ms-CommandBarItem', styles.item, item.className) } key={ itemKey } ref={ itemKey }>\n        { command }\n      </div>\n    );\n  }\n\n  private _renderIcon(item: IContextualMenuItem): JSX.Element {\n    // Only present to allow continued use of item.icon which is deprecated.\n    const iconProps: IIconProps = item.iconProps ? item.iconProps : {\n      iconName: item.icon\n    };\n    // Use the default icon color for the known icon names\n    const iconColorClassName = iconProps.iconName === 'None' ? '' : ('ms-CommandBarItem-iconColor ' + styles.itemIconColor);\n    const iconClassName = css('ms-CommandBarItem-icon', styles.itemIcon, iconColorClassName, iconProps.className);\n\n    return <Icon { ...iconProps } className={ iconClassName } />;\n  }\n\n  private _asyncMeasure(): void {\n    this._async.requestAnimationFrame(() => {\n      this._updateItemMeasurements();\n      this._updateRenderedItems();\n    });\n  }\n\n  private _updateItemMeasurements(): void {\n    // the generated width for overflow is 35 in chrome, 38 in IE, but the actual value is 41.5\n    if (this._overflow.current || (this.props.overflowItems && this.props.overflowItems.length)) {\n      this._overflowWidth = OVERFLOW_WIDTH;\n    } else {\n      this._overflowWidth = 0;\n    }\n\n    if (!this._commandItemWidths) {\n      this._commandItemWidths = {};\n    }\n\n    for (let i = 0; i < this.props.items.length; i++) {\n      const item = this.props.items[i];\n\n      if (!this._commandItemWidths[item.key]) {\n        const el = this.refs[item.key] as HTMLElement;\n\n        if (el) {\n          this._commandItemWidths[item.key] = el.getBoundingClientRect().width;\n        }\n      }\n    }\n  }\n\n  private _updateRenderedItems(): void {\n    const { items, overflowItems, overflowMenuProps } = this.props;\n    const commandSurface = this._commandSurface.current;\n    const farCommandSurface = this._farCommandSurface.current;\n    const commandBarRegion = this._commandBarRegion.current;\n    const searchSurface = this._searchSurface.current;\n    const renderedItems = [...items];\n    let renderedOverflowItems = overflowItems;\n    let consumedWidth = 0;\n    const isOverflowVisible = overflowItems && overflowItems.length;\n\n    if (!commandSurface || !commandBarRegion) {\n      return;\n    }\n\n    const style = window.getComputedStyle(commandSurface);\n    let availableWidth = commandBarRegion.clientWidth - parseInt(style.marginLeft!, 10) - parseInt(style.marginRight!, 10);\n    if (searchSurface) {\n      availableWidth -= searchSurface.getBoundingClientRect().width;\n    }\n    if (farCommandSurface) {\n      availableWidth -= farCommandSurface.getBoundingClientRect().width;\n    }\n\n    if (isOverflowVisible) {\n      availableWidth -= this._overflowWidth;\n    }\n\n    if (!this._commandItemWidths) {\n      this._asyncMeasure();\n      return;\n    }\n\n    for (let i = 0; i < renderedItems.length; i++) {\n      const item = renderedItems[i];\n      const itemWidth = this._commandItemWidths[item.key];\n\n      if ((consumedWidth + itemWidth) >= availableWidth) {\n        if (i > 0 && !isOverflowVisible && (availableWidth - consumedWidth) < OVERFLOW_WIDTH) {\n          i--;\n        }\n\n        renderedOverflowItems = renderedItems.splice(i).concat(overflowItems!);\n        break;\n      } else {\n        consumedWidth += itemWidth;\n      }\n\n    }\n\n    const renderedContextualMenuProps = this._getContextualMenuPropsAfterUpdate(\n        renderedItems.concat(this.state.renderedFarItems!),\n        renderedOverflowItems!,\n        overflowMenuProps!\n      );\n\n    this.setState({\n      renderedItems: renderedItems,\n      renderedOverflowItems: renderedOverflowItems,\n      expandedMenuItemKey: renderedContextualMenuProps ? this.state.expandedMenuItemKey : undefined,\n      contextualMenuProps: renderedContextualMenuProps!,\n      contextualMenuTarget: renderedContextualMenuProps ? this.state.contextualMenuTarget : undefined\n    });\n  }\n\n  private _onItemClick(item: IContextualMenuItem): (ev: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => void {\n    return (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      if (item.inactive) {\n        return;\n      }\n\n      if (item.key === this.state.expandedMenuItemKey || !hasSubmenu(item)) {\n        this._onContextMenuDismiss();\n      } else {\n        this.setState({\n          expandedMenuId: ev.currentTarget.id,\n          expandedMenuItemKey: item.key,\n          contextualMenuProps: this._getContextualMenuPropsFromItem(item),\n          contextualMenuTarget: ev.currentTarget\n        });\n      }\n      if (item.onClick) {\n        item.onClick(ev, item);\n      }\n    };\n  }\n\n  private _onOverflowClick = (ev: React.MouseEvent<HTMLButtonElement>) => {\n    if (this.state.expandedMenuItemKey === OVERFLOW_KEY) {\n      this._onContextMenuDismiss();\n    } else {\n      this.setState({\n        expandedMenuId: ev.currentTarget.id,\n        expandedMenuItemKey: OVERFLOW_KEY,\n        contextualMenuProps: { ...this.props.overflowMenuProps!, items: this.state.renderedOverflowItems! },\n        contextualMenuTarget: ev.currentTarget\n      });\n    }\n  }\n\n  private _onContextMenuDismiss = (ev?: any) => {\n    const { current: commandSurface } = this._commandSurface;\n\n    if (!ev || !ev.relatedTarget || commandSurface && !commandSurface.contains(ev.relatedTarget as HTMLElement)) {\n      const { contextualMenuProps } = this.state;\n\n      if (contextualMenuProps && contextualMenuProps.onDismiss) {\n        contextualMenuProps!.onDismiss!(ev);\n      }\n\n      this.setState({\n        expandedMenuItemKey: undefined,\n        contextualMenuProps: undefined,\n        contextualMenuTarget: undefined\n      });\n    } else {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  }\n\n  private _getStateFromProps(nextProps: ICommandBarProps): ICommandBarState {\n    return {\n      renderedItems: nextProps.items || [],\n      contextualMenuProps: this._getContextualMenuPropsAfterUpdate(\n        nextProps.items.concat(nextProps.farItems!),\n        nextProps.overflowItems!,\n        nextProps.overflowMenuProps!)!,\n      renderedFarItems: nextProps.farItems || undefined\n    };\n  }\n\n  private _getContextualMenuPropsAfterUpdate(renderedItems: IContextualMenuItem[], overflowItems: IContextualMenuItem[], overflowMenuProps: Partial<IContextualMenuProps>): IContextualMenuProps | undefined {\n    if (this.state && this.state.expandedMenuItemKey) {\n      if (this.state.expandedMenuItemKey === OVERFLOW_KEY) {\n        // Keep the overflow menu open\n        return { ...overflowMenuProps, items: overflowItems };\n      } else {\n        // Find the currently open key in the new props\n        const matchingItem = renderedItems.filter(item => item.key === this.state.expandedMenuItemKey);\n\n        if (matchingItem.length === 1) {\n          return this._getContextualMenuPropsFromItem(matchingItem[0]);\n        }\n      }\n    }\n\n    return;\n  }\n\n  private _getContextualMenuPropsFromItem(item: IContextualMenuItem): IContextualMenuProps | undefined {\n    return item.subMenuProps || (item.items && { items: item.items });\n  }\n}\n"]}