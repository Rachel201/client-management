{"version":3,"file":"MessageBar.js","sourceRoot":"../src/","sources":["components/MessageBar/MessageBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  DelayedRender,\n  css,\n  getId\n} from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { IMessageBarProps, MessageBarType } from './MessageBar.types';\nimport * as stylesImport from './MessageBar.scss';\nconst styles: any = stylesImport;\n\nexport interface IMessageBarState {\n  labelId?: string;\n  showContent?: boolean;\n  expandSingleLine?: boolean;\n}\n\nexport class MessageBar extends BaseComponent<IMessageBarProps, IMessageBarState> {\n\n  public static defaultProps: IMessageBarProps = {\n    messageBarType: MessageBarType.info,\n    onDismiss: undefined,\n    isMultiline: true,\n  };\n\n  private ICON_MAP = {\n    [MessageBarType.info]: 'Info',\n    [MessageBarType.warning]: 'Info',\n    [MessageBarType.error]: 'ErrorBadge',\n    [MessageBarType.blocked]: 'Blocked2',\n    [MessageBarType.remove]: 'Blocked', // TODO remove deprecated value at >= 1.0.0\n    [MessageBarType.severeWarning]: 'Warning',\n    [MessageBarType.success]: 'Completed'\n  };\n\n  constructor(props: IMessageBarProps) {\n    super(props);\n\n    this.state = {\n      labelId: getId('MessageBar'),\n      showContent: false,\n      expandSingleLine: false,\n    };\n  }\n\n  public render(): JSX.Element {\n    const { isMultiline } = this.props;\n\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\n  }\n\n  private _getActionsDiv(): JSX.Element | null {\n    if (this.props.actions) {\n      return (\n        <div\n          className={ this.props.isMultiline ?\n            ('ms-MessageBar-actions ' + styles.actions) :\n            ('ms-MessageBar-actionsSingleLine ' + styles.actionsSingleLine) }\n        >\n          { this.props.actions }\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private _getClassName(): string {\n    return css(this.props.className, 'ms-MessageBar', styles.root, {\n      ['ms-MessageBar ' + styles.root]: this.props.messageBarType === MessageBarType.info,\n      ['ms-MessageBar--error ' + styles.rootIsError]: this.props.messageBarType === MessageBarType.error,\n      ['ms-MessageBar--blocked ' + styles.rootIsBlocked]: (this.props.messageBarType === MessageBarType.blocked) ||\n        (this.props.messageBarType === MessageBarType.remove), // TODO remove deprecated value at >= 1.0.0\n      ['ms-MessageBar--severeWarning ' + styles.rootIsSevereWarning]: this.props.messageBarType === MessageBarType.severeWarning,\n      ['ms-MessageBar--success ' + styles.rootIsSuccess]: this.props.messageBarType === MessageBarType.success,\n      ['ms-MessageBar--warning ' + styles.rootIsWarning]: this.props.messageBarType === MessageBarType.warning\n    });\n  }\n\n  private _getDismissDiv(): JSX.Element | null {\n    if (this.props.onDismiss) {\n      return (\n        <IconButton\n          disabled={ false }\n          className={ css('ms-MessageBar-dismissal', styles.dismissal) }\n          onClick={ this.props.onDismiss }\n          iconProps={ { iconName: 'Clear' } }\n          ariaLabel={ this.props.dismissButtonAriaLabel }\n        />\n      );\n    }\n    return null;\n  }\n\n  private _getDismissSingleLine(): JSX.Element | null {\n    if (this.props.onDismiss) {\n      return (\n        <div className={ css('ms-MessageBar-dismissSingleLine', styles.dismissSingleLine) }>\n          { this._getDismissDiv() }\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private _getExpandSingleLine(): JSX.Element | null {\n    if (!this.props.actions && this.props.truncated) {\n      return (\n        <div className={ css('ms-MessageBar-expandSingleLine', styles.expandSingleLine) }>\n          <IconButton\n            disabled={ false }\n            className={ css('ms-MessageBar-expand', styles.expand) }\n            onClick={ this._onClick }\n            iconProps={ { iconName: this.state.expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' } }\n            ariaLabel={ this.props.overflowButtonAriaLabel }\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private _getIconSpan(): JSX.Element {\n    return (\n      <div className={ css('ms-MessageBar-icon', styles.icon) }>\n        <Icon iconName={ this.ICON_MAP[this.props.messageBarType!] } />\n      </div>\n    );\n  }\n\n  private _renderMultiLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    return (\n      <div\n        className={\n          css(this._getClassName(),\n            'ms-MessageBar-multiline',\n            styles.multiLine,\n            this.props.onDismiss && styles.dismissalMultiLine\n          )\n        }\n        role='status'\n        aria-live={ this._getAnnouncementPriority() }\n      >\n        <div className={ css(styles.content, 'ms-MessageBar-content') }>\n          { this._getIconSpan() }\n          { this._renderInnerText() }\n          { this._getDismissDiv() }\n        </div>\n        { this._getActionsDiv() }\n      </div >\n    );\n  }\n\n  private _renderSingleLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    return (\n      <div\n        className={\n          css(this._getClassName(),\n            'ms-MessageBar-singleline',\n            styles.singleLine,\n            this.props.onDismiss && 'ms-MessageBar-dismissalSingleLine',\n            this.props.truncated && 'ms-MessageBar-expandingSingleLine',\n            this.props.truncated && styles.expandingSingleLine\n          )\n        }\n      >\n        <div className={ css(styles.content, 'ms-MessageBar-content') }>\n          { this._getIconSpan() }\n          { this._renderInnerText() }\n          { this._getExpandSingleLine() }\n          { this._getActionsDiv() }\n          { this._getDismissSingleLine() }\n        </div>\n      </div >\n    );\n  }\n\n  private _renderInnerText(): JSX.Element {\n    return (\n      <div\n        className={ css('ms-MessageBar-text', styles.text, this.props.actions && styles.multiLineWithActions, !this.props.onDismiss && styles.noDismissButton, this.state.expandSingleLine && styles.expandSingleLine) }\n        id={ this.state.labelId }\n      >\n        <span\n          className={ css('ms-MessageBar-innerText ' + styles.innerText) }\n          role='status'\n          aria-live={ this._getAnnouncementPriority() }\n        >\n          <DelayedRender>\n            <span>{ this.props.children }</span>\n          </DelayedRender>\n        </span>\n      </div >\n    );\n  }\n\n  private _getAnnouncementPriority(): 'assertive' | 'polite' {\n    switch (this.props.messageBarType) {\n      case MessageBarType.blocked:\n      case MessageBarType.error:\n      case MessageBarType.severeWarning:\n        return 'assertive';\n    }\n    return 'polite';\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    this.setState({ expandSingleLine: !this.state.expandSingleLine });\n  }\n}"]}