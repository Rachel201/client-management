{"version":3,"file":"HoverCard.js","sourceRoot":"../src/","sources":["components/HoverCard/HoverCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  divProperties,\n  getNativeProps,\n  getId,\n  KeyCodes,\n  getDocument,\n  createRef\n} from '../../Utilities';\nimport {\n  mergeStyles\n} from '../../Styling';\n\nimport { IHoverCardProps, IHoverCardStyles } from './HoverCard.types';\nimport { ExpandingCard } from './ExpandingCard';\nimport { ExpandingCardMode, OpenCardMode } from './ExpandingCard.types';\nimport { getStyles } from './HoverCard.styles';\n\nexport interface IHoverCardState {\n  isHoverCardVisible?: boolean;\n  mode?: ExpandingCardMode;\n  openMode?: OpenCardMode;\n}\n\nexport class HoverCard extends BaseComponent<IHoverCardProps, IHoverCardState> {\n  public static defaultProps = {\n    cardOpenDelay: 500,\n    cardDismissDelay: 100,\n    expandedCardOpenDelay: 1500,\n    instantOpenOnClick: false\n  };\n\n  // The wrapping div that gets the hover events\n  private _hoverCard = createRef<HTMLDivElement>();\n  private _dismissTimerId: number;\n  private _openTimerId: number;\n  private _currentMouseTarget: EventTarget | null;\n\n  private _styles: IHoverCardStyles;\n\n  // Constructor\n  constructor(props: IHoverCardProps) {\n    super(props);\n\n    this.state = {\n      isHoverCardVisible: false,\n      mode: ExpandingCardMode.compact,\n      openMode: OpenCardMode.hover\n    };\n  }\n\n  public componentDidMount(): void {\n    const target = this._getTargetElement();\n\n    this._events.on(target, 'mouseenter', this._cardOpen);\n    this._events.on(target, 'mouseleave', this._cardDismiss);\n    if (this.props.trapFocus) {\n      this._events.on(target, 'keydown', this._cardOpen);\n    } else {\n      this._events.on(target, 'focus', this._cardOpen);\n      this._events.on(target, 'blur', this._cardDismiss);\n    }\n    if (this.props.instantOpenOnClick) {\n      this._events.on(target, 'click', this._instantOpenAsExpanded);\n    } else {\n      this._events.on(target, 'mousedown', this._cardDismiss);\n      this._events.on(target, 'keydown', this._cardDismiss);\n    }\n  }\n\n  public componentDidUpdate(prevProps: IHoverCardProps, prevState: IHoverCardState) {\n    if (prevState.isHoverCardVisible !== this.state.isHoverCardVisible) {\n      if (this.state.isHoverCardVisible) {\n        this._async.setTimeout(() => {\n          this.setState({\n            mode: ExpandingCardMode.expanded\n          },\n            () => {\n              this.props.onCardExpand && this.props.onCardExpand();\n            }\n          );\n        }, this.props.expandedCardOpenDelay!);\n        this.props.onCardVisible && this.props.onCardVisible();\n      } else {\n        this.setState({\n          mode: ExpandingCardMode.compact\n        });\n        this.props.onCardHide && this.props.onCardHide();\n      }\n    }\n  }\n\n  // Render\n  public render(): JSX.Element {\n    const {\n      expandingCardProps,\n      children,\n      id,\n      setAriaDescribedBy = true,\n      styles: customStyles\n    } = this.props;\n    const { isHoverCardVisible, mode, openMode } = this.state;\n    const hoverCardId = id || getId('hoverCard');\n\n    this._styles = getStyles(customStyles);\n\n    return (\n      <div\n        className={ mergeStyles(this._styles.host) }\n        ref={ this._hoverCard }\n        aria-describedby={ setAriaDescribedBy && isHoverCardVisible ? hoverCardId : undefined }\n      >\n        { children }\n        { isHoverCardVisible &&\n          <ExpandingCard\n            { ...getNativeProps(this.props, divProperties) }\n            id={ hoverCardId }\n            trapFocus={ !!this.props.trapFocus }\n            firstFocus={ openMode === OpenCardMode.hotKey || openMode === OpenCardMode.hover }\n            targetElement={ this._getTargetElement() }\n            onEnter={ this._cardOpen }\n            onLeave={ this._executeCardDimiss }\n            mode={ mode }\n            { ...expandingCardProps }\n          />\n        }\n      </div>\n    );\n  }\n\n  private _getTargetElement(): HTMLElement | undefined {\n    const { target } = this.props;\n\n    switch (typeof target) {\n      case 'string':\n        return getDocument()!.querySelector(target as string) as HTMLElement;\n\n      case 'object':\n        return target as HTMLElement;\n\n      default:\n        return this._hoverCard.current || undefined;\n    }\n  }\n\n  private _shouldBlockHoverCard(): boolean {\n    return !!(this.props.shouldBlockHoverCard && this.props.shouldBlockHoverCard());\n  }\n\n  // Show HoverCard\n  private _cardOpen = (ev: MouseEvent): void => {\n    if (this._shouldBlockHoverCard() || (ev.type === 'keydown' && !(ev.which === KeyCodes.c))) {\n      return;\n    }\n    this._async.clearTimeout(this._dismissTimerId);\n    if (ev.type === 'mouseenter') {\n      this._currentMouseTarget = ev.currentTarget;\n    }\n\n    this._executeCardOpen(ev);\n  }\n\n  private _executeCardOpen = (ev: MouseEvent): void => {\n    this._async.clearTimeout(this._openTimerId);\n    this._openTimerId = this._async.setTimeout(() => {\n      this.setState((prevState: IHoverCardState) => {\n        if (!prevState.isHoverCardVisible) {\n          return ({\n            isHoverCardVisible: true,\n            mode: ExpandingCardMode.compact,\n            openMode: ev.type === 'keydown' ? OpenCardMode.hotKey : OpenCardMode.hover\n          });\n        }\n\n        return prevState;\n      });\n    }, this.props.cardOpenDelay!);\n  }\n\n  // Hide HoverCard\n  private _cardDismiss = (ev: MouseEvent) => {\n    if (ev.type === 'keydown' && (ev.which !== KeyCodes.escape)) {\n      return;\n    }\n\n    // Dismiss if not sticky and currentTarget is the same element that mouse last entered\n    if (!this.props.sticky && (this._currentMouseTarget === ev.currentTarget || (ev.which === KeyCodes.escape))) {\n      this._executeCardDimiss();\n    }\n  }\n\n  private _executeCardDimiss = (): void => {\n    this._async.clearTimeout(this._openTimerId);\n    this._async.clearTimeout(this._dismissTimerId);\n    this._dismissTimerId = this._async.setTimeout(() => {\n      this.setState({\n        isHoverCardVisible: false,\n        mode: ExpandingCardMode.compact,\n        openMode: OpenCardMode.hover\n      });\n    }, this.props.cardDismissDelay!);\n  }\n\n  private _instantOpenAsExpanded = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    this._async.clearTimeout(this._dismissTimerId);\n\n    this.setState((prevState: IHoverCardState) => {\n      if (!prevState.isHoverCardVisible) {\n        return {\n          isHoverCardVisible: true,\n          mode: ExpandingCardMode.expanded\n        };\n      }\n\n      return prevState;\n    });\n  }\n}\n"]}