{"version":3,"file":"List.Basic.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Basic.Example.tsx"],"names":[],"mappings":";;;IAkBA;QAAsC,4CAA4C;QAChF,0BAAY,KAA6B;YAAzC,YACE,kBAAM,KAAK,CAAC,SAQb;YANC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAEzD,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,EAAE;gBACd,KAAK,EAAE,KAAK,CAAC,KAAK;aACnB,CAAC;;QACJ,CAAC;QAEM,iCAAM,GAAb;YACU,IAAA,gCAAoB,CAAgB;YACpC,IAAA,wBAAK,CAAgB;YAC7B,IAAM,eAAe,GAAG,KAAK,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAK,KAAK,CAAC,MAAM,YAAO,aAAa,CAAC,MAAM,YAAS,CAAC;YAE3H,OAAO,CACL,oBAAC,qBAAS,IAAC,SAAS,EAAG,8BAAkB,CAAC,QAAQ;gBAChD,oBAAC,qBAAS,IAAC,KAAK,EAAG,gBAAgB,GAAG,eAAe,EAAG,cAAc,EAAG,IAAI,CAAC,gBAAgB,GAAK;gBACnG,oBAAC,WAAI,IACH,KAAK,EAAG,KAAK,EACb,YAAY,EAAG,IAAI,CAAC,aAAa,GACjC,CACQ,CACb,CAAC;QACJ,CAAC;QAEO,2CAAgB,GAAxB,UAAyB,IAAY;YAC3B,IAAA,wBAAK,CAAgB;YAE7B,IAAI,CAAC,QAAQ,CAAC;gBACZ,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,IAAI,CAAC,CAAC;oBACX,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC;oBAChF,KAAK;aACR,CAAC,CAAC;QACL,CAAC;QAEO,wCAAa,GAArB,UAAsB,IAAS,EAAE,KAAyB;YACxD,OAAO,CACL,6BAAK,SAAS,EAAC,8BAA8B,uBAAqB,IAAI;gBACpE,oBAAC,aAAK,IACJ,SAAS,EAAC,+BAA+B,EACzC,GAAG,EAAG,IAAI,CAAC,SAAS,EACpB,KAAK,EAAG,EAAE,EACV,MAAM,EAAG,EAAE,EACX,QAAQ,EAAG,gBAAQ,CAAC,KAAK,GACzB;gBACF,6BAAK,SAAS,EAAC,iCAAiC;oBAC9C,6BAAK,SAAS,EAAC,8BAA8B,IAAG,IAAI,CAAC,IAAI,CAAQ;oBACjE,6BAAK,SAAS,EAAC,+BAA+B,IAAG,UAAQ,KAAO,CAAQ;oBACxE,6BAAK,SAAS,EAAC,8BAA8B,IAAG,IAAI,CAAC,WAAW,CAAQ,CACpE;gBACN,oBAAC,WAAI,IACH,SAAS,EAAC,6BAA6B,EACvC,QAAQ,EAAG,kBAAM,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,GACpD,CACE,CACP,CAAC;QACJ,CAAC;QACH,uBAAC;IAAD,CAAC,AA7DD,CAAsC,KAAK,CAAC,SAAS,GA6DpD;IA7DY,4CAAgB","sourcesContent":["import * as React from 'react';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport './List.Basic.Example.scss';\n\nexport interface IListBasicExampleProps {\n  items: any[];\n}\n\nexport interface IListBasicExampleState {\n  filterText?: string;\n  items?: any[];\n}\n\nexport class ListBasicExample extends React.Component<IListBasicExampleProps, any> {\n  constructor(props: IListBasicExampleProps) {\n    super(props);\n\n    this._onFilterChanged = this._onFilterChanged.bind(this);\n\n    this.state = {\n      filterText: '',\n      items: props.items\n    };\n  }\n\n  public render(): JSX.Element {\n    const { items: originalItems } = this.props;\n    const { items } = this.state;\n    const resultCountText = items.length === originalItems.length ? '' : ` (${items.length} of ${originalItems.length} shown)`;\n\n    return (\n      <FocusZone direction={ FocusZoneDirection.vertical }>\n        <TextField label={ 'Filter by name' + resultCountText } onBeforeChange={ this._onFilterChanged } />\n        <List\n          items={ items }\n          onRenderCell={ this._onRenderCell }\n        />\n      </FocusZone>\n    );\n  }\n\n  private _onFilterChanged(text: string): void {\n    const { items } = this.props;\n\n    this.setState({\n      filterText: text,\n      items: text ?\n        items.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0) :\n        items\n    });\n  }\n\n  private _onRenderCell(item: any, index: number | undefined): JSX.Element {\n    return (\n      <div className='ms-ListBasicExample-itemCell' data-is-focusable={ true }>\n        <Image\n          className='ms-ListBasicExample-itemImage'\n          src={ item.thumbnail }\n          width={ 50 }\n          height={ 50 }\n          imageFit={ ImageFit.cover }\n        />\n        <div className='ms-ListBasicExample-itemContent'>\n          <div className='ms-ListBasicExample-itemName'>{ item.name }</div>\n          <div className='ms-ListBasicExample-itemIndex'>{ `Item ${index}` }</div>\n          <div className='ms-ListBasicExample-itemDesc'>{ item.description }</div>\n        </div>\n        <Icon\n          className='ms-ListBasicExample-chevron'\n          iconName={ getRTL() ? 'ChevronLeft' : 'ChevronRight' }\n        />\n      </div>\n    );\n  }\n}\n"]}