{"version":3,"file":"PrimaryButton.js","sourceRoot":"../src/","sources":["components/Button/PrimaryButton/PrimaryButton.tsx"],"names":[],"mappings":";;;IAMA;QAAmC,yCAA+B;QADlE;YAAA,qEAgBC;YAdC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAW9C,CAAC;QATQ,8BAAM,GAAb;YACE,OAAO,CACL,oBAAC,6BAAa,uBACP,IAAI,CAAC,KAAK,IACf,OAAO,EAAG,IAAI,EACd,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;QACJ,CAAC;QAdU,aAAa;YADzB,wBAAY,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,CAAC;WAC5B,aAAa,CAezB;QAAD,oBAAC;KAAA,AAfD,CAAmC,yBAAa,GAe/C;IAfY,sCAAa","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\nimport { IButtonProps } from '../Button.types';\n\n@customizable('PrimaryButton', ['theme'])\nexport class PrimaryButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Set this BaseComponent._resolveComponentRef to false, bypassing resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render(): JSX.Element {\n    return (\n      <DefaultButton\n        { ...this.props }\n        primary={ true }\n        onRenderDescription={ nullRender }\n      />\n    );\n  }\n}\n"]}