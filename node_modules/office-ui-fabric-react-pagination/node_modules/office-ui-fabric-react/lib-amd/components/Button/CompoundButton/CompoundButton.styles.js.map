{"version":3,"file":"CompoundButton.styles.js","sourceRoot":"../src/","sources":["components/Button/CompoundButton/CompoundButton.styles.ts"],"names":[],"mappings":";;;IAmBa,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa,EACb,YAA4B,EAC5B,OAAiB;QAEjB,IAAM,gBAAgB,GAAkB,6BAAmB,CAAC,KAAK,CAAC,CAAC;QACnE,IAAM,iBAAiB,GAAkB,8BAAoB,CAAC,KAAK,CAAC,CAAC;QACrE,IAAM,oBAAoB,GAAkB;YAC1C,IAAI,EAAE;gBACJ,QAAQ,EAAE,OAAO;gBACjB,SAAS,EAAE,MAAM;gBACjB,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,MAAM;aAChB;YAED,aAAa,EAAE;gBACb,aAAa,EAAE,KAAK;gBACpB,UAAU,EAAE,YAAY;gBACxB,QAAQ,EAAE,MAAM;gBAChB,MAAM,EAAE,EAAE;aACX;YAED,aAAa,EAAE;gBACb,SAAS,EAAE,MAAM;aAClB;YAED,IAAI,EAAE;gBACJ,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,MAAM,EAAE,KAAK;gBACb,MAAM,EAAE,iBAAiB;gBACzB,SAAS,EAAE,KAAK;gBAChB,UAAU,EAAE,GAAG;aAChB;YAED,KAAK,EAAE;gBACL,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,MAAM;gBAClB,UAAU,EAAE,qBAAW,CAAC,QAAQ;aACjC;YACD,WAAW,EAAE;gBACX,KAAK,CAAC,KAAK,CAAC,KAAK;gBACjB;oBACE,UAAU,EAAE,MAAM;iBACnB;aACF;SAEF,CAAC;QAEF,IAAM,qBAAqB,GAAkB;YAE3C,WAAW,EAAE;gBACX,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;aACtC;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;aACjC;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,SAAS;aACjB;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,SAAS;aACjB;YAED,mBAAmB,EAAE;gBACnB,KAAK,EAAE,SAAS;aACjB;SACF,CAAC;QAEF,IAAM,oBAAoB,GAAkB;YAE1C,WAAW,EAAE;gBACX,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK;gBAC1B,SAAS;oBACP,GAAC,8BAAoB,IAAG;wBACtB,KAAK,EAAE,QAAQ;wBACf,eAAe,EAAE,YAAY;wBAC7B,oBAAoB,EAAE,MAAM;qBAC7B;uBACF;aAEF;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK;gBAC1B,SAAS;oBACP,GAAC,8BAAoB,IAAG;wBACtB,KAAK,EAAE,QAAQ;wBACf,eAAe,EAAE,WAAW;wBAC5B,oBAAoB,EAAE,MAAM;qBAC7B;uBACF;aACF;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,SAAS;aACjB;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,SAAS;aACjB;YAED,mBAAmB,EAAE;gBACnB,KAAK,EAAE,SAAS;aACjB;SACF,CAAC;QAEF,OAAO,yBAAe,CACpB,gBAAgB,EAChB,oBAAoB,EACpB,OAAO,CAAC,CAAC,CAAC,4BAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,6BAAc,CAAC,KAAK,CAAC,EACtD,OAAO,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,qBAAqB,EACtD,iBAAiB,EACjB,YAAY,CACZ,CAAC;;IAEL,CAAC,CAAC,CAAC","sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport {\n  ITheme,\n  concatStyleSets,\n  FontWeights,\n  HighContrastSelector\n} from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport {\n  getStyles as getBaseButtonStyles\n} from '../BaseButton.styles';\nimport {\n  getStyles as getSplitButtonStyles\n} from '../SplitButton/SplitButton.styles';\nimport {\n  primaryStyles,\n  standardStyles\n} from '../ButtonThemes';\n\nexport const getStyles = memoizeFunction((\n  theme: ITheme,\n  customStyles?: IButtonStyles,\n  primary?: boolean\n): IButtonStyles => {\n  const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n  const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n  const compoundButtonStyles: IButtonStyles = {\n    root: {\n      maxWidth: '280px',\n      minHeight: '72px',\n      height: 'auto',\n      padding: '20px'\n    },\n\n    flexContainer: {\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      minWidth: '100%',\n      margin: ''\n    },\n\n    textContainer: {\n      textAlign: 'left'\n    },\n\n    icon: {\n      fontSize: '2em',\n      lineHeight: '1em',\n      height: '1em',\n      margin: '0px 8px 0px 0px',\n      flexBasis: '1em',\n      flexShrink: '0'\n    },\n\n    label: {\n      margin: '0 0 5px',\n      lineHeight: '100%',\n      fontWeight: FontWeights.semibold\n    },\n    description: [\n      theme.fonts.small,\n      {\n        lineHeight: '100%'\n      }\n    ],\n\n  };\n\n  const standardCompoundTheme: IButtonStyles = {\n\n    description: {\n      color: theme.palette.neutralSecondary,\n    },\n\n    descriptionHovered: {\n      color: theme.palette.neutralDark\n    },\n\n    descriptionPressed: {\n      color: 'inherit'\n    },\n\n    descriptionChecked: {\n      color: 'inherit'\n    },\n\n    descriptionDisabled: {\n      color: 'inherit'\n    }\n  };\n\n  const primaryCompoundTheme: IButtonStyles = {\n\n    description: {\n      color: theme.palette.white,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          MsHighContrastAdjust: 'none'\n        }\n      }\n\n    },\n\n    descriptionHovered: {\n      color: theme.palette.white,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          MsHighContrastAdjust: 'none'\n        }\n      }\n    },\n\n    descriptionPressed: {\n      color: 'inherit'\n    },\n\n    descriptionChecked: {\n      color: 'inherit'\n    },\n\n    descriptionDisabled: {\n      color: 'inherit'\n    }\n  };\n\n  return concatStyleSets(\n    baseButtonStyles,\n    compoundButtonStyles,\n    primary ? primaryStyles(theme) : standardStyles(theme),\n    primary ? primaryCompoundTheme : standardCompoundTheme,\n    splitButtonStyles,\n    customStyles\n  )!;\n\n});\n"]}