{"version":3,"file":"CompoundButton.js","sourceRoot":"../src/","sources":["components/Button/CompoundButton/CompoundButton.tsx"],"names":[],"mappings":";;;IAOA;QAAoC,0CAA+B;QADnE;YAAA,qEAiBC;YAfC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAY9C,CAAC;QAVQ,+BAAM,GAAb;YACQ,IAAA,eAA+C,EAA7C,eAAe,EAAf,oCAAe,EAAE,kBAAM,EAAE,gBAAK,CAAgB;YACtD,OAAO,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAG,OAAO,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,qBAAqB,EACjF,MAAM,EAAG,iCAAS,CAAC,KAAM,EAAE,MAAM,EAAE,OAAO,CAAC,IAC3C,CACH,CAAC;QACJ,CAAC;QAfU,cAAc;YAD1B,wBAAY,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,CAAC;WAC7B,cAAc,CAgB1B;QAAD,qBAAC;KAAA,AAhBD,CAAoC,yBAAa,GAgBhD;IAhBY,wCAAc","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './CompoundButton.styles';\n\n@customizable('CompoundButton', ['theme'])\nexport class CompoundButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n    return (\n      <BaseButton\n        { ...this.props }\n        variantClassName={ primary ? 'ms-Button--compoundPrimary' : 'ms-Button--compound' }\n        styles={ getStyles(theme!, styles, primary) }\n      />\n    );\n  }\n}\n"]}