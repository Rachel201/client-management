{"version":3,"file":"Button.Split.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, classNamesFunction } from '../../../Utilities';\nimport {\n  getStyles,\n  IButtonBasicExampleStyleProps,\n  IButtonBasicExampleStyles\n} from './Button.Basic.Example.styles';\nimport { DefaultButton, IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { getCustomSplitButtonStyles } from './Button.Split.Example.styles';\n\nconst alertClicked = (): void => {\n  alert('Clicked');\n};\n\nexport class ButtonSplitExample extends React.Component<IButtonProps> {\n\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n\n    const getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\n    const classNames = getClassNames(getStyles);\n\n    return (\n      <div className={ css(classNames.twoup) }>\n        <div>\n          <Label>Standard</Label>\n          <DefaultButton\n            data-automation-id='test'\n            disabled={ disabled }\n            checked={ checked }\n            text='Create account'\n            onClick={ alertClicked }\n            split={ true }\n            splitButtonAriaLabel={ 'See 2 sample options' }\n            style={ { height: '35px' } }\n            menuProps={ {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            } }\n          />\n        </div>\n        <div>\n          <Label>Primary</Label>\n          <DefaultButton\n            primary\n            data-automation-id='test'\n            disabled={ disabled }\n            checked={ checked }\n            text='Create account'\n            onClick={ alertClicked }\n            split={ true }\n            style={ { height: '35px' } }\n            menuProps={ {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            } }\n          />\n        </div>\n        <div>\n          <Label>Primary Action Disabled</Label>\n          <DefaultButton\n            primary\n            data-automation-id='test'\n            disabled={ disabled }\n            primaryDisabled={ true }\n            checked={ checked }\n            text='Create account'\n            onClick={ alertClicked }\n            split={ true }\n            style={ { height: '35px' } }\n            menuProps={ {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            } }\n          />\n        </div>\n        <div>\n          <Label>Button Disabled</Label>\n          <DefaultButton\n            primary\n            data-automation-id='test'\n            disabled={ true }\n            checked={ checked }\n            text='Create account'\n            onClick={ alertClicked }\n            split={ true }\n            style={ { height: '35px' } }\n            menuProps={ {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            } }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps> {\n\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n    const customSplitButtonStyles = getCustomSplitButtonStyles();\n\n    return (\n      <div>\n        <Label>Split button with icon and custom styles</Label>\n        <IconButton\n          data-automation-id='test'\n          disabled={ disabled }\n          checked={ checked }\n          iconProps={ { iconName: 'Upload' } }\n          text='Create account'\n          onClick={ alertClicked }\n          split={ true }\n          styles={ customSplitButtonStyles }\n          menuProps={ {\n            items: [\n              {\n                key: 'emailMessage',\n                name: 'Email message',\n                icon: 'Mail'\n              },\n              {\n                key: 'calendarEvent',\n                name: 'Calendar event',\n                icon: 'Calendar'\n              }\n            ]\n          } }\n        />\n      </div>\n    );\n  }\n}\n"]}