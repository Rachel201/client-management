{"version":3,"file":"Button.Default.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Default.Example.tsx"],"names":[],"mappings":";;;IAUA;QAA0C,gDAAiC;QAA3E;;QAoCA,CAAC;QAnCQ,qCAAM,GAAb;YACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;YAEzC,IAAM,aAAa,GAAG,8BAAkB,EAA4D,CAAC;YACrG,IAAM,UAAU,GAAG,aAAa,CAAC,uCAAS,CAAC,CAAC;YAE5C,OAAO,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,UAAU,CAAC,KAAK,CAAC;gBACpC;oBACE,oBAAC,aAAK,mBAAiB;oBACvB,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAG,QAAQ,EACnB,OAAO,EAAG,OAAO,EACjB,IAAI,EAAC,QAAQ,GACb,CACE;gBACN;oBACE,oBAAC,aAAK,kBAAgB;oBACtB,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,wBACK,MAAM,EACzB,QAAQ,EAAG,QAAQ,EACnB,OAAO,EAAG,OAAO,EACjB,IAAI,EAAC,QAAQ,EACb,OAAO,EAAG,IAAI,CAAC,aAAa,GAC5B,CACE,CACF,CACP,CAAC;QACJ,CAAC;QAEO,4CAAa,GAArB;YACE,KAAK,CAAC,SAAS,CAAC,CAAC;QACnB,CAAC;QACH,2BAAC;IAAD,CAAC,AApCD,CAA0C,KAAK,CAAC,SAAS,GAoCxD;IApCY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport { css, classNamesFunction } from '../../../Utilities';\nimport {\n  getStyles,\n  IButtonBasicExampleStyleProps,\n  IButtonBasicExampleStyles\n} from './Button.Basic.Example.styles';\nimport { DefaultButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\n\nexport class ButtonDefaultExample extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n\n    const getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\n    const classNames = getClassNames(getStyles);\n\n    return (\n      <div className={ css(classNames.twoup) }>\n        <div>\n          <Label>Standard</Label>\n          <DefaultButton\n            data-automation-id='test'\n            disabled={ disabled }\n            checked={ checked }\n            text='Button'\n          />\n        </div>\n        <div>\n          <Label>Primary</Label>\n          <DefaultButton\n            primary={ true }\n            data-automation-id='test'\n            disabled={ disabled }\n            checked={ checked }\n            text='Button'\n            onClick={ this._alertClicked }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _alertClicked(): void {\n    alert('Clicked');\n  }\n}\n"]}