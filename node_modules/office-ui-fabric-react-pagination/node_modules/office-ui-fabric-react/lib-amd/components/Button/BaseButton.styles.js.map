{"version":3,"file":"BaseButton.styles.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":";;;IAUA,IAAM,SAAS,GAAc;QAC3B,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,IAAM,SAAS,GAAG;QAChB,QAAQ,EAAE,mBAAS,CAAC,IAAI;QACxB,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,MAAM;QACd,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,QAAQ;QACnB,aAAa,EAAE,QAAQ;QACvB,UAAU,EAAE,CAAC;KACd,CAAC;IAEF;;;;OAIG;IACU,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa;QAEL,IAAA,qCAAc,CAAW;QAEjC,IAAM,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC;QAC3C,IAAM,kBAAkB,GAAG,cAAc,CAAC,kBAAkB,CAAC;QAC7D,IAAM,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;QACjD,IAAM,uBAAuB,GAAG;YAC9B,IAAI,EAAE,CAAC,CAAC;YACR,GAAG,EAAE,CAAC,CAAC;YACP,MAAM,EAAE,CAAC,CAAC;YACV,KAAK,EAAE,CAAC,CAAC;YACT,MAAM,EAAE,MAAM;YACd,YAAY,EAAE,YAAY;SAC3B,CAAC;QAEF,OAAO;YACL,IAAI,EAAE;gBACJ,uBAAa,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,uBAAuB,CAAC;gBAC7D,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,YAAY,GAAG,MAAM;oBAC7B,UAAU,EAAE,MAAM;oBAClB,OAAO,EAAE,cAAc;oBACvB,cAAc,EAAE,MAAM;oBACtB,SAAS,EAAE,QAAQ;oBACnB,MAAM,EAAE,SAAS;oBACjB,aAAa,EAAE,KAAK;oBACpB,OAAO,EAAE,QAAQ;oBACjB,YAAY,EAAE,CAAC;iBAChB;aACF;YAED,YAAY,EAAE;gBACZ,eAAe,EAAE,kBAAkB;gBACnC,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,SAAS;gBACjB,aAAa,EAAE,MAAM;gBACrB,SAAS,EAAE;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,SAAS;iBACpB;aACF;YAED,YAAY,EAAE;gBACZ,KAAK,EAAE,YAAY;aACpB;YAED,gBAAgB,EAAE;gBAChB,KAAK,EAAE,YAAY;aACpB;YAED,aAAa,EAAE;gBACb,OAAO,EAAE,MAAM;gBACf,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;gBAClB,cAAc,EAAE,QAAQ;gBACxB,UAAU,EAAE,QAAQ;aACrB;YAED,aAAa,EAAE;gBACb,QAAQ,EAAE,CAAC;aACZ;YAED,IAAI,EAAE,SAAS;YAEf,QAAQ,EAAE;gBACR,SAAS;gBACT;oBACE,QAAQ,EAAE,mBAAS,CAAC,KAAK;iBAC1B;aACF;YAED,KAAK,EAAE;gBACL,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE,MAAM;aACnB;YAED,gBAAgB,EAAE,4BAAkB;SACrC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport {\n  ITheme,\n  IRawStyle,\n  getFocusStyle,\n  FontSizes,\n  hiddenContentStyle\n} from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0\n};\n\nconst iconStyle = {\n  fontSize: FontSizes.icon,\n  margin: '0 4px',\n  height: '16px',\n  lineHeight: '16px',\n  textAlign: 'center',\n  verticalAlign: 'middle',\n  flexShrink: 0\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction((\n  theme: ITheme\n): IButtonStyles => {\n  const { semanticColors } = theme;\n\n  const border = semanticColors.buttonBorder;\n  const disabledBackground = semanticColors.disabledBackground;\n  const disabledText = semanticColors.disabledText;\n  const buttonHighContrastFocus = {\n    left: -2,\n    top: -2,\n    bottom: -2,\n    right: -2,\n    border: 'none',\n    outlineColor: 'ButtonText'\n  };\n\n  return {\n    root: [\n      getFocusStyle(theme, -1, 'relative', buttonHighContrastFocus),\n      theme.fonts.medium,\n      {\n        boxSizing: 'border-box',\n        border: '1px solid ' + border,\n        userSelect: 'none',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textAlign: 'center',\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        padding: '0 16px',\n        borderRadius: 0\n      }\n    ],\n\n    rootDisabled: {\n      backgroundColor: disabledBackground,\n      color: disabledText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: {\n        ':hover': noOutline,\n        ':focus': noOutline\n      }\n    },\n\n    iconDisabled: {\n      color: disabledText\n    },\n\n    menuIconDisabled: {\n      color: disabledText\n    },\n\n    flexContainer: {\n      display: 'flex',\n      height: '100%',\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    textContainer: {\n      flexGrow: 1\n    },\n\n    icon: iconStyle,\n\n    menuIcon: [\n      iconStyle,\n      {\n        fontSize: FontSizes.small\n      }\n    ],\n\n    label: {\n      margin: '0 4px',\n      lineHeight: '100%'\n    },\n\n    screenReaderText: hiddenContentStyle\n  };\n});\n"]}