{"version":3,"file":"Keytip.styles.js","sourceRoot":"../src/","sources":["components/Keytip/Keytip.styles.ts"],"names":[],"mappings":";;;IAKa,QAAA,SAAS,GAAG,UAAC,KAAwB;QACxC,IAAA,mBAAK,EAAE,yBAAQ,EAAE,uBAAO,CAAW;QAC3C,OAAO;YACL,SAAS,EAAE;gBACT;oBACE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;iBAC3C;gBACD,QAAQ,IAAI;oBACV,OAAO,EAAE,GAAG;oBACZ,SAAS;wBACP,GAAC,8BAAoB,IAAG;4BACtB,KAAK,EAAE,UAAU;4BACjB,OAAO,EAAE,CAAC;yBACX;2BACF;iBACF;gBACD,CAAC,OAAO,IAAI;oBACV,UAAU,EAAE,QAAQ;iBACrB;aACF;YACD,IAAI,EAAE,CAAC;oBACL,SAAS,EAAE,QAAQ;oBACnB,WAAW,EAAE,KAAK;oBAClB,YAAY,EAAE,KAAK;oBACnB,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;oBAC1C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;oBACjC,QAAQ,EAAE,MAAM;oBAChB,UAAU,EAAE,MAAM;oBAClB,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,cAAc;iBACxB;gBACD,QAAQ,IAAI;oBACV,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,kBAAkB;iBACxC,CAAC;SACH,CAAC;;IACJ,CAAC,CAAC;IAEW,QAAA,gBAAgB,GAAG,UAAC,KAAgC;QAC/D,OAAO;YACL,SAAS,EAAE,EACV;YACD,IAAI,EAAE,CAAC;oBACL,MAAM,EAAE,MAAM;oBACd,SAAS,EAAE,MAAM;iBAClB,CAAC;YACF,IAAI,EAAE,EACL;YACD,WAAW,EAAE,EACZ;YACD,WAAW,EAAE,CAAC;oBACZ,eAAe,EAAE,aAAa;iBAC/B,CAAC;SACH,CAAC;IACJ,CAAC,CAAC;IAEW,QAAA,sBAAsB,GAAG,UAAC,MAAc;QACnD,OAAO,UAAC,KAAgC;YACtC,OAAO,wBAAc,CAAC,wBAAgB,CAAC,KAAK,CAAC,EAAE;gBAC7C,IAAI,EAAE,CAAC;wBACL,UAAU,EAAE,MAAM,CAAC,CAAC;wBACpB,SAAS,EAAE,MAAM,CAAC,CAAC;qBACpB,CAAC;aACH,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import { IKeytipStyleProps, IKeytipStyles } from './Keytip.types';\nimport { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport { IStyleFunction, IPoint } from '../../Utilities';\nimport { mergeStyleSets, HighContrastSelector } from '../../Styling';\n\nexport const getStyles = (props: IKeytipStyleProps): IKeytipStyles => {\n  const { theme, disabled, visible } = props;\n  return {\n    container: [\n      {\n        backgroundColor: theme.palette.neutralDark\n      },\n      disabled && {\n        opacity: 0.5,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1\n          },\n        }\n      },\n      !visible && {\n        visibility: 'hidden'\n      }\n    ],\n    root: [{\n      textAlign: 'center',\n      paddingLeft: '3px',\n      paddingRight: '3px',\n      backgroundColor: theme.palette.neutralDark,\n      color: theme.palette.neutralLight,\n      minWidth: '11px',\n      lineHeight: '17px',\n      height: '17px',\n      display: 'inline-block'\n    },\n    disabled && {\n      color: theme.palette.neutralTertiaryAlt\n    }]\n  };\n};\n\nexport const getCalloutStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  return {\n    container: [\n    ],\n    root: [{\n      border: 'none',\n      boxShadow: 'none'\n    }],\n    beak: [\n    ],\n    beakCurtain: [\n    ],\n    calloutMain: [{\n      backgroundColor: 'transparent'\n    }]\n  };\n};\n\nexport const getCalloutOffsetStyles = (offset: IPoint): IStyleFunction<ICalloutContentStyleProps, ICalloutContentStyles> => {\n  return (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n    return mergeStyleSets(getCalloutStyles(props), {\n      root: [{\n        marginLeft: offset.x,\n        marginTop: offset.y\n      }]\n    });\n  };\n};"]}