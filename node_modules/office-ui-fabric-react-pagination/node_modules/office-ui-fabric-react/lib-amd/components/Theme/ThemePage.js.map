{"version":3,"file":"ThemePage.js","sourceRoot":"../src/","sources":["components/Theme/ThemePage.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport {\n  IPalette,\n  ISemanticColors,\n  loadTheme,\n} from '../../Styling';\nimport {\n  ComponentPage,\n  IComponentDemoPageProps,\n  PageMarkdown,\n} from '@uifabric/example-app-base';\nimport {\n  IThemePageStyleProps,\n  IThemePageStyles,\n  IThemePageState,\n} from './ThemePage.types';\nimport {\n  defaultPalette,\n  defaultSemanticColors,\n} from './defaultTheme';\nimport { getStyles } from './ThemePage.styles';\nimport { Callout } from '../Callout';\nimport { DetailsList, DetailsListLayoutMode } from '../../DetailsList';\nimport { SelectionMode } from '../../Selection';\nimport { ColorPicker } from '../ColorPicker';\n\nconst getClassNames = classNamesFunction<IThemePageStyleProps, IThemePageStyles>();\n\nexport class ThemePage extends React.Component<IComponentDemoPageProps, IThemePageState> {\n  constructor(props: IComponentDemoPageProps) {\n    super(props);\n\n    this._onPickerDismiss = this._onPickerDismiss.bind(this);\n\n    this.state = {\n      palette: defaultPalette,\n      semanticColors: defaultSemanticColors,\n    };\n  }\n\n  public render(): JSX.Element {\n    // Don't mutate state to display lists\n    const palette = [...this.state.palette];\n    const semanticColors = [...this.state.semanticColors];\n    return (\n      <ComponentPage\n        title='Themes'\n        componentName='ThemeExample'\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Theme'\n        overview={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Theme/docs/ThemesOverview.md') }\n          </PageMarkdown>\n        }\n        otherSections={ [\n          {\n            title: 'Default Palette',\n            section: this._colorList(palette, 'palette')\n          },\n          {\n            title: 'Default Semantic Colors',\n            section: this._colorList(semanticColors, 'semanticColors')\n          },\n        ] }\n        isHeaderVisible={ this.props.isHeaderVisible }\n      />\n    );\n  }\n\n  private _colorList = (colors: any, list: 'palette' | 'semanticColors') => {\n    const classNames = getClassNames(getStyles);\n    const { colorPickerProps } = this.state;\n    return (\n      <div>\n        <DetailsList\n          items={ colors }\n          selectionMode={ SelectionMode.none }\n          layoutMode={ DetailsListLayoutMode.fixedColumns }\n          columns={ [\n            {\n              key: 'name',\n              name: 'Name',\n              fieldName: 'name',\n              minWidth: 150,\n              maxWidth: 150\n            },\n            {\n              key: 'color',\n              name: 'Color',\n              fieldName: 'value',\n              minWidth: 200,\n              onRender: (item, index) => (\n                <div\n                  className={ classNames.colorSwatch }\n                  data-is-focusable='true'\n                  onClick={ this._onSwatchClicked.bind(this, item, index, list) }\n                >\n                  <span\n                    className={ classNames.swatch }\n                    style={ { backgroundColor: item.value } }\n                  />\n                  <span className={ classNames.colorValue }>{ item.value }</span>\n                </div>\n              )\n            },\n            {\n              key: 'desc',\n              name: 'Description',\n              fieldName: 'description',\n              minWidth: 90\n            }\n          ] }\n        />\n\n        { colorPickerProps && (\n          <Callout\n            isBeakVisible={ false }\n            gapSpace={ 10 }\n            target={ colorPickerProps.targetElement }\n            onDismiss={ this._onPickerDismiss }\n          >\n\n            <ColorPicker\n              color={ colorPickerProps.value }\n              onColorChanged={ this._onColorChanged.bind(this, colorPickerProps.index) }\n            />\n\n          </Callout>\n        ) }\n\n      </div>\n    );\n  }\n\n  private _onSwatchClicked(item: any, index: number, list: string, ev: React.MouseEvent<HTMLElement>): void {\n    this.setState({\n      colorPickerProps: {\n        targetElement: (ev.currentTarget as HTMLElement).children[0] as HTMLElement,\n        value: item.value,\n        index: index,\n      },\n      activeList: list\n    });\n  }\n\n  private _onColorChanged(index: number, newColor: string): void {\n    const { activeList } = this.state;\n    const partialPalette: Partial<IPalette> = {};\n    const partialSemanticColors: Partial<ISemanticColors> = {};\n\n    if (activeList === 'palette') {\n      const palette = [...this.state.palette];\n      const paletteColor = palette[index];\n      paletteColor.value = newColor;\n      palette[index] = paletteColor;\n      for (let i = 0; i < palette.length; i++) {\n        (palette as any)[palette[i].key] = palette[i].value;\n      }\n    } else if (activeList === 'semanticColors') {\n      const semanticColors = [...this.state.semanticColors];\n      const semanticColor = semanticColors[index];\n      semanticColor.value = newColor;\n      semanticColors[index] = semanticColor;\n      for (let i = 0; i < semanticColors.length; i++) {\n        (semanticColors as any)[semanticColors[i].key] = semanticColors[i].value;\n      }\n    } else {\n      this.setState({ activeList: undefined });\n      return undefined;\n    }\n\n    this.setState({ activeList: undefined });\n    const partialTheme = { ...partialPalette, ...partialSemanticColors };\n\n    loadTheme({ palette: partialTheme });\n  }\n\n  private _onPickerDismiss(): void {\n    this.setState({\n      colorPickerProps: undefined\n    });\n  }\n}\n"]}