{"version":3,"file":"Slider.base.js","sourceRoot":"../src/","sources":["components/Slider/Slider.base.tsx"],"names":[],"mappings":";;;IAaA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAOjC;;MAEE;IACF,IAAY,aAGX;IAHD,WAAY,aAAa;QACvB,yDAAY,CAAA;QACZ,iDAAQ,CAAA;IACV,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;IAED;QAAgC,sCAAyC;QAevE,oBAAY,KAAmB;YAA/B,YACE,kBAAM,KAAK,CAAC,SAcb;YAnBO,iBAAW,GAAG,qBAAS,EAAkB,CAAC;YAC1C,YAAM,GAAG,qBAAS,EAAmB,CAAC;YA6HtC,uBAAiB,GAAG,UAAC,KAAyB;gBACpD,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,IAAI,KAAK,KAAK,SAAS,EAAE;oBACnD,OAAO,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;iBACxC;YACH,CAAC,CAAA;YASO,8BAAwB,GAAG,UAAC,KAA8B;gBAChE,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;oBAC9B,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,KAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;oBACzE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,KAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;iBACrE;qBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,EAAE;oBACtC,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,KAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;oBACzE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,KAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;iBACtE;gBACD,KAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAA;YAEO,6BAAuB,GAAG,UAAC,KAA8B,EAAE,wBAAkC;gBACnG,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE;oBAC7B,OAAO;iBACR;gBAEK,IAAA,gBAA+B,EAA7B,YAAG,EAAE,YAAG,EAAE,cAAI,CAAgB;gBACtC,IAAM,KAAK,GAAW,CAAC,GAAI,GAAG,GAAI,CAAC,GAAG,IAAK,CAAC;gBAC5C,IAAM,kBAAkB,GAAe,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;gBACxF,IAAM,YAAY,GAAW,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC;gBACzG,IAAM,UAAU,GAAW,YAAY,GAAG,KAAK,CAAC;gBAChD,IAAI,YAAgC,CAAC;gBACrC,IAAI,QAA4B,CAAC;gBAEjC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACxB,IAAM,IAAI,GAAuB,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAC/E,QAAQ,GAAG,kBAAM,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,GAAG,IAAK,CAAC,CAAC,CAAC,IAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC;oBACzF,YAAY,GAAG,QAAQ,GAAG,UAAU,CAAC;iBACtC;qBAAM;oBACL,IAAM,MAAM,GAAuB,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACjF,QAAQ,GAAG,kBAAkB,CAAC,MAAM,GAAG,MAAO,CAAC;oBAC/C,YAAY,GAAG,QAAQ,GAAG,UAAU,CAAC;iBACtC;gBAED,IAAI,YAAgC,CAAC;gBACrC,IAAI,aAAiC,CAAC;gBAEtC,iEAAiE;gBACjE,IAAI,YAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACrC,aAAa,GAAG,YAAY,GAAG,GAAa,CAAC;iBAC9C;qBAAM,IAAI,YAAa,GAAG,CAAC,EAAE;oBAC5B,aAAa,GAAG,YAAY,GAAG,GAAa,CAAC;iBAC9C;qBAAM;oBACL,aAAa,GAAG,GAAI,GAAG,IAAK,GAAG,YAAa,CAAC;oBAC7C,YAAY,GAAG,GAAI,GAAG,IAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAa,CAAC,CAAC;iBACzD;gBAED,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;gBAE/C,IAAI,CAAC,wBAAwB,EAAE;oBAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;iBACzB;YACH,CAAC,CAAA;YAiCO,0BAAoB,GAAG;gBAC7B,qDAAqD;gBACrD,KAAI,CAAC,QAAQ,CAAC;oBACZ,aAAa,EAAE,KAAI,CAAC,KAAK,CAAC,KAAK;iBAChC,CAAC,CAAC;gBAEH,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACrB,CAAC,CAAA;YAEO,gBAAU,GAAG,UAAC,KAAoB;gBACxC,IAAI,KAAK,GAAuB,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC3C,IAAA,gBAA+B,EAA7B,YAAG,EAAE,YAAG,EAAE,cAAI,CAAgB;gBAEtC,IAAI,IAAI,GAAuB,CAAC,CAAC;gBAEjC,QAAQ,KAAK,CAAC,KAAK,EAAE;oBACnB,KAAK,6BAAiB,eAAe,CAAC;oBACtC;wBACE,IAAI,GAAG,CAAE,IAAe,CAAC;wBACzB,MAAM;oBACR,KAAK,6BAAiB,gBAAgB,CAAC;oBACvC;wBACE,IAAI,GAAG,IAAI,CAAC;wBACZ,MAAM;oBAER;wBACE,KAAK,GAAG,GAAG,CAAC;wBACZ,MAAM;oBAER;wBACE,KAAK,GAAG,GAAG,CAAC;wBACZ,MAAM;oBAER;wBACE,OAAO;iBACV;gBAED,IAAM,QAAQ,GAAW,IAAI,CAAC,GAAG,CAAC,GAAa,EAAE,IAAI,CAAC,GAAG,CAAC,GAAa,EAAE,KAAM,GAAG,IAAK,CAAC,CAAC,CAAC;gBAE1F,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAEtC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YAC1B,CAAC,CAAA;YArQC,KAAI,CAAC,sBAAsB,CAAC;gBAC1B,OAAO,EAAE,cAAc;aACxB,CAAC,CAAC;YAEH,KAAI,CAAC,GAAG,GAAG,iBAAK,CAAC,QAAQ,CAAC,CAAC;YAE3B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,GAAG,CAAC;YAE7D,KAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,KAAK;gBACZ,aAAa,EAAE,KAAK;aACrB,CAAC;;QACJ,CAAC;QAED;;WAEG;QACI,8CAAyB,GAAhC,UAAiC,QAAsB;YAErD,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE;gBAChC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAa,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAa,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEjG,IAAI,CAAC,QAAQ,CAAC;oBACZ,KAAK,EAAE,KAAK;oBACZ,aAAa,EAAE,KAAK;iBACrB,CAAC,CAAC;aACJ;QACH,CAAC;QAEM,2BAAM,GAAb;YACQ,IAAA,eAUQ,EATZ,wBAAS,EACT,wBAAS,EACT,sBAAQ,EACR,gBAAK,EACL,YAAG,EACH,YAAG,EACH,wBAAS,EACT,4BAAW,EACX,sBAAQ,CACK;YACT,IAAA,eAAqC,EAAnC,gBAAK,EAAE,gCAAa,CAAgB;YAC5C,IAAM,kBAAkB,GAAW,CAAC,aAAc,GAAG,GAAI,CAAC,GAAG,CAAC,GAAI,GAAG,GAAI,CAAC,GAAG,GAAG,CAAC;YACjF,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;YACnD,IAAM,eAAe,GAAO,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAC3F,IAAM,gBAAgB,GAAO,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAC7F,IAAM,aAAa,GAAO,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YAEzE,OAAO,CACL,6BACE,SAAS,EAAG,eAAG,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS;oBACjD,GAAC,oBAAoB,GAAG,MAAM,CAAC,aAAa,IAAG,CAAC,QAAQ;oBACxD,GAAC,qBAAqB,GAAG,MAAM,CAAC,cAAc,IAAG,QAAQ;oBACzD,GAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAG,CAAC,QAAQ;oBACvD,GAAC,mBAAmB,GAAG,MAAM,CAAC,cAAc,IAAG,QAAQ;wBACvD;gBAEA,KAAK,IAAI,CACT,oBAAC,aAAK,qBAAC,SAAS,EAAG,MAAM,CAAC,UAAU,IAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,GAChF,KAAK,CACD,CACT;gBACD,6BAAK,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,SAAS,CAAC;oBAC3D,kEACkB,KAAK,mBACL,GAAG,mBACH,GAAG,oBACF,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,gBACjC,SAAS,IAAI,KAAK,IAC1B,eAAe,EACf,gBAAgB,EAChB,aAAa,EACb,WAAW,IAChB,SAAS,EAAG,eAAG,CACb,oBAAoB,EACpB,MAAM,CAAC,QAAQ,EACf,WAAY,CAAC,SAAS,EACtB,CAAC,CAAC,SAAS,IAAI,qBAAqB,EACpC,CAAC,aAAa,KAAK,KAAK,CAAC,IAAI,CAAC,4BAA4B,GAAG,MAAM,CAAC,eAAe,CAAC,CACrF,EACD,EAAE,EAAG,IAAI,CAAC,GAAG,EACb,QAAQ,EAAG,QAAQ,EACnB,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,QAAQ;wBAEb,6BACE,GAAG,EAAG,IAAI,CAAC,WAAW,EACtB,SAAS,EAAG,eAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC;4BAE9C,8BACE,GAAG,EAAG,IAAI,CAAC,MAAM,EACjB,SAAS,EAAG,eAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC,KAAK,CAAC,EAChD,KAAK,EAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,kBAAkB,CAAC,GACzD;4BACF,8BACE,SAAS,EAAG,eAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,aAAa,CAAC,EAC/E,KAAK,YAAK,GAAC,YAAY,IAAG,kBAAkB,GAAG,GAAG,QAClD;4BACF,8BACE,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,eAAe,CAAC,EACnF,KAAK,YAAK,GAAC,YAAY,IAAG,CAAC,GAAG,GAAG,kBAAkB,CAAC,GAAG,GAAG,QAC1D,CACE,CACC;oBACP,SAAS,IAAI,oBAAC,aAAK,IAAC,SAAS,EAAG,eAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC,UAAU,CAAC,IAAK,KAAK,CAAU,CAC3F,CACF,CACmB,CAAC;;QAC9B,CAAC;QACM,0BAAK,GAAZ;YACE,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aAC7B;QACH,CAAC;QAED,sBAAW,6BAAK;iBAAhB;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC1B,CAAC;;;WAAA;QAQO,mCAAc,GAAtB,UAAuB,QAA6B,EAAE,kBAA0B;YAC9E,IAAM,SAAS,GAAW,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,kBAAM,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC9E;gBACE,GAAC,SAAS,IAAG,kBAAkB,GAAG,GAAG;mBACrC;;QACJ,CAAC;QAyDO,iCAAY,GAApB,UAAqB,KAA8B,EAAE,QAA6B;YAChF,IAAI,eAAmC,CAAC;YACxC,QAAQ,KAAK,CAAC,IAAI,EAAE;gBAClB,KAAK,WAAW,CAAC;gBACjB,KAAK,WAAW;oBACd,eAAe,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAE,KAAoB,CAAC,OAAO,CAAC,CAAC,CAAE,KAAoB,CAAC,OAAO,CAAC;oBAC5F,MAAM;gBACR,KAAK,YAAY,CAAC;gBAClB,KAAK,WAAW;oBACd,eAAe,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAE,KAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAE,KAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;oBAClH,MAAM;aACT;YACD,OAAO,eAAe,CAAC;QACzB,CAAC;QACO,iCAAY,GAApB,UAAqB,KAAa,EAAE,aAAqB;YAAzD,iBAeC;YAdC,IAAM,QAAQ,GAAW,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAK,CAAC;YAChD,yGAAyG;YACzG,IAAM,YAAY,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC;YAErE,IAAM,YAAY,GAAG,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAEvD,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE,YAAY;gBACnB,aAAa,eAAA;aACd,EAAE;gBACD,IAAI,YAAY,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACvC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,KAAe,CAAC,CAAC;iBACjD;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAzOa,uBAAY,GAAiB;YACzC,IAAI,EAAE,CAAC;YACP,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,EAAE;SAChB,CAAC;QA+QJ,iBAAC;KAAA,AAxRD,CAAgC,yBAAa,GAwR5C;IAxRY,gCAAU","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  createRef\n} from '../../Utilities';\nimport { ISliderProps, ISlider } from './Slider.types';\nimport { Label } from '../../Label';\nimport * as stylesImport from './Slider.scss';\nconst styles: any = stylesImport;\n\nexport interface ISliderState {\n  value?: number;\n  renderedValue?: number;\n}\n\n/**\n * @deprecated Unused.\n*/\nexport enum ValuePosition {\n  Previous = 0,\n  Next = 1\n}\n\nexport class SliderBase extends BaseComponent<ISliderProps, ISliderState> implements ISlider {\n  public static defaultProps: ISliderProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {}\n  };\n\n  private _sliderLine = createRef<HTMLDivElement>();\n  private _thumb = createRef<HTMLSpanElement>();\n  private _id: string;\n\n  constructor(props: ISliderProps) {\n    super(props);\n\n    this._warnMutuallyExclusive({\n      'value': 'defaultValue'\n    });\n\n    this._id = getId('Slider');\n\n    const value = props.value || props.defaultValue || props.min;\n\n    this.state = {\n      value: value,\n      renderedValue: value\n    };\n  }\n\n  /**\n   * Invoked when a component is receiving new props. This method is not called for the initial render.\n   */\n  public componentWillReceiveProps(newProps: ISliderProps): void {\n\n    if (newProps.value !== undefined) {\n      const value = Math.max(newProps.min as number, Math.min(newProps.max as number, newProps.value));\n\n      this.setState({\n        value: value,\n        renderedValue: value\n      });\n    }\n  }\n\n  public render(): React.ReactElement<{}> {\n    const {\n      ariaLabel,\n      className,\n      disabled,\n      label,\n      max,\n      min,\n      showValue,\n      buttonProps,\n      vertical\n    } = this.props;\n    const { value, renderedValue } = this.state;\n    const thumbOffsetPercent: number = (renderedValue! - min!) / (max! - min!) * 100;\n    const lengthString = vertical ? 'height' : 'width';\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\n\n    return (\n      <div\n        className={ css('ms-Slider', styles.root, className, {\n          ['ms-Slider-enabled ' + styles.rootIsEnabled]: !disabled,\n          ['ms-Slider-disabled ' + styles.rootIsDisabled]: disabled,\n          ['ms-Slider-row ' + styles.rootIsHorizontal]: !vertical,\n          ['ms-Slider-column ' + styles.rootIsVertical]: vertical\n        }) }\n      >\n        { label && (\n          <Label className={ styles.titleLabel } { ...ariaLabel ? {} : { 'htmlFor': this._id } }>\n            { label }\n          </Label>\n        ) }\n        <div className={ css('ms-Slider-container', styles.container) }>\n          <button\n            aria-valuenow={ value }\n            aria-valuemin={ min }\n            aria-valuemax={ max }\n            aria-valuetext={ this._getAriaValueText(value) }\n            aria-label={ ariaLabel || label }\n            { ...onMouseDownProp }\n            { ...onTouchStartProp }\n            { ...onKeyDownProp }\n            { ...buttonProps }\n            className={ css(\n              'ms-Slider-slideBox',\n              styles.slideBox,\n              buttonProps!.className,\n              !!showValue && 'ms-Slider-showValue',\n              (renderedValue === value) && ('ms-Slider-showTransitions ' + styles.showTransitions)\n            ) }\n            id={ this._id }\n            disabled={ disabled }\n            type='button'\n            role='slider'\n          >\n            <div\n              ref={ this._sliderLine }\n              className={ css('ms-Slider-line', styles.line) }\n            >\n              <span\n                ref={ this._thumb }\n                className={ css('ms-Slider-thumb', styles.thumb) }\n                style={ this._getThumbStyle(vertical, thumbOffsetPercent) }\n              />\n              <span\n                className={ css('ms-Slider-active', styles.lineContainer, styles.activeSection) }\n                style={ { [lengthString]: thumbOffsetPercent + '%' } }\n              />\n              <span\n                className={ css('ms-Slider-inactive', styles.lineContainer, styles.inactiveSection) }\n                style={ { [lengthString]: (100 - thumbOffsetPercent) + '%' } }\n              />\n            </div>\n          </button>\n          { showValue && <Label className={ css('ms-Slider-value', styles.valueLabel) }>{ value }</Label> }\n        </div>\n      </div>\n    ) as React.ReactElement<{}>;\n  }\n  public focus(): void {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  }\n\n  public get value(): number | undefined {\n    return this.state.value;\n  }\n\n  private _getAriaValueText = (value: number | undefined): string | undefined => {\n    if (this.props.ariaValueText && value !== undefined) {\n      return this.props.ariaValueText(value);\n    }\n  }\n\n  private _getThumbStyle(vertical: boolean | undefined, thumbOffsetPercent: number): any {\n    const direction: string = vertical ? 'bottom' : (getRTL() ? 'right' : 'left');\n    return {\n      [direction]: thumbOffsetPercent + '%'\n    };\n  }\n\n  private _onMouseDownOrTouchStart = (event: MouseEvent | TouchEvent): void => {\n    if (event.type === 'mousedown') {\n      this._events.on(window, 'mousemove', this._onMouseMoveOrTouchMove, true);\n      this._events.on(window, 'mouseup', this._onMouseUpOrTouchEnd, true);\n    } else if (event.type === 'touchstart') {\n      this._events.on(window, 'touchmove', this._onMouseMoveOrTouchMove, true);\n      this._events.on(window, 'touchend', this._onMouseUpOrTouchEnd, true);\n    }\n    this._onMouseMoveOrTouchMove(event, true);\n  }\n\n  private _onMouseMoveOrTouchMove = (event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void => {\n    if (!this._sliderLine.current) {\n      return;\n    }\n\n    const { max, min, step } = this.props;\n    const steps: number = (max! - min!) / step!;\n    const sliderPositionRect: ClientRect = this._sliderLine.current.getBoundingClientRect();\n    const sliderLength: number = !this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number | undefined;\n    let distance: number | undefined;\n\n    if (!this.props.vertical) {\n      const left: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = getRTL() ? sliderPositionRect.right - left! : left! - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = sliderPositionRect.bottom - bottom!;\n      currentSteps = distance / stepLength;\n    }\n\n    let currentValue: number | undefined;\n    let renderedValue: number | undefined;\n\n    // The value shouldn't be bigger than max or be smaller than min.\n    if (currentSteps! > Math.floor(steps)) {\n      renderedValue = currentValue = max as number;\n    } else if (currentSteps! < 0) {\n      renderedValue = currentValue = min as number;\n    } else {\n      renderedValue = min! + step! * currentSteps!;\n      currentValue = min! + step! * Math.round(currentSteps!);\n    }\n\n    this._updateValue(currentValue, renderedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  private _getPosition(event: MouseEvent | TouchEvent, vertical: boolean | undefined): number | undefined {\n    let currentPosition: number | undefined;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical ? (event as TouchEvent).touches[0].clientX : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  }\n  private _updateValue(value: number, renderedValue: number): void {\n    const interval: number = 1.0 / this.props.step!;\n    // Make sure value has correct number of decimal places based on steps without JS's floating point issues\n    const roundedValue: number = Math.round(value * interval) / interval;\n\n    const valueChanged = roundedValue !== this.state.value;\n\n    this.setState({\n      value: roundedValue,\n      renderedValue\n    }, () => {\n      if (valueChanged && this.props.onChange) {\n        this.props.onChange(this.state.value as number);\n      }\n    });\n  }\n\n  private _onMouseUpOrTouchEnd = (): void => {\n    // Synchronize the renderedValue to the actual value.\n    this.setState({\n      renderedValue: this.state.value\n    });\n\n    this._events.off();\n  }\n\n  private _onKeyDown = (event: KeyboardEvent): void => {\n    let value: number | undefined = this.state.value;\n    const { max, min, step } = this.props;\n\n    let diff: number | undefined = 0;\n\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left):\n      case KeyCodes.down:\n        diff = -(step as number);\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right):\n      case KeyCodes.up:\n        diff = step;\n        break;\n\n      case KeyCodes.home:\n        value = min;\n        break;\n\n      case KeyCodes.end:\n        value = max;\n        break;\n\n      default:\n        return;\n    }\n\n    const newValue: number = Math.min(max as number, Math.max(min as number, value! + diff!));\n\n    this._updateValue(newValue, newValue);\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n"]}