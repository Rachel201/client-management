{"version":3,"file":"DatePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Basic.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,gBAAgB,GAAuB;QAC3C,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE;YACX,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN;QAED,IAAI,EAAE;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,WAAW;YACX,UAAU;YACV,QAAQ;YACR,UAAU;SACX;QAED,SAAS,EAAE;YACT,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ;QAED,SAAS,EAAE,aAAa;QACxB,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,kBAAkB;QACtC,iBAAiB,EAAE,qBAAqB;QACxC,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IAMF;QAA4C,kDAAiD;QAC3F,gCAAmB,KAAS;YAA5B,YACE,kBAAM,KAAK,CAAC,SAKb;YAsDO,wBAAkB,GAAG,UAAC,MAAuB;gBACnD,KAAI,CAAC,QAAQ,CAAC;oBACZ,cAAc,EAAG,sBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;iBAC/C,CAAC,CAAC;YACL,CAAC,CAAA;YA7DC,KAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,sBAAS,CAAC,MAAM;aACjC,CAAC;;QACJ,CAAC;QAEM,uCAAM,GAAb;YACU,IAAA,0CAAc,CAAgB;YAEtC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;gBACrC,oBAAC,uBAAU,IACT,cAAc,EAAG,cAAc,EAC/B,OAAO,EAAG,gBAAgB,EAC1B,WAAW,EAAC,kBAAkB;oBAC9B,+BAA+B;oBAC/B,kBAAkB,EAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAxC,CAAwC,GAEnE;gBACF,oBAAC,mBAAQ,IACP,KAAK,EAAC,kCAAkC,EACxC,OAAO,EAAG;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,SAAS;4BACf,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,OAAO,CAAC;yBAClC;wBACD;4BACE,IAAI,EAAE,WAAW;4BACjB,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,SAAS,CAAC;yBACpC;wBACD;4BACE,IAAI,EAAE,UAAU;4BAChB,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,QAAQ,CAAC;yBACnC;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,UAAU;4BAChB,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,QAAQ,CAAC;yBACnC;qBACF,EACD,WAAW,EAAG,sBAAS,CAAC,cAAe,CAAC,EACxC,SAAS,EAAG,IAAI,CAAC,kBAAkB,GACnC,CACE,CACP,CAAC;QACJ,CAAC;QAOH,6BAAC;IAAD,CAAC,AAlED,CAA4C,KAAK,CAAC,SAAS,GAkE1D;IAlEY,wDAAsB","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\nimport './DatePicker.Examples.scss';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year'\n};\n\nexport interface IDatePickerBasicExampleState {\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class DatePickerBasicExample extends React.Component<{}, IDatePickerBasicExampleState> {\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday\n    };\n  }\n\n  public render() {\n    const { firstDayOfWeek } = this.state;\n\n    return (\n      <div className='docs-DatePickerExample'>\n        <DatePicker\n          firstDayOfWeek={ firstDayOfWeek }\n          strings={ DayPickerStrings }\n          placeholder='Select a date...'\n          // tslint:disable:jsx-no-lambda\n          onAfterMenuDismiss={ () => console.log('onAfterMenuDismiss called') }\n        // tslint:enable:jsx-no-lambda\n        />\n        <Dropdown\n          label='Select the first day of the week'\n          options={ [\n            {\n              text: 'Sunday',\n              key: DayOfWeek[DayOfWeek.Sunday]\n            },\n            {\n              text: 'Monday',\n              key: DayOfWeek[DayOfWeek.Monday]\n            },\n            {\n              text: 'Tuesday',\n              key: DayOfWeek[DayOfWeek.Tuesday]\n            },\n            {\n              text: 'Wednesday',\n              key: DayOfWeek[DayOfWeek.Wednesday]\n            },\n            {\n              text: 'Thursday',\n              key: DayOfWeek[DayOfWeek.Thursday]\n            },\n            {\n              text: 'Friday',\n              key: DayOfWeek[DayOfWeek.Friday]\n            },\n            {\n              text: 'Saturday',\n              key: DayOfWeek[DayOfWeek.Saturday]\n            }\n          ] }\n          selectedKey={ DayOfWeek[firstDayOfWeek!] }\n          onChanged={ this._onDropdownChanged }\n        />\n      </div>\n    );\n  }\n\n  private _onDropdownChanged = (option: IDropdownOption): void => {\n    this.setState({\n      firstDayOfWeek: (DayOfWeek as any)[option.key]\n    });\n  }\n}\n"]}