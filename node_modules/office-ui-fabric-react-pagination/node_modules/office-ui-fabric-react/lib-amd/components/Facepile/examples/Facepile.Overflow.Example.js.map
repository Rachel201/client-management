{"version":3,"file":"Facepile.Overflow.Example.js","sourceRoot":"../src/","sources":["components/Facepile/examples/Facepile.Overflow.Example.tsx"],"names":[],"mappings":";;;IAWA,IAAM,aAAa,GAAmB;QACpC,QAAQ,EAAE,sCAAgB;QAC1B,sBAAsB,EAAE,CAAC;QACzB,kBAAkB,EAAE,6BAAkB,CAAC,SAAS;QAChD,mBAAmB,EAAE;YACnB,SAAS,EAAE,YAAY;YACvB,OAAO,EAAE,UAAC,EAAuC;gBAC/C,OAAA,KAAK,CAAC,uBAAuB,CAAC;YAA9B,CAA8B;SACjC;QACD,eAAe,EAAE,0DAA0D;KAC5E,CAAC;IAOF;QAA6C,mDAAkD;QAE7F,iCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAMb;YAuCO,4BAAsB,GAAG,UAAC,KAAa;gBAC7C,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAwC;oBACrD,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBACpC,OAAO,SAAS,CAAC;gBACnB,CAAC,CAAC,CAAC;YACL,CAAC,CAAA;YAEO,mBAAa,GAAG,UAAC,KAAsB;gBAC7C,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAwC;oBACrD,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC,GAAyB,CAAC;oBAC/D,OAAO,SAAS,CAAC;gBACnB,CAAC,CAAC,CAAC;YACL,CAAC,CAAA;YAvDC,KAAI,CAAC,KAAK,GAAG;gBACX,iBAAiB,EAAE,CAAC;gBACpB,kBAAkB,EAAE,6BAAkB,CAAC,IAAI;aAC5C,CAAC;;QACJ,CAAC;QAEM,wCAAM,GAAb;YACQ,IAAA,eAAsD,EAApD,wCAAiB,EAAE,0CAAkB,CAAgB;YAC7D,aAAa,CAAC,sBAAsB,GAAG,iBAAiB,CAAC;YACzD,aAAa,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAEtD,OAAO,CACL,6BAAK,SAAS,EAAG,oBAAoB;gBACnC,oBAAC,mBAAQ,uBAAM,aAAa,EAAK;gBACjC,6BAAK,SAAS,EAAG,SAAS;oBACxB,oBAAC,eAAM,IACL,KAAK,EAAC,qBAAqB,EAC3B,GAAG,EAAG,CAAC,EACP,GAAG,EAAG,CAAC,EACP,IAAI,EAAG,CAAC,EACR,SAAS,EAAG,IAAI,EAChB,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EACpC,QAAQ,EAAG,IAAI,CAAC,sBAAsB,GACtC;oBACF,oBAAC,mBAAQ,IACP,KAAK,EAAC,uBAAuB,EAC7B,WAAW,EAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC3C,OAAO,EACL;4BACE,EAAE,GAAG,EAAE,6BAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,IAAI,CAAC,EAAE;4BACnF,EAAE,GAAG,EAAE,6BAAkB,CAAC,WAAW,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,WAAW,CAAC,EAAE;4BACjG,EAAE,GAAG,EAAE,6BAAkB,CAAC,SAAS,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,SAAS,CAAC,EAAE;4BAC7F,EAAE,GAAG,EAAE,6BAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,IAAI,CAAC,EAAE;yBACpF,EAEH,SAAS,EAAG,IAAI,CAAC,aAAa,GAE9B,CACE,CACF,CACP,CAAC;QACJ,CAAC;QAeH,8BAAC;IAAD,CAAC,AA7DD,CAA6C,KAAK,CAAC,SAAS,GA6D3D;IA7DY,0DAAuB","sourcesContent":["import * as React from 'react';\nimport {\n  IFacepileProps,\n  Facepile,\n  OverflowButtonType,\n} from 'office-ui-fabric-react/lib/Facepile';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { facepilePersonas } from './FacepileExampleData';\nimport './Facepile.Examples.scss';\n\nconst facepileProps: IFacepileProps = {\n  personas: facepilePersonas,\n  maxDisplayablePersonas: 5,\n  overflowButtonType: OverflowButtonType.downArrow,\n  overflowButtonProps: {\n    ariaLabel: 'More users',\n    onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\n      alert('overflow icon clicked')\n  },\n  ariaDescription: 'To move through the items use left and right arrow keys.'\n};\n\nexport interface IFacepileOverflowExampleState {\n  displayedPersonas: any;\n  overflowButtonType: OverflowButtonType;\n}\n\nexport class FacepileOverflowExample extends React.Component<{}, IFacepileOverflowExampleState> {\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      displayedPersonas: 5,\n      overflowButtonType: OverflowButtonType.none\n    };\n  }\n\n  public render(): JSX.Element {\n    const { displayedPersonas, overflowButtonType } = this.state;\n    facepileProps.maxDisplayablePersonas = displayedPersonas;\n    facepileProps.overflowButtonType = overflowButtonType;\n\n    return (\n      <div className={ 'ms-FacepileExample' }>\n        <Facepile { ...facepileProps } />\n        <div className={ 'control' }>\n          <Slider\n            label='Number of Personas:'\n            min={ 1 }\n            max={ 5 }\n            step={ 1 }\n            showValue={ true }\n            value={ this.state.displayedPersonas }\n            onChange={ this._onChangePersonaNumber }\n          />\n          <Dropdown\n            label='Overflow Button Type:'\n            selectedKey={ this.state.overflowButtonType }\n            options={\n              [\n                { key: OverflowButtonType.none, text: OverflowButtonType[OverflowButtonType.none] },\n                { key: OverflowButtonType.descriptive, text: OverflowButtonType[OverflowButtonType.descriptive] },\n                { key: OverflowButtonType.downArrow, text: OverflowButtonType[OverflowButtonType.downArrow] },\n                { key: OverflowButtonType.more, text: OverflowButtonType[OverflowButtonType.more] },\n              ]\n            }\n            onChanged={ this._onChangeType\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onChangePersonaNumber = (value: number): void => {\n    this.setState((prevState: IFacepileOverflowExampleState): IFacepileOverflowExampleState => {\n      prevState.displayedPersonas = value;\n      return prevState;\n    });\n  }\n\n  private _onChangeType = (value: IDropdownOption): void => {\n    this.setState((prevState: IFacepileOverflowExampleState): IFacepileOverflowExampleState => {\n      prevState.overflowButtonType = value.key as OverflowButtonType;\n      return prevState;\n    });\n  }\n}"]}