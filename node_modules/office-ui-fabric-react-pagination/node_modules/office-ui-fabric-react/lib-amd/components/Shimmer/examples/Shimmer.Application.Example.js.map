{"version":3,"file":"Shimmer.Application.Example.js","sourceRoot":"../src/","sources":["components/Shimmer/examples/Shimmer.Application.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\nimport { createListItems } from '@uifabric/example-app-base/lib/utilities/data';\nimport { IColumn, buildColumns, SelectionMode, Toggle } from 'office-ui-fabric-react/lib/index';\nimport { ShimmeredDetailsList } from 'office-ui-fabric-react/lib/ShimmeredDetailsList';\n\nimport * as ShimmerExampleStyles from './Shimmer.Example.scss';\n\nexport interface IItem {\n  [index: string]: string | number;\n  thumbnail: string;\n  key: string;\n  name: string;\n  description: string;\n  color: string;\n  shape: string;\n  location: string;\n  width: number;\n  height: number;\n}\n\nconst fileIcons: { name: string }[] = [\n  { name: 'accdb' },\n  { name: 'csv' },\n  { name: 'docx' },\n  { name: 'dotx' },\n  { name: 'mpp' },\n  { name: 'mpt' },\n  { name: 'odp' },\n  { name: 'ods' },\n  { name: 'odt' },\n  { name: 'one' },\n  { name: 'onepkg' },\n  { name: 'onetoc' },\n  { name: 'potx' },\n  { name: 'ppsx' },\n  { name: 'pptx' },\n  { name: 'pub' },\n  { name: 'vsdx' },\n  { name: 'vssx' },\n  { name: 'vstx' },\n  { name: 'xls' },\n  { name: 'xlsx' },\n  { name: 'xltx' },\n  { name: 'xsn' }\n];\n\nconst ITEMS_COUNT = 500;\nconst INTERVAL_DELAY = 2500;\n\n// tslint:disable-next-line:no-any\nlet _items: any[];\n\nexport interface IShimmerApplicationExampleState {\n  items?: IItem[];\n  columns?: IColumn[];\n  isDataLoaded?: boolean;\n  isModalSelection?: boolean;\n  isCompactMode?: boolean;\n}\n\nexport class ShimmerApplicationExample extends BaseComponent<{}, IShimmerApplicationExampleState> {\n  private _lastIntervalId: number;\n  private _lastIndexWithData: number;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      items: new Array(),\n      columns: _buildColumns(),\n      isDataLoaded: false,\n      isModalSelection: false,\n      isCompactMode: false\n    };\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { items, columns, isDataLoaded, isModalSelection, isCompactMode } = this.state;\n\n    return (\n      <div>\n        <div className={ ShimmerExampleStyles.shimmerExampleFlexGroup }>\n          <Toggle\n            label='Enable Modal Selection'\n            checked={ isModalSelection }\n            onChanged={ this._onChangeModalSelection }\n            onText='Modal'\n            offText='Normal'\n          />\n          <Toggle\n            label='Enable Compact Mode'\n            checked={ isCompactMode }\n            onChanged={ this._onChangeCompactMode }\n            onText='Compact'\n            offText='Normal'\n          />\n          <Toggle\n            label='Enable content loading'\n            checked={ isDataLoaded }\n            onChanged={ this._onLoadData }\n            onText='Content'\n            offText='Shimmer'\n          />\n        </div>\n        <div>\n          <ShimmeredDetailsList\n            setKey='items'\n            items={ items! }\n            columns={ columns }\n            compact={ isCompactMode }\n            selectionMode={ this.state.isModalSelection ? SelectionMode.multiple : SelectionMode.none }\n            onRenderItemColumn={ this._onRenderItemColumn }\n            enableShimmer={ !isDataLoaded }\n            listProps={ { renderedWindowsAhead: 0, renderedWindowsBehind: 0 } }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _loadData = (): void => {\n    this._lastIntervalId = this._async.setInterval(() => {\n      const randomQuantity: number = Math.floor(Math.random() * 10) + 1;\n      // tslint:disable-next-line:no-any\n      const itemsCopy = ([] as any[]).concat(this.state.items);\n      itemsCopy.splice.apply(\n        itemsCopy,\n        [this._lastIndexWithData, randomQuantity].concat(\n          _items.slice(this._lastIndexWithData, this._lastIndexWithData + randomQuantity)\n        )\n      );\n      this._lastIndexWithData += randomQuantity;\n      this.setState({\n        items: itemsCopy\n      });\n    }, INTERVAL_DELAY);\n  }\n\n  private _onLoadData = (checked: boolean): void => {\n    if (!_items) {\n      _items = createListItems(ITEMS_COUNT);\n      _items.map((item: IItem) => {\n        const randomFileType = this._randomFileIcon();\n        item.thumbnail = randomFileType.url;\n      });\n    }\n\n    let items: IItem[];\n    const randomQuantity: number = Math.floor(Math.random() * 10) + 1;\n    if (checked) {\n      items = _items.slice(0, randomQuantity).concat(new Array(ITEMS_COUNT - randomQuantity));\n      this._lastIndexWithData = randomQuantity;\n      this._loadData();\n    } else {\n      items = new Array();\n      this._async.clearInterval(this._lastIntervalId);\n    }\n    this.setState({\n      isDataLoaded: checked,\n      items: items\n    });\n  }\n\n  private _onChangeModalSelection = (checked: boolean): void => {\n    this.setState({ isModalSelection: checked });\n  }\n\n  private _onChangeCompactMode = (checked: boolean): void => {\n    this.setState({ isCompactMode: checked });\n  }\n\n  private _onRenderItemColumn = (item: IItem, index: number, column: IColumn): JSX.Element | string | number => {\n    if (column.key === 'thumbnail') {\n      return <img src={ item.thumbnail } />;\n    }\n\n    return item[column.key];\n  }\n\n  private _randomFileIcon(): { docType: string; url: string } {\n    const docType: string = fileIcons[Math.floor(Math.random() * fileIcons.length) + 0].name;\n    return {\n      docType,\n      url: `https://static2.sharepointonline.com/files/fabric/assets/brand-icons/document/svg/${docType}_16x1.svg`\n    };\n  }\n}\n\nfunction _buildColumns(): IColumn[] {\n  const _item = createListItems(1);\n  const columns: IColumn[] = buildColumns(_item);\n\n  columns.forEach((column: IColumn) => {\n    if (column.key === 'thumbnail') {\n      column.name = 'FileType';\n      column.minWidth = 16;\n      column.maxWidth = 16;\n      column.isIconOnly = true;\n      column.iconName = 'Page';\n    }\n  });\n  return columns;\n}\n"]}