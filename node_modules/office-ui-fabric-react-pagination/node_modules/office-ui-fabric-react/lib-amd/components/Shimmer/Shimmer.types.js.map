{"version":3,"file":"Shimmer.types.js","sourceRoot":"../src/","sources":["components/Shimmer/Shimmer.types.ts"],"names":[],"mappings":";;;IA0IA,IAAY,kBAeX;IAfD,WAAY,kBAAkB;QAC5B;;WAEG;QACH,2DAAQ,CAAA;QAER;;WAEG;QACH,+DAAU,CAAA;QAEV;;WAEG;QACH,yDAAO,CAAA;IACT,CAAC,EAfW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAe7B;IAED,IAAY,6BAeX;IAfD,WAAY,6BAA6B;QACvC;;WAEG;QACH,kFAAS,CAAA;QAET;;WAEG;QACH,gFAAQ,CAAA;QAER;;WAEG;QACH,sFAAW,CAAA;IACb,CAAC,EAfW,6BAA6B,GAA7B,qCAA6B,KAA7B,qCAA6B,QAexC","sourcesContent":["import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunction } from '../../Utilities';\n\nexport interface IShimmer { }\n\n/**\n * Shimmer component props.\n */\nexport interface IShimmerProps extends React.AllHTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IShimmer interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IShimmer | null) => void;\n\n  /**\n   * Sets the width value of the shimmer wave wrapper.\n   * @default 100%\n   */\n  width?: number | string;\n\n  /**\n   * Controls when the shimmer is swapped with actual data through an animated transition.\n   * @default false\n   */\n  isDataLoaded?: boolean;\n\n  /**\n   * Elements to render in one line of the Shimmer.\n   */\n  shimmerElements?: IShimmerElement[];\n\n  /**\n   * Custom elements when necessary to build complex placeholder skeletons.\n   */\n  customElementsGroup?: React.ReactNode;\n\n  /**\n   * Localized string of the status label for screen reader\n   */\n  ariaLabel?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  getStyles?: IStyleFunction<IShimmerStyleProps, IShimmerStyles>;\n\n  /**\n   * Additional CSS class(es) to apply to the Shimmer container.\n   */\n  className?: string;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n}\n\n/**\n * Shimmer Elements Interface\n */\nexport interface IShimmerElement {\n  /**\n   * Required for every element you intend to use.\n   */\n  type: ShimmerElementType;\n\n  /**\n   * The height of the element (ICircle, ILine, IGap) in pixels.\n   * Read more details for each specific element.\n   */\n  height?: number;\n\n  /**\n   * The width value of the element (ILine, IGap) in pixels.\n   * Read more details for each specific element.\n   */\n  width?: number | string;\n\n  /**\n   * The vertical alignemt of the element (ICircle, ILine).\n   * @default center\n   */\n  verticalAlign?: 'top' | 'center' | 'bottom';\n}\n\nexport interface ILine extends IShimmerElement {\n  /**\n   * Sets the height of the shimmer line in pixels.\n   * @default 16px\n   */\n  height?: number;\n\n  /**\n   * Line width value.\n   * @default 100%\n   */\n  width?: number | string;\n}\n\nexport interface ICircle extends IShimmerElement {\n  /**\n   * Sets the height of the shimmer circle in pixels.\n   * Minimum supported 10px.\n   * @default 24px\n   */\n  height?: number;\n}\n\nexport interface IGap extends IShimmerElement {\n  /**\n   * Sets the height of the shimmer gap in pixels.\n   * @default 16px\n   */\n  height?: number;\n\n  /**\n   * Gap width value.\n   * @default 10px\n   */\n  width?: number | string;\n}\n\nexport interface IShimmerStyleProps {\n  isDataLoaded?: boolean;\n  className?: string;\n  theme: ITheme;\n  transitionAnimationInterval?: number;\n}\n\nexport interface IShimmerStyles {\n  root?: IStyle;\n  shimmerWrapper?: IStyle;\n  dataWrapper?: IStyle;\n  screenReaderText?: IStyle;\n}\n\nexport enum ShimmerElementType {\n  /**\n   * Line element type\n   */\n  line = 1,\n\n  /**\n   * Circle element type\n   */\n  circle = 2,\n\n  /**\n   * Gap element type\n   */\n  gap = 3\n}\n\nexport enum ShimmerElementsDefaultHeights {\n  /**\n   * Default height of the line element when not provided by user: 16px\n   */\n  line = 16,\n\n  /**\n   * Default height of the gap element when not provided by user: 16px\n   */\n  gap = 16,\n\n  /**\n   * Default height of the circle element when not provided by user: 24px\n   */\n  circle = 24\n}\n"]}