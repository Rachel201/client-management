{"version":3,"file":"ShimmerLine.base.js","sourceRoot":"../src/","sources":["components/Shimmer/ShimmerLine/ShimmerLine.base.tsx"],"names":[],"mappings":";;;IAIA,IAAM,aAAa,GAAG,8BAAkB,EAA8C,CAAC;IAGvF;QAAqC,2CAAoC;QAGvE,yBAAY,KAAwB;mBAClC,kBAAM,KAAK,CAAC;QACd,CAAC;QAEM,gCAAM,GAAb;YACQ,IAAA,eAA6D,EAA3D,kBAAM,EAAE,wBAAS,EAAE,gBAAK,EAAE,4BAAW,EAAE,gBAAK,CAAgB;YAEpE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,SAAU,EAAE;gBAC3C,KAAK,EAAE,KAAM;gBACb,MAAM,QAAA;gBACN,WAAW,aAAA;aACZ,CAAC,CAAC;YAEH,OAAO,CACL,6BACE,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAI,KAAK,OAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EACtG,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI;gBAEjC,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,aAAa;oBAClE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC;gBACN,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc;oBACnE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC;gBACN,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB;oBACtE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC;gBACN,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB;oBACrE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC,CACF,CACP,CAAC;QACJ,CAAC;QAnCU,eAAe;YAD3B,wBAAY,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC;WAC1B,eAAe,CAoC3B;QAAD,sBAAC;KAAA,AApCD,CAAqC,yBAAa,GAoCjD;IApCY,0CAAe","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, classNamesFunction, customizable } from '../../../Utilities';\nimport { IShimmerLineProps, IShimmerLineStyleProps, IShimmerLineStyles } from './ShimmerLine.types';\n\nconst getClassNames = classNamesFunction<IShimmerLineStyleProps, IShimmerLineStyles>();\n\n@customizable('ShimmerLine', ['theme'])\nexport class ShimmerLineBase extends BaseComponent<IShimmerLineProps, {}> {\n  private _classNames: { [key in keyof IShimmerLineStyles]: string };\n\n  constructor(props: IShimmerLineProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const { height, getStyles, width, borderStyle, theme } = this.props;\n\n    this._classNames = getClassNames(getStyles!, {\n      theme: theme!,\n      height,\n      borderStyle\n    });\n\n    return (\n      <div\n        style={ { width: width ? width : '100%', minWidth: typeof width === 'number' ? `${width}px` : 'auto' } }\n        className={ this._classNames.root }\n      >\n        <svg width='2' height='2' className={ this._classNames.topLeftCorner }>\n          <path d='M0 2 A 2 2, 0, 0, 1, 2 0 L 0 0 Z' />\n        </svg>\n        <svg width='2' height='2' className={ this._classNames.topRightCorner }>\n          <path d='M0 0 A 2 2, 0, 0, 1, 2 2 L 2 0 Z' />\n        </svg>\n        <svg width='2' height='2' className={ this._classNames.bottomRightCorner }>\n          <path d='M2 0 A 2 2, 0, 0, 1, 0 2 L 2 2 Z' />\n        </svg>\n        <svg width='2' height='2' className={ this._classNames.bottomLeftCorner }>\n          <path d='M2 2 A 2 2, 0, 0, 1, 0 0 L 0 2 Z' />\n        </svg>\n      </div>\n    );\n  }\n}\n"]}