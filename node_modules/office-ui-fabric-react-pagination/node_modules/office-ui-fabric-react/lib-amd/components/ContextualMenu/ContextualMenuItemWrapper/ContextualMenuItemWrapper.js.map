{"version":3,"file":"ContextualMenuItemWrapper.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx"],"names":[],"mappings":";;;IAOA;QAA+C,qDAAkD;QAAjG;YAAA,qEA+CC;YA7CW,uBAAiB,GAAG,UAAC,EAAiC;gBACxD,IAAA,gBAAuC,EAArC,cAAI,EAAE,sCAAgB,CAAgB;gBAC9C,IAAI,gBAAgB,EAAE;oBACpB,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;iBAC7D;YACH,CAAC,CAAA;YAES,kBAAY,GAAG,UAAC,EAAiC;gBACnD,IAAA,gBAAsC,EAApC,cAAI,EAAE,oCAAe,CAAgB;gBAC7C,IAAI,eAAe,EAAE;oBACnB,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;iBAC5D;YACH,CAAC,CAAA;YAES,uBAAiB,GAAG,UAAC,EAAiC;gBACxD,IAAA,gBAAuC,EAArC,cAAI,EAAE,sCAAgB,CAAgB;gBAC9C,IAAI,gBAAgB,EAAE;oBACpB,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;iBAC5B;YACH,CAAC,CAAA;YAES,oBAAc,GAAG,UAAC,EAAoC;gBACxD,IAAA,gBAAoC,EAAlC,cAAI,EAAE,gCAAa,CAAgB;gBAC3C,IAAI,aAAa,EAAE;oBACjB,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;iBACzB;YACH,CAAC,CAAA;YAES,sBAAgB,GAAG,UAAC,EAAiC;gBACvD,IAAA,gBAAsC,EAApC,cAAI,EAAE,oCAAe,CAAgB;gBAC7C,IAAI,eAAe,EAAE;oBACnB,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;iBAC5D;YACH,CAAC,CAAA;YAES,mBAAa,GAAG,UAAC,IAAyB;gBAC1C,IAAA,uCAAY,CAAgB;gBACpC,IAAI,YAAY,EAAE;oBAChB,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;iBAC3B;YACH,CAAC,CAAA;YAES,uBAAiB,GAAG;gBAC5B,OAAO,SAAS,CAAC;YACnB,CAAC,CAAA;;QACH,CAAC;QAAD,gCAAC;IAAD,CAAC,AA/CD,CAA+C,yBAAa,GA+C3D;IA/CY,8DAAyB","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent\n} from '../../../Utilities';\nimport { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\nimport { IContextualMenuItem } from '../../ContextualMenu';\n\nexport class ContextualMenuItemWrapper extends BaseComponent<IContextualMenuItemWrapperProps, {}> {\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  }\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  }\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  }\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  }\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  }\n\n  protected _getSubMenuId = (item: IContextualMenuItem): string | undefined => {\n    const { getSubMenuId } = this.props;\n    if (getSubMenuId) {\n      return getSubMenuId(item);\n    }\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  }\n}"]}