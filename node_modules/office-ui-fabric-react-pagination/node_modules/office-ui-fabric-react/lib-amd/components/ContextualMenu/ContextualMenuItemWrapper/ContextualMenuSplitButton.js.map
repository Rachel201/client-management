{"version":3,"file":"ContextualMenuSplitButton.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  assign,\n  buttonProperties,\n  getNativeProps,\n  KeyCodes\n} from '../../../Utilities';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IContextualMenuItem } from '../ContextualMenu.types';\nimport {\n  IMenuItemClassNames,\n  getSplitButtonVerticalDividerClassNames\n} from '../ContextualMenu.classNames';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { VerticalDivider } from '../../../Divider';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\n\nexport interface IContextualMenuSplitButtonState { }\n\nconst TouchIdleDelay = 500; /* ms */\n\nexport class ContextualMenuSplitButton extends ContextualMenuItemWrapper {\n  private _splitButton: HTMLDivElement;\n  private _lastTouchTimeoutId: number | undefined;\n  private _processingTouch: boolean;\n\n  public componentDidMount() {\n    if (this._splitButton && 'onpointerdown' in this._splitButton) {\n      this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      onItemMouseLeave,\n      expandedMenuItemKey\n    } = this.props;\n\n    const itemHasSubmenu = hasSubmenu(item);\n\n    let { keytipProps } = item;\n    if (keytipProps) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    return (\n      <KeytipData keytipProps={ keytipProps } disabled={ isItemDisabled(item) }>\n        { (keytipAttributes: any): JSX.Element => (\n          <div\n            data-ktp-target={ keytipAttributes['data-ktp-target'] }\n            ref={ (splitButton: HTMLDivElement) => this._splitButton = splitButton }\n            role={ 'menuitem' }\n            aria-label={ item.ariaLabel }\n            className={ classNames.splitContainer }\n            aria-disabled={ isItemDisabled(item) }\n            aria-expanded={ itemHasSubmenu ? item.key === expandedMenuItemKey : undefined }\n            aria-haspopup={ true }\n            aria-describedby={ item.ariaDescription + (keytipAttributes['aria-describedby'] || '') }\n            aria-checked={ item.isChecked || item.checked }\n            aria-posinset={ focusableElementIndex + 1 }\n            aria-setsize={ totalItemCount }\n            onMouseEnter={ this._onItemMouseEnterPrimary }\n            onMouseLeave={ onItemMouseLeave ? onItemMouseLeave.bind(this, { ...item, subMenuProps: null, items: null }) : undefined }\n            onMouseMove={ this._onItemMouseMovePrimary }\n            onKeyDown={ this._onItemKeyDown }\n            onClick={ this._executeItemClick }\n            onTouchStart={ this._onTouchStart }\n            tabIndex={ 0 }\n            data-is-focusable={ true }\n          >\n            { this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks!, hasIcons!) }\n            { this._renderSplitDivider(item) }\n            { this._renderSplitIconButton(item, classNames, index, keytipAttributes) }\n          </div >\n        ) }\n      </KeytipData>\n    );\n  }\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (ev.which === KeyCodes.enter) {\n      this._executeItemClick(ev);\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._splitButton;\n  }\n\n  private _renderSplitPrimaryButton(item: IContextualMenuItem, classNames: IMenuItemClassNames, index: number, hasCheckmarks: boolean, hasIcons: boolean) {\n    const {\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      onItemClick\n    } = this.props;\n\n    const itemProps = {\n      key: item.key,\n      disabled: isItemDisabled(item) || item.primaryDisabled,\n      name: item.name,\n      className: classNames.splitPrimary,\n      canCheck: item.canCheck,\n      isChecked: item.isChecked,\n      checked: item.checked,\n      icon: item.icon,\n      iconProps: item.iconProps,\n      'data-is-focusable': false,\n      'aria-hidden': true\n    } as IContextualMenuItem;\n    return (\n      <button { ...getNativeProps(itemProps, buttonProperties) }>\n        <ChildrenRenderer\n          data-is-focusable={ false }\n          item={ itemProps }\n          classNames={ classNames }\n          index={ index }\n          onCheckmarkClick={ hasCheckmarks && onItemClick ? onItemClick.bind(this, item) : undefined }\n          hasIcons={ hasIcons }\n        />\n      </button>\n    );\n  }\n\n  private _renderSplitDivider(item: IContextualMenuItem) {\n    const getDividerClassNames = item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\n    return <VerticalDivider getClassNames={ getDividerClassNames } />;\n  }\n\n  private _renderSplitIconButton(item: IContextualMenuItem, classNames: IMenuItemClassNames, index: number, keytipAttributes: any) {\n    const {\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      onItemMouseLeave,\n      onItemMouseDown,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    const itemProps = {\n      onClick: this._onIconItemClick,\n      disabled: isItemDisabled(item),\n      className: classNames.splitMenu,\n      subMenuProps: item.subMenuProps,\n      submenuIconProps: item.submenuIconProps,\n      split: true,\n      key: item.key\n    } as IContextualMenuItem;\n\n    const buttonProps = assign({}, getNativeProps(itemProps, buttonProperties), {\n      onMouseEnter: this._onItemMouseEnterIcon,\n      onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\n      onMouseDown: (ev: any) => onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n      onMouseMove: this._onItemMouseMoveIcon,\n      'data-is-focusable': false,\n      'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\n      'aria-hidden': true\n    });\n\n    return (\n      <button { ...buttonProps } >\n        <ChildrenRenderer\n          componentRef={ item.componentRef }\n          item={ itemProps }\n          classNames={ classNames }\n          index={ index }\n          hasIcons={ false }\n          openSubMenu={ openSubMenu }\n          dismissSubMenu={ dismissSubMenu }\n          dismissMenu={ dismissMenu }\n          getSubmenuTarget={ this._getSubmenuTarget }\n        />\n      </button >\n    );\n  }\n\n  private _onItemMouseEnterPrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const {\n      item,\n      onItemMouseEnter\n    } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  }\n\n  private _onItemMouseEnterIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, this._splitButton);\n    }\n  }\n\n  private _onItemMouseMovePrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const {\n      item,\n      onItemMouseMove\n    } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  }\n\n  private _onItemMouseMoveIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const {\n      item,\n      onItemMouseMove\n    } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, this._splitButton);\n    }\n  }\n\n  private _onIconItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const {\n      item,\n      onItemClickBase\n    } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, (this._splitButton ? this._splitButton : ev.currentTarget) as HTMLElement);\n    }\n  }\n\n  private _executeItemClick = (ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const {\n      item,\n      executeItemClick,\n      onItemClick\n    } = this.props;\n\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (this._processingTouch && onItemClick) {\n      return onItemClick(item, ev);\n    }\n\n    if (executeItemClick) {\n      executeItemClick(item, ev);\n    }\n  }\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLElement>): void => {\n    if (this._splitButton && !('onpointerdown' in this._splitButton)) {\n      this._handleTouchAndPointerEvent(ev);\n    }\n  }\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent(ev);\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  }\n\n  private _handleTouchAndPointerEvent(ev: React.TouchEvent<HTMLElement> | PointerEvent) {\n    const {\n      onTap\n    } = this.props;\n\n    if (onTap) {\n      onTap(ev);\n    }\n    // If we already have an existing timeout from a previous touch/pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n}"]}