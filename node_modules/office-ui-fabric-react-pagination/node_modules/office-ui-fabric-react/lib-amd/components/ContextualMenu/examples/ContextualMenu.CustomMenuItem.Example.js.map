{"version":3,"file":"ContextualMenu.CustomMenuItem.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.CustomMenuItem.Example.tsx"],"names":[],"mappings":";;;IAMA;QAA6D,mEAAe;QAE1E,iDAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YAHC,KAAI,CAAC,KAAK,GAAG;gBACX,WAAW,EAAE,KAAK;aACnB,CAAC;;QACJ,CAAC;QAEM,wDAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IACZ,EAAE,EAAC,uBAAuB,EAC1B,IAAI,EAAC,0BAA0B,EAC/B,SAAS,EAAG;wBACV,kBAAkB,EAAE,IAAI;wBACxB,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,SAAS;gCACd,IAAI,EAAE,KAAK;6BACZ;4BACD;gCACE,GAAG,EAAE,WAAW;gCAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;6BACzC;4BACD;gCACE,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,QAAQ;6BACf;4BACD;gCACE,GAAG,EAAE,MAAM;gCACX,IAAI,EAAE,MAAM;6BACb;4BACD;gCACE,GAAG,EAAE,YAAY;gCACjB,IAAI,EAAE,YAAY;6BACnB;4BACD;gCACE,GAAG,EAAE,UAAU;gCACf,IAAI,EAAE,eAAe;gCACrB,QAAQ,EAAE,IAAI;6BACf;yBACF;wBACD,oBAAoB,EAAE,UAAC,KAA+B,IAAK,OAAA;;4BAAuB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAQ,EAA9C,CAA8C;qBAC1G,GACD,CACE,CACP,CAAC;QACJ,CAAC;QACH,8CAAC;IAAD,CAAC,AAlDD,CAA6D,KAAK,CAAC,SAAS,GAkD3E;IAlDY,0FAAuC","sourcesContent":["import * as React from 'react';\nimport { ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { IContextualMenuItemProps } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport './ContextualMenuExample.scss';\n\nexport class ContextualMenuWithCustomMenuItemExample extends React.Component {\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showCallout: false\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <DefaultButton\n          id='ContextualMenuButton1'\n          text='Click for ContextualMenu'\n          menuProps={ {\n            shouldFocusOnMount: true,\n            items: [\n              {\n                key: 'newItem',\n                name: 'New'\n              },\n              {\n                key: 'divider_1',\n                itemType: ContextualMenuItemType.Divider\n              },\n              {\n                key: 'rename',\n                name: 'Rename'\n              },\n              {\n                key: 'edit',\n                name: 'Edit'\n              },\n              {\n                key: 'properties',\n                name: 'Properties'\n              },\n              {\n                key: 'disabled',\n                name: 'Disabled item',\n                disabled: true\n              }\n            ],\n            contextualMenuItemAs: (props: IContextualMenuItemProps) => <div>Custom rendered { props.item.name }</div>\n          } }\n        />\n      </div>\n    );\n  }\n}\n"]}