{"version":3,"file":"ContextualMenu.Directional.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Directional.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\nimport './ContextualMenuExample.scss';\nimport * as exampleStylesImport from '../../../common/_exampleStyles.scss';\nconst exampleStyles: any = exampleStylesImport;\n\nexport interface IContextualMenuDirectionalExampleState {\n  directionalHint?: DirectionalHint;\n  directionalHintForRTL?: DirectionalHint;\n  useDirectionalHintForRtl?: boolean;\n  isBeakVisible?: boolean;\n  gapSpace?: number;\n  beakWidth?: number;\n  edgeFixed?: boolean;\n}\n\nconst DIRECTION_OPTIONS = [{ key: DirectionalHint.topLeftEdge, text: 'Top Left Edge' },\n{ key: DirectionalHint.topCenter, text: 'Top Center' },\n{ key: DirectionalHint.topRightEdge, text: 'Top Right Edge' },\n{ key: DirectionalHint.topAutoEdge, text: 'Top Auto Edge' },\n{ key: DirectionalHint.bottomLeftEdge, text: 'Bottom Left Edge' },\n{ key: DirectionalHint.bottomCenter, text: 'Bottom Center' },\n{ key: DirectionalHint.bottomRightEdge, text: 'Bottom Right Edge' },\n{ key: DirectionalHint.bottomAutoEdge, text: 'Bottom Auto Edge' },\n{ key: DirectionalHint.leftTopEdge, text: 'Left Top Edge' },\n{ key: DirectionalHint.leftCenter, text: 'Left Center' },\n{ key: DirectionalHint.leftBottomEdge, text: 'Left Bottom Edge' },\n{ key: DirectionalHint.rightTopEdge, text: 'Right Top Edge' },\n{ key: DirectionalHint.rightCenter, text: 'Right Center' },\n{ key: DirectionalHint.rightBottomEdge, text: 'Right Bottom Edge' },\n];\n\nexport class ContextualMenuDirectionalExample extends React.Component<{}, IContextualMenuDirectionalExampleState> {\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isBeakVisible: false,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomLeftEdge,\n      useDirectionalHintForRtl: false,\n      gapSpace: 0,\n      beakWidth: 20,\n      edgeFixed: false\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      edgeFixed,\n      gapSpace,\n      isBeakVisible,\n      useDirectionalHintForRtl\n    } = this.state;\n\n    return (\n      <div className='ms-ContextualMenuDirectionalExample'>\n        <div className='ms-ContextualMenuDirectionalExample-configArea'>\n          <Checkbox\n            className={ exampleStyles.exampleCheckbox }\n            label='Show beak'\n            checked={ isBeakVisible }\n            onChange={ this._onShowBeakChange }\n          />\n          <Dropdown\n            label='Directional hint'\n            selectedKey={ directionalHint! }\n            options={ DIRECTION_OPTIONS }\n            onChanged={ this._onDirectionalChanged }\n          />\n          { getRTL() &&\n            <Checkbox label='Use RTL directional hint' checked={ useDirectionalHintForRtl } onChange={ this._onUseRtlHintChange } />\n          }\n          { getRTL() &&\n            <Dropdown\n              label='Directional hint for RTL'\n              selectedKey={ directionalHintForRTL! }\n              options={ DIRECTION_OPTIONS }\n              onChanged={ this._onDirectionalRtlChanged }\n              disabled={ !useDirectionalHintForRtl }\n            />\n          }\n        </div>\n        <div className='ms-ContextualMenuDirectionalExample-buttonArea'>\n          <DefaultButton\n            text='Show context menu'\n            menuProps={ {\n              isBeakVisible: isBeakVisible,\n              directionalHint: directionalHint,\n              directionalHintForRTL: useDirectionalHintForRtl ? directionalHintForRTL : undefined,\n              gapSpace: gapSpace,\n              beakWidth: beakWidth,\n              directionalHintFixed: edgeFixed,\n              items: [\n                {\n                  key: 'newItem',\n                  name: 'New'\n                },\n                {\n                  key: 'divider_1',\n                  itemType: ContextualMenuItemType.Divider\n                },\n                {\n                  key: 'rename',\n                  name: 'Rename'\n                },\n                {\n                  key: 'edit',\n                  name: 'Edit'\n                },\n                {\n                  key: 'properties',\n                  name: 'Properties'\n                },\n                {\n                  key: 'disabled',\n                  name: 'Disabled item',\n                  disabled: true\n                }\n              ]\n            }\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onShowBeakChange = (ev: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\n    this.setState({\n      isBeakVisible: isVisible\n    });\n  }\n\n  private _onUseRtlHintChange = (ev: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\n    this.setState({\n      useDirectionalHintForRtl: isVisible\n    });\n  }\n\n  private _onDirectionalChanged = (option: IDropdownOption): void => {\n    this.setState({\n      directionalHint: option.key as number\n    });\n  }\n\n  private _onDirectionalRtlChanged = (option: IDropdownOption): void => {\n    this.setState({\n      directionalHintForRTL: option.key as number\n    });\n  }\n\n}\n"]}