{"version":3,"file":"GroupedList.Custom.Example.js","sourceRoot":"../src/","sources":["components/GroupedList/examples/GroupedList.Custom.Example.tsx"],"names":[],"mappings":";;;IAYA,IAAI,MAAa,CAAC;IAClB,IAAI,OAAiB,CAAC;IAEtB;QAA8C,oDAAe;QAC3D,kCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YAFC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,EAAE,CAAC,CAAC;YACvC,OAAO,GAAG,+BAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QACrC,CAAC;QAEM,yCAAM,GAAb;YACE,OAAO,CACL,oBAAC,mBAAW,IACV,KAAK,EAAG,MAAM,EACd,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,UAAU,EACR;oBACE,cAAc,EAAE,IAAI,CAAC,eAAe;oBACpC,cAAc,EAAE,IAAI,CAAC,eAAe;iBACrC,EAEH,MAAM,EAAG,OAAO,GAChB,CACH,CAAC;QACJ,CAAC;QAEO,gDAAa,GAArB,UAAsB,YAAoB,EAAE,IAAS,EAAE,SAAiB;YACtE,OAAO,CACL,qDAA4B,SAAS;gBACnC,8BAAM,SAAS,EAAC,4BAA4B,IACxC,IAAI,CAAC,IAAI,CACN,CACH,CACP,CAAC;QACJ,CAAC;QAEO,kDAAe,GAAvB,UAAwB,KAAyB;YAC/C,IAAM,cAAc,GAAG;gBACrB,KAAK,CAAC,gBAAiB,CAAC,KAAK,CAAC,KAAM,CAAC,CAAC;YACxC,CAAC,CAAC;YAEF,OAAO,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,wBAAc,CAAC,MAAM,CAAC;;gBAC3C,KAAK,CAAC,KAAM,CAAC,IAAI;;gBAG7C,oBAAC,WAAI,IAAC,OAAO,EAAG,cAAc,IAC5B,KAAK,CAAC,KAAM,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAC7C;oBAEH,CACP,CAAC;QACJ,CAAC;QAEO,kDAAe,GAAvB,UAAwB,KAAyB;YAC/C,OAAO,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,wBAAc,CAAC,KAAK,CAAC;;gBAC1C,KAAK,CAAC,KAAM,CAAC,IAAI,CAC3C,CACP,CAAC;QACJ,CAAC;QACH,+BAAC;IAAD,CAAC,AA3DD,CAA8C,KAAK,CAAC,SAAS,GA2D5D;IA3DY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport {\n  GroupedList,\n  IGroup,\n  IGroupDividerProps\n} from 'office-ui-fabric-react/lib/components/GroupedList/index';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { createListItems, createGroups } from '@uifabric/example-app-base';\nimport { FontClassNames } from '../../../Styling';\nimport './GroupedList.Custom.Example.scss';\n\nlet _items: any[];\nlet _groups: IGroup[];\n\nexport class GroupedListCustomExample extends React.Component {\n  constructor(props: {}) {\n    super(props);\n\n    _items = _items || createListItems(20);\n    _groups = createGroups(4, 0, 0, 5);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <GroupedList\n        items={ _items }\n        onRenderCell={ this._onRenderCell }\n        groupProps={\n          {\n            onRenderHeader: this._onRenderHeader,\n            onRenderFooter: this._onRenderFooter\n          }\n        }\n        groups={ _groups }\n      />\n    );\n  }\n\n  private _onRenderCell(nestingDepth: number, item: any, itemIndex: number): JSX.Element {\n    return (\n      <div data-selection-index={ itemIndex }>\n        <span className='ms-GroupedListExample-name'>\n          { item.name }\n        </span>\n      </div>\n    );\n  }\n\n  private _onRenderHeader(props: IGroupDividerProps): JSX.Element {\n    const toggleCollapse = (): void => {\n      props.onToggleCollapse!(props.group!);\n    };\n\n    return (\n      <div className={ css('ms-GroupedListExample-header', FontClassNames.xLarge) }>\n        This is a custom header for { props.group!.name }\n        &nbsp;\n        (\n          <Link onClick={ toggleCollapse }>\n          { props.group!.isCollapsed ? 'Expand' : 'Collapse' }\n        </Link>\n        )\n      </div>\n    );\n  }\n\n  private _onRenderFooter(props: IGroupDividerProps): JSX.Element {\n    return (\n      <div className={ css('ms-GroupedListExample-footer', FontClassNames.large) }>\n        This is a custom footer for { props.group!.name }\n      </div>\n    );\n  }\n}\n"]}