{"version":3,"file":"PeoplePicker.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":";AAAA,oBAAoB;AACpB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,mBAAmB;AACnB,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAChE,OAAO,EAAiD,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACrG,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAC;AAE9E,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,2CAA2C,CAAC;AACtG,OAAO,qBAAqB,CAAC;AAM7B;IAAsC,4CAA6C;IAAnF;;IACA,CAAC;IAAD,uBAAC;AAAD,CAAC,AADD,CAAsC,UAAU,GAC/C;;AAED;IAA4C,kDAAsD;IAAlG;;IACA,CAAC;IAAD,6BAAC;AAAD,CAAC,AADD,CAA4C,mBAAmB,GAC9D;;AAED;;GAEG;AACH;IAAwC,8CAAgB;IAAxD;;IAMA,CAAC;IALe,+BAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,mBAAmB,uBAAM,KAAK,EAAK,EAApC,CAAoC;QACrF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,oBAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAApD,CAAoD;QAChJ,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACJ,yBAAC;CAAA,AAND,CAAwC,gBAAgB,GAMvD;SANY,kBAAkB;AAQ/B;;EAEE;AACF;IAAyC,+CAAgB;IAAzD;;IAMA,CAAC;IALe,gCAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,mBAAmB,uBAAM,KAAK,EAAK,EAApC,CAAoC;QACrF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,mBAAmB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAAnD,CAAmD;QAC/I,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACJ,0BAAC;CAAA,AAND,CAAyC,gBAAgB,GAMxD;SANY,mBAAmB;AAQhC;;GAEG;AACH;IAAsC,4CAAsB;IAA5D;;IAMA,CAAC;IALe,6BAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,mBAAmB,uBAAM,KAAK,EAAK,EAApC,CAAoC;QACrF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,oBAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAApD,CAAoD;QAChJ,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACJ,uBAAC;CAAA,AAND,CAAsC,sBAAsB,GAM3D;SANY,gBAAgB;AAc7B,MAAM,4BAA4B,IAAY,EAAE,sBAAuC,EAAE,kBAA2B;IAClH,IAAM,gBAAgB,GAAG;QACvB,GAAG,EAAE,IAAI;QACT,WAAW,EAAE,IAAI;QACjB,aAAa,EAAE,GAAG;QAClB,eAAe,EAAE,sBAAsB;KACxC,CAAC;IAEF,IAAI,sBAAsB,KAAK,eAAe,CAAC,OAAO,EAAE;QACtD,gBAAgB,CAAC,aAAa,GAAG,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC;KAClF;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport { getRTL, getInitials } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport { IBasePickerProps, IBasePickerSuggestionsProps, ValidationState } from '../BasePicker.types';\nimport { SelectedItemDefault } from './PeoplePickerItems/SelectedItemDefault';\nimport { IPersonaProps } from '../../../Persona';\nimport { SuggestionItemSmall, SuggestionItemNormal } from './PeoplePickerItems/SuggestionItemDefault';\nimport './PeoplePicker.scss';\nimport { IPeoplePickerItemProps } from './PeoplePickerItems/PeoplePickerItem.types';\n\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {\n}\n\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {\n}\n\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {\n}\n\n/**\n * Standard People Picker.\n */\nexport class NormalPeoplePicker extends BasePeoplePicker {\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault { ...props } />,\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemNormal({ ...props }, { ...itemProps }),\n    createGenericItem: createGenericItem\n  };\n}\n\n/**\n* Compact layout. It uses small personas when displaying search results.\n*/\nexport class CompactPeoplePicker extends BasePeoplePicker {\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault { ...props } />,\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemSmall({ ...props }, { ...itemProps }),\n    createGenericItem: createGenericItem\n  };\n}\n\n/**\n * MemberList layout. The selected people show up below the search box.\n */\nexport class ListPeoplePicker extends MemberListPeoplePicker {\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault { ...props } />,\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemNormal({ ...props }, { ...itemProps }),\n    createGenericItem: createGenericItem\n  };\n}\n\nexport interface IGenericItem {\n  primaryText: string;\n  imageInitials: string;\n  ValidationState: ValidationState;\n}\n\nexport function createGenericItem(name: string, currentValidationState: ValidationState, allowPhoneInitials: boolean): IGenericItem & { key: React.Key } {\n  const personaToConvert = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    ValidationState: currentValidationState\n  };\n\n  if (currentValidationState !== ValidationState.warning) {\n    personaToConvert.imageInitials = getInitials(name, getRTL(), allowPhoneInitials);\n  }\n\n  return personaToConvert;\n}"]}