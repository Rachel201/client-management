{"version":3,"file":"ShimmerGap.types.js","sourceRoot":"../src/","sources":["components/Shimmer/ShimmerGap/ShimmerGap.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyle, IRawStyle, ITheme } from '../../../Styling';\nimport { IStyleFunction } from '../../../Utilities';\n\nexport interface IShimmerGap { }\n\n/**\n * ShimmerGap component props.\n */\nexport interface IShimmerGapProps extends React.AllHTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IShimmerGap interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IShimmerGap | null) => void;\n\n  /**\n   * Sets the height of the gap.\n   * @default 16px\n   */\n  height?: number;\n\n  /**\n   * Sets width value of the gap.\n   * @default 10px\n   */\n  width?: number | string;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  getStyles?: IStyleFunction<IShimmerGapStyleProps, IShimmerGapStyles>;\n\n  /**\n   * Use to set custom styling of the shimmerGap borders.\n   * @deprecated Use 'styles' prop to leverage mergeStyle API.\n   */\n  borderStyle?: IRawStyle;\n}\n\n/**\n * Props needed to construct styles.\n */\nexport type IShimmerGapStyleProps = {\n  /**\n   * Theme values passed to the component.\n   */\n  theme: ITheme;\n\n  /**\n   * Needed to provide a height to the root of the control.\n   */\n  height?: number;\n\n  /**\n   * Styles to override borderStyles with custom ones.\n   * @deprecated in favor of mergeStyles API.\n   */\n  borderStyle?: IRawStyle;\n};\n\n/**\n * Represents the stylable areas of the control.\n */\nexport interface IShimmerGapStyles {\n  /**\n   * Root of the ShimmerGap component.\n   */\n  root?: IStyle;\n}\n"]}