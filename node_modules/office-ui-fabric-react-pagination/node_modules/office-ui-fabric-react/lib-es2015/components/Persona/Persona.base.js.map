{"version":3,"file":"Persona.base.js","sourceRoot":"../src/","sources":["components/Persona/Persona.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  classNamesFunction,\n  customizable,\n  divProperties,\n  getNativeProps,\n  IRenderFunction,\n} from '../../Utilities';\nimport { TooltipHost, TooltipOverflowMode, DirectionalHint } from '../../Tooltip';\nimport { PersonaCoin } from './PersonaCoin/PersonaCoin';\nimport {\n  IPersonaProps,\n  IPersonaSharedProps,\n  IPersonaStyleProps,\n  IPersonaStyles,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from './Persona.types';\n\nconst getClassNames = classNamesFunction<IPersonaStyleProps, IPersonaStyles>();\n\n/**\n * Persona with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\n */\n@customizable('Persona', ['theme'])\nexport class PersonaBase extends BaseComponent<IPersonaProps, {}> {\n  public static defaultProps: IPersonaProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: ''\n  };\n\n  constructor(props: IPersonaProps) {\n    super(props);\n\n    this._warnDeprecations({ 'primaryText': 'text' });\n  }\n\n  public render(): JSX.Element {\n    // wrapping default render behavior based on various this.props properties\n    const _onRenderPrimaryText = this._onRenderText(this._getText()),\n      _onRenderSecondaryText = this._onRenderText(this.props.secondaryText),\n      _onRenderTertiaryText = this._onRenderText(this.props.tertiaryText),\n      _onRenderOptionalText = this._onRenderText(this.props.optionalText);\n\n    const {\n      hidePersonaDetails,\n      onRenderOptionalText = _onRenderOptionalText,\n      onRenderPrimaryText = _onRenderPrimaryText,\n      onRenderSecondaryText = _onRenderSecondaryText,\n      onRenderTertiaryText = _onRenderTertiaryText,\n    } = this.props;\n    const size = this.props.size as PersonaSize;\n\n    // These properties are to be explicitly passed into PersonaCoin because they are the only props directly used\n    const {\n      allowPhoneInitials,\n      className,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      getStyles,\n      imageAlt,\n      imageInitials,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      imageUrl,\n      initialsColor,\n      onPhotoLoadingStateChange,\n      onRenderCoin,\n      onRenderInitials,\n      presence,\n      showSecondaryText,\n      theme,\n    } = this.props;\n\n    const personaCoinProps: IPersonaSharedProps = {\n      allowPhoneInitials,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      imageAlt,\n      imageInitials,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      imageUrl,\n      initialsColor,\n      onPhotoLoadingStateChange,\n      onRenderCoin,\n      onRenderInitials,\n      presence,\n      size,\n      text: this._getText()\n    };\n\n    const classNames = getClassNames(getStyles, {\n      theme: theme!,\n      className,\n      showSecondaryText,\n      presence,\n      size,\n    });\n\n    const divProps = getNativeProps(this.props, divProperties);\n    const personaDetails = (\n      <div className={ classNames.details }>\n        { this._renderElement(classNames.primaryText, onRenderPrimaryText, _onRenderPrimaryText) }\n        { this._renderElement(classNames.secondaryText, onRenderSecondaryText, _onRenderSecondaryText) }\n        { this._renderElement(classNames.tertiaryText, onRenderTertiaryText, _onRenderTertiaryText) }\n        { this._renderElement(classNames.optionalText, onRenderOptionalText, _onRenderOptionalText) }\n        { this.props.children }\n      </div>\n    );\n\n    return (\n      <div\n        { ...divProps }\n        className={ classNames.root }\n        style={ coinSize ? { height: coinSize, minWidth: coinSize } : undefined }\n      >\n        <PersonaCoin { ...personaCoinProps } />\n        { (!hidePersonaDetails || (size === PersonaSize.size10 || size === PersonaSize.tiny)) && personaDetails }\n      </div>\n    );\n  }\n\n  /**\n   * Deprecation helper for getting text.\n   */\n  private _getText(): string {\n    return this.props.text || this.props.primaryText || '';\n  }\n\n  /**\n   * Renders various types of Text (primaryText, secondaryText, etc)\n   * based on the classNames passed\n   * @param classNames\n   * @param renderFunction\n   * @param defaultRenderFunction\n   */\n  private _renderElement(\n    classNames: string,\n    renderFunction: IRenderFunction<IPersonaProps> | undefined,\n    defaultRenderFunction: IRenderFunction<IPersonaProps> | undefined\n  ): JSX.Element {\n    return <div className={ classNames }>{ renderFunction && renderFunction(this.props, defaultRenderFunction) }</div>;\n  }\n\n  /**\n   * using closure to wrap the default render behavior\n   * to make it independent of the type of text passed\n   * @param text\n   */\n  private _onRenderText(text: string | undefined): IRenderFunction<IPersonaProps> | undefined {\n    // return default render behaviour for valid text or undefined\n    return text\n      ? (): JSX.Element => {\n        // default onRender behaviour\n        return (\n          <TooltipHost\n            content={ text }\n            overflowMode={ TooltipOverflowMode.Parent }\n            directionalHint={ DirectionalHint.topLeftEdge }\n          >\n            { text }\n          </TooltipHost>\n        );\n      }\n      : undefined;\n  }\n}\n"]}