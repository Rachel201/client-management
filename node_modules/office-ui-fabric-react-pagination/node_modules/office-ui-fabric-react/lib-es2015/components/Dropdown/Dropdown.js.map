{"version":3,"file":"Dropdown.js","sourceRoot":"../src/","sources":["components/Dropdown/Dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IDropdownProps, IDropdownOption, DropdownMenuItemType } from './Dropdown.types';\nimport { Checkbox } from '../../Checkbox';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Callout } from '../../Callout';\nimport { Label } from '../../Label';\nimport { CommandButton } from '../../Button';\nimport { Panel } from '../../Panel';\nimport { Icon } from '../../Icon';\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css,\n  findIndex,\n  getId,\n  getNativeProps,\n  divProperties,\n  getFirstFocusable,\n  getLastFocusable,\n  createRef\n} from '../../Utilities';\nimport { SelectableOptionMenuItemType } from '../../utilities/selectableOption/SelectableOption.types';\nimport * as stylesImport from './Dropdown.scss';\nconst styles: any = stylesImport;\nimport { getStyles as getCheckboxStyles } from '../Checkbox/Checkbox.styles';\nimport { getTheme } from '../../Styling';\nimport { KeytipData } from '../../KeytipData';\n\n// Internal only props interface to support mixing in responsive mode\nexport interface IDropdownInternalProps extends IDropdownProps, IWithResponsiveModeState {\n\n}\n\nexport interface IDropdownState {\n  isOpen?: boolean;\n  selectedIndices?: number[];\n}\n\n@withResponsiveMode\nexport class Dropdown extends BaseComponent<IDropdownInternalProps, IDropdownState> {\n\n  public static defaultProps = {\n    options: [] as any[]\n  };\n\n  private static Option = 'option';\n\n  private _host = createRef<HTMLDivElement>();\n  private _focusZone = createRef<IFocusZone>();\n  private _dropDown = createRef<HTMLDivElement>();\n  private _id: string;\n  private _isScrollIdle: boolean;\n  private readonly _scrollIdleDelay: number = 250 /* ms */;\n  private _scrollIdleTimeoutId: number | undefined;\n\n  constructor(props: IDropdownProps) {\n    super(props);\n    props.options.forEach((option: any) => {\n      if (!option.itemType) {\n        option.itemType = DropdownMenuItemType.Normal;\n      }\n    });\n    super(props);\n\n    this._warnDeprecations({\n      'isDisabled': 'disabled'\n    });\n\n    this._warnMutuallyExclusive({\n      'defaultSelectedKey': 'selectedKey',\n      'defaultSelectedKeys': 'selectedKeys',\n      'selectedKeys': 'selectedKey',\n      'multiSelect': 'defaultSelectedKey',\n      'selectedKey': 'multiSelect'\n    });\n\n    this._id = props.id || getId('Dropdown');\n    this._isScrollIdle = true;\n\n    this.state = {\n      isOpen: false\n    };\n    if (this.props.multiSelect) {\n      const selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;\n      this.state = {\n        selectedIndices: this._getSelectedIndexes(props.options, selectedKeys)\n      };\n    } else {\n      const selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;\n      this.state = {\n        selectedIndices: this._getSelectedIndexes(props.options, selectedKey!)\n      };\n    }\n\n  }\n\n  public componentWillReceiveProps(newProps: IDropdownProps): void {\n    // In controlled component usage where selectedKey is provided, update the selectedIndex\n    // state if the key or options change.\n    const selectedKeyProp: keyof IDropdownProps = this.props.multiSelect ? 'selectedKeys' : 'selectedKey';\n    if (newProps[selectedKeyProp] !== undefined &&\n      (newProps[selectedKeyProp] !== this.props[selectedKeyProp] || newProps.options !== this.props.options)) {\n      this.setState({\n        selectedIndices: this._getSelectedIndexes(newProps.options, newProps[selectedKeyProp])\n      });\n    }\n  }\n\n  public componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState) {\n    if (prevState.isOpen === true && this.state.isOpen === false) {\n      if (this._dropDown.current) {\n        this._dropDown.current.focus();\n      }\n\n      if (this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n    }\n  }\n\n  // Primary Render\n  public render(): JSX.Element {\n    const id = this._id;\n    let {\n      disabled\n    } = this.props;\n    const {\n      className,\n      label,\n      options,\n      isDisabled,\n      ariaLabel,\n      required,\n      errorMessage,\n      keytipProps,\n      onRenderTitle = this._onRenderTitle,\n      onRenderContainer = this._onRenderContainer,\n      onRenderPlaceHolder = this._onRenderPlaceHolder,\n      onRenderCaretDown = this._onRenderCaretDown\n    } = this.props;\n    const { isOpen, selectedIndices = [] } = this.state;\n    const selectedOptions = this._getAllSelectedOptions(options, selectedIndices);\n    const divProps = getNativeProps(this.props, divProperties);\n\n    // Remove this deprecation workaround at 1.0.0\n    if (isDisabled !== undefined) {\n      disabled = isDisabled;\n    }\n    const describedBy = id + '-option';\n\n    return (\n      <div className={ css('ms-Dropdown-container') }>\n        { label && (\n          <Label className={ css('ms-Dropdown-label') } id={ id + '-label' } htmlFor={ id } required={ required }>{ label }</Label>\n        ) }\n        <KeytipData keytipProps={ keytipProps } disabled={ disabled }>\n          { (keytipAttributes: any): JSX.Element => (\n            <div\n              { ...keytipAttributes }\n              data-is-focusable={ !disabled }\n              ref={ this._dropDown }\n              id={ id }\n              tabIndex={ disabled ? -1 : 0 }\n              aria-expanded={ isOpen ? 'true' : 'false' }\n              role='listbox'\n              aria-live={ disabled || isOpen ? 'off' : 'assertive' }\n              aria-label={ ariaLabel }\n              aria-describedby={ describedBy + (keytipAttributes['aria-describedby'] || '') }\n              aria-activedescendant={ isOpen && selectedIndices.length === 1 && selectedIndices[0] >= 0 ? (this._id + '-list' + selectedIndices[0]) : undefined }\n              aria-disabled={ disabled }\n              aria-owns={ isOpen ? id + '-list' : undefined }\n              { ...divProps }\n              className={ css(\n                'ms-Dropdown',\n                styles.root,\n                className,\n                isOpen! && 'is-open',\n                disabled! && ('is-disabled ' + styles.rootIsDisabled),\n                required! && 'is-required',\n              ) }\n              onBlur={ this._onDropdownBlur }\n              onKeyDown={ this._onDropdownKeyDown }\n              onKeyUp={ this._onDropdownKeyUp }\n              onClick={ this._onDropdownClick }\n            >\n              <span\n                id={ id + '-option' }\n                className={ css(\n                  'ms-Dropdown-title', styles.title,\n                  !selectedOptions.length && 'ms-Dropdown-titleIsPlaceHolder',\n                  !selectedOptions.length && styles.titleIsPlaceHolder,\n                  (errorMessage && errorMessage.length > 0 ? styles.titleIsError : null))\n                }\n                aria-atomic={ true }\n                role='listbox'\n              >\n                { // If option is selected render title, otherwise render the placeholder text\n                  selectedOptions.length ? (\n                    onRenderTitle(selectedOptions, this._onRenderTitle)\n                  ) :\n                    onRenderPlaceHolder(this.props, this._onRenderPlaceHolder)\n                }\n              </span>\n              <span className={ css('ms-Dropdown-caretDownWrapper', styles.caretDownWrapper) }>\n                { onRenderCaretDown(this.props, this._onRenderCaretDown) }\n              </span>\n            </div>\n          ) }\n        </KeytipData>\n        {\n          isOpen && (\n            onRenderContainer(this.props, this._onRenderContainer)\n          )\n        }\n        {\n          errorMessage &&\n          <div\n            className={ css(styles.errorMessage) }\n          >\n            { errorMessage }\n          </div>\n        }\n      </div>\n    );\n  }\n\n  public focus(shouldOpenOnFocus?: boolean): void {\n    if (this._dropDown.current && this._dropDown.current.tabIndex !== -1) {\n      this._dropDown.current.focus();\n\n      if (shouldOpenOnFocus) {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }\n  }\n\n  public setSelectedIndex(index: number): void {\n    const { onChanged, options, selectedKey, selectedKeys, multiSelect } = this.props;\n    const { selectedIndices = [] } = this.state;\n    const checked: boolean = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\n\n    index = Math.max(0, Math.min(options.length - 1, index));\n\n    if (!multiSelect && index === selectedIndices[0]) {\n      return;\n    } else if (!multiSelect && selectedKey === undefined) {\n      // Set the selected option if this is an uncontrolled component\n      this.setState({\n        selectedIndices: [index]\n      });\n    } else if (multiSelect && selectedKeys === undefined) {\n      const newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\n      if (checked) {\n        const position = newIndexes.indexOf(index);\n        if (position > -1) {\n          // unchecked the current one\n          newIndexes.splice(position, 1);\n        }\n      } else {\n        // add the new selected index into the existing one\n        newIndexes.push(index);\n      }\n      this.setState({\n        selectedIndices: newIndexes\n      });\n    }\n\n    if (onChanged) {\n      // for single-select, option passed in will always be selected.\n      // for multi-select, flip the checked value\n      const changedOpt = multiSelect ? { ...options[index], selected: !checked } : options[index];\n      onChanged(changedOpt, index);\n    }\n  }\n\n  private _copyArray(array: any[]): any[] {\n    const newArray = [];\n    for (const element of array) {\n      newArray.push(element);\n    }\n    return newArray;\n  }\n\n  /**\n   * Finds the next valid Dropdown option and sets the selected index to it.\n   * @param stepValue Value of how many items the function should traverse.  Should be -1 or 1.\n   * @param index Index of where the search should start\n   * @param selectedIndex The selectedIndex Dropdown's state\n   * @returns The next valid dropdown option's index\n   */\n  private _moveIndex(stepValue: number, index: number, selectedIndex: number): number {\n    const { options } = this.props;\n    // Return selectedIndex if nothing has changed or options is empty\n    if (selectedIndex === index || options.length === 0) {\n      return selectedIndex;\n    }\n\n    // Set starting index to 0 if index is < 0\n    if (index < 0) {\n      index = 0;\n    }\n    // Set starting index to last option index if greater than options.length\n    if (index >= options.length) {\n      index = options.length - 1;\n    }\n    let stepCounter = 0;\n    // If current index is a header or divider, or disabled, increment by step\n    while (options[index].itemType === DropdownMenuItemType.Header ||\n      options[index].itemType === DropdownMenuItemType.Divider ||\n      options[index].disabled) {\n      // If stepCounter exceeds length of options, then return selectedIndex (-1)\n      if (stepCounter >= options.length) {\n        return selectedIndex;\n      }\n      // If index + stepValue is out of bounds, wrap around\n      if (index + stepValue < 0) {\n        index = options.length;\n      } else if (index + stepValue >= options.length) {\n        index = -1;\n      }\n\n      index = index + stepValue;\n      stepCounter++;\n    }\n\n    this.setSelectedIndex(index);\n    return index;\n  }\n\n  // Render text in dropdown input\n  private _onRenderTitle = (item: IDropdownOption[]): JSX.Element => {\n    const { multiSelectDelimiter = ', ' } = this.props;\n\n    const displayTxt = item.map(i => i.text).join(multiSelectDelimiter);\n    return <span>{ displayTxt }</span>;\n  }\n\n  // Render placeHolder text in dropdown input\n  private _onRenderPlaceHolder = (props: IDropdownProps): JSX.Element | null => {\n    if (!props.placeHolder) {\n      return null;\n    }\n    return <span>{ props.placeHolder }</span>;\n  }\n\n  // Render Callout or Panel container and pass in list\n  private _onRenderContainer = (props: IDropdownProps): JSX.Element => {\n    const {\n      onRenderList = this._onRenderList,\n      responsiveMode,\n      calloutProps,\n      panelProps,\n      dropdownWidth\n    } = this.props;\n\n    const isSmall = responsiveMode! <= ResponsiveMode.medium;\n\n    return (\n      isSmall ?\n        (\n          <Panel\n            className={ css('ms-Dropdown-panel', styles.panel, !!panelProps && panelProps.className) }\n            isOpen={ true }\n            isLightDismiss={ true }\n            onDismissed={ this._onDismiss }\n            hasCloseButton={ false }\n            { ...panelProps }\n          >\n            { onRenderList(props, this._onRenderList) }\n          </Panel>\n        )\n        :\n        (\n          <Callout\n            isBeakVisible={ false }\n            gapSpace={ 0 }\n            doNotLayer={ false }\n            directionalHintFixed={ true }\n            directionalHint={ DirectionalHint.bottomLeftEdge }\n            { ...calloutProps }\n            className={ css('ms-Dropdown-callout', styles.callout, !!calloutProps && calloutProps.className) }\n            target={ this._dropDown.current }\n            onDismiss={ this._onDismiss }\n            onScroll={ this._onScroll }\n            onPositioned={ this._onPositioned }\n            calloutWidth={ dropdownWidth || (this._dropDown.current ? this._dropDown.current.clientWidth : 0) }\n          >\n            { onRenderList(props, this._onRenderList) }\n          </Callout>\n        )\n    );\n  }\n\n  // Render Caret Down Icon\n  private _onRenderCaretDown = (props: IDropdownProps): JSX.Element => {\n    return (\n      <Icon className={ css('ms-Dropdown-caretDown', styles.caretDown) } iconName='ChevronDown' />\n    );\n  }\n\n  // Render List of items\n  private _onRenderList = (props: IDropdownProps): JSX.Element => {\n    const {\n      onRenderItem = this._onRenderItem\n    } = this.props;\n\n    const id = this._id;\n    const { selectedIndices = [] } = this.state;\n\n    return (\n      <div\n        className={ styles.listWrapper }\n        onKeyDown={ this._onZoneKeyDown }\n        ref={ this._host }\n        tabIndex={ 0 }\n      >\n        <FocusZone\n          ref={ this._focusZone }\n          direction={ FocusZoneDirection.vertical }\n          defaultActiveElement={ selectedIndices[0] !== undefined ? `#${id}-list${selectedIndices[0]}` : undefined }\n          id={ id + '-list' }\n          className={ css('ms-Dropdown-items', styles.items) }\n          aria-labelledby={ id + '-label' }\n          role='listbox'\n        >\n          { this.props.options.map((item: any, index: number) => onRenderItem({ ...item, index }, this._onRenderItem)) }\n        </FocusZone>\n      </div>\n    );\n  }\n\n  // Render items\n  private _onRenderItem = (item: IDropdownOption): JSX.Element | null => {\n    switch (item.itemType) {\n      case SelectableOptionMenuItemType.Divider:\n        return this._renderSeparator(item);\n      case SelectableOptionMenuItemType.Header:\n        return this._renderHeader(item);\n      default:\n        return this._renderOption(item);\n    }\n  }\n\n  // Render separator\n  private _renderSeparator(item: IDropdownOption): JSX.Element | null {\n    const { index, key } = item;\n    if (index! > 0) {\n      return (\n        <div\n          role='separator'\n          key={ key }\n          className={ css('ms-Dropdown-divider', styles.divider) }\n        />\n      );\n    }\n    return null;\n  }\n\n  private _renderHeader(item: IDropdownOption): JSX.Element {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { key } = item;\n    return (\n      <div\n        key={ key }\n        className={ css('ms-Dropdown-header', styles.header) }\n      >\n        { onRenderOption(item, this._onRenderOption) }\n      </div>);\n  }\n\n  // Render menu item\n  private _renderOption = (item: IDropdownOption): JSX.Element => {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { selectedIndices = [] } = this.state;\n    const id = this._id;\n    const isItemSelected = item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\n    const checkboxStyles = getCheckboxStyles(getTheme());\n\n    return (\n      !this.props.multiSelect ?\n        (\n          <CommandButton\n            id={ id + '-list' + item.index }\n            ref={ Dropdown.Option + item.index }\n            key={ item.key }\n            data-index={ item.index }\n            data-is-focusable={ !item.disabled }\n            disabled={ item.disabled }\n            className={ css(\n              'ms-Dropdown-item', styles.item, {\n                ['is-selected ' + styles.itemIsSelected]: isItemSelected,\n                ['is-disabled ' + styles.itemIsDisabled]: item.disabled === true\n              }\n            ) }\n            onClick={ this._onItemClick(item) }\n            onMouseEnter={ this._onItemMouseEnter.bind(this, item) }\n            onMouseLeave={ this._onMouseItemLeave.bind(this, item) }\n            onMouseMove={ this._onItemMouseMove.bind(this, item) }\n            role='option'\n            aria-selected={ isItemSelected ? 'true' : 'false' }\n            ariaLabel={ item.ariaLabel || item.text }\n          >\n            { onRenderOption(item, this._onRenderOption) }\n          </CommandButton>\n        ) : (\n          <Checkbox\n            id={ id + '-list' + item.index }\n            ref={ Dropdown.Option + item.index }\n            key={ item.key }\n            data-index={ item.index }\n            data-is-focusable={ !item.disabled }\n            disabled={ item.disabled }\n            onChange={ this._onItemClick(item) }\n            inputProps={ {\n              onMouseEnter: this._onItemMouseEnter.bind(this, item),\n              onMouseLeave: this._onMouseItemLeave.bind(this, item),\n              onMouseMove: this._onItemMouseMove.bind(this, item)\n            } }\n            label={ item.text }\n            onRenderLabel={ this._onRenderLabel.bind(this, item) }\n            className={ css(\n              'ms-ColumnManagementPanel-checkbox',\n              styles.dropdownCheckbox,\n              'ms-Dropdown-item', styles.item, {\n                ['is-selected ' + styles.itemIsSelected]: isItemSelected,\n                ['is-disabled ' + styles.itemIsDisabled]: item.disabled\n              }\n            ) }\n            role='option'\n            aria-selected={ isItemSelected ? 'true' : 'false' }\n            checked={ isItemSelected }\n            // Hover is being handled by focus styles\n            // so clear out the explicit hover styles\n            styles={ {\n              checkboxHovered: checkboxStyles.checkbox,\n              checkboxCheckedHovered: checkboxStyles.checkboxChecked,\n              textHovered: checkboxStyles.text\n            } }\n          />\n        )\n    );\n  }\n\n  // Render content of item (i.e. text/icon inside of button)\n  private _onRenderOption = (item: IDropdownOption): JSX.Element => {\n    return <span className={ css('ms-Dropdown-optionText', styles.optionText) }>{ item.text }</span>;\n  }\n\n  // Render custom label for drop down item\n  private _onRenderLabel = (item: IDropdownOption): JSX.Element | null => {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    return onRenderOption(item, this._onRenderOption);\n  }\n\n  private _onPositioned = (): void => {\n    if (this._focusZone.current) {\n      // Focusing an element can trigger a reflow. Making this wait until there is an animation\n      // frame can improve perf significantly.\n      this._async.requestAnimationFrame(() => this._focusZone.current!.focus());\n    }\n  }\n\n  private _onItemClick = (item: IDropdownOption): () => void => {\n    return (): void => {\n      if (!item.disabled) {\n        this.setSelectedIndex(item.index!);\n        if (!this.props.multiSelect) {\n          // only close the callout when it's in single-select mode\n          this.setState({\n            isOpen: false\n          });\n        }\n      }\n    };\n  }\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  private _onScroll = (): void => {\n    if (!this._isScrollIdle && this._scrollIdleTimeoutId !== undefined) {\n      this._async.clearTimeout(this._scrollIdleTimeoutId);\n      this._scrollIdleTimeoutId = undefined;\n    } else {\n      this._isScrollIdle = false;\n    }\n\n    this._scrollIdleTimeoutId = this._async.setTimeout(() => { this._isScrollIdle = true; }, this._scrollIdleDelay);\n  }\n\n  private _onItemMouseEnter(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    if (!this._isScrollIdle) {\n      return;\n    }\n\n    const targetElement = ev.currentTarget as HTMLElement;\n    targetElement.focus();\n  }\n\n  private _onItemMouseMove(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    if (!this._isScrollIdle || document.activeElement === targetElement) {\n      return;\n    }\n\n    targetElement.focus();\n  }\n\n  private _onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (!this._isScrollIdle) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if (this._host.current) {\n      if ((this._host.current as any).setActive) {\n        (this._host.current as any).setActive();\n      } else {\n        this._host.current.focus();\n      }\n    }\n  }\n\n  private _onDismiss = (): void => {\n    this.setState({ isOpen: false });\n\n    if (this._dropDown.current) {\n      this._dropDown.current.focus();\n    }\n  }\n\n  // Get all selected indexes for multi-select mode\n  private _getSelectedIndexes(\n    options: IDropdownOption[],\n    selectedKey: string | number | string[] | number[] | undefined\n  ): number[] {\n    if (selectedKey === undefined) {\n      if (this.props.multiSelect) {\n        return this._getAllSelectedIndices(options);\n      }\n      const selectedIndex = this._getSelectedIndex(options, null);\n      return selectedIndex !== -1 ? [selectedIndex] : [];\n    } else if (!Array.isArray(selectedKey)) {\n      return [this._getSelectedIndex(options, selectedKey)];\n    }\n\n    const selectedIndices: number[] = [];\n    for (const key of selectedKey) {\n      selectedIndices.push(this._getSelectedIndex(options, key));\n    }\n    return selectedIndices;\n  }\n\n  // Get all selected options for multi-select mode\n  private _getAllSelectedOptions(options: IDropdownOption[], selectedIndices: number[]): IDropdownOption[] {\n    const selectedOptions: IDropdownOption[] = [];\n    for (const index of selectedIndices) {\n      const option = options[index];\n\n      if (option) {\n        selectedOptions.push(option);\n      }\n    }\n\n    return selectedOptions;\n  }\n\n  private _getAllSelectedIndices(options: IDropdownOption[]): number[] {\n    return options\n      .map((option: IDropdownOption, index: number) => option.selected ? index : -1)\n      .filter(index => index !== -1);\n\n  }\n\n  private _getSelectedIndex(options: IDropdownOption[], selectedKey: string | number | null): number {\n    return findIndex(options, (option => {\n      // tslint:disable-next-line:triple-equals\n      if (selectedKey != null) {\n        return option.key === selectedKey;\n      } else {\n        return !!option.isSelected || !!option.selected;\n      }\n    }));\n  }\n\n  private _onDropdownBlur = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    if (this.state.isOpen) {\n      // Do not onBlur when the callout is opened\n      return;\n    }\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  }\n\n  private _onDropdownKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n    let newIndex: number | undefined;\n    const selectedIndex = this.state.selectedIndices!.length ? this.state.selectedIndices![0] : -1;\n\n    switch (ev.which) {\n      case KeyCodes.enter:\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n        break;\n\n      case KeyCodes.escape:\n        if (!this.state.isOpen) {\n          return;\n        }\n\n        this.setState({\n          isOpen: false\n        });\n        break;\n\n      case KeyCodes.up:\n        if (this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else {\n          newIndex = this._moveIndex(-1, selectedIndex - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.down:\n        if (ev.altKey || ev.metaKey || this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else {\n          newIndex = this._moveIndex(1, selectedIndex + 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.home:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(1, 0, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.end:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(-1, this.props.options.length - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.space:\n        // event handled in _onDropdownKeyUp\n        break;\n\n      default:\n        if (ev.altKey || ev.metaKey) {\n          this.setState({\n            isOpen: false\n          });\n          ev.stopPropagation();\n          ev.preventDefault();\n        }\n        return;\n    }\n\n    if (newIndex !== selectedIndex) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  }\n\n  private _onDropdownKeyUp = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(ev);\n      if (ev.preventDefault) {\n        return;\n      }\n    }\n    switch (ev.which) {\n      case KeyCodes.space:\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n        break;\n\n      default:\n        return;\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n  private _onZoneKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    let elementToFocus;\n\n    switch (ev.which) {\n\n      case KeyCodes.up:\n        if (ev.altKey || ev.metaKey) {\n          this.setState({ isOpen: false });\n        } else {\n          if (this._host.current) {\n            elementToFocus = getLastFocusable(this._host.current, (this._host.current.lastChild as HTMLElement), true);\n          }\n        }\n        break;\n\n      // All directional keystrokes should be canceled when the zone is rendered.\n      // This avoids the body scroll from reacting and thus dismissing the dropdown.\n      case KeyCodes.home:\n      case KeyCodes.end:\n      case KeyCodes.pageUp:\n      case KeyCodes.pageDown:\n        break;\n\n      case KeyCodes.down:\n        if (this._host.current) {\n          elementToFocus = getFirstFocusable(this._host.current, (this._host.current.firstChild as HTMLElement), true);\n        }\n        break;\n\n      case KeyCodes.escape:\n        this.setState({ isOpen: false });\n        break;\n\n      case KeyCodes.tab:\n        this.setState({ isOpen: false });\n        return;\n\n      default:\n        if (ev.altKey || ev.metaKey) {\n          this.setState({\n            isOpen: false\n          });\n          break;\n        }\n        return;\n    }\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n  private _onDropdownClick = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    if (this.props.onClick) {\n      this.props.onClick(ev);\n      if (ev.preventDefault) {\n        return;\n      }\n    }\n    let { disabled } = this.props;\n    const { isDisabled } = this.props;\n    const { isOpen } = this.state;\n\n    // Remove this deprecation workaround at 1.0.0\n    if (isDisabled !== undefined) {\n      disabled = isDisabled;\n    }\n\n    if (!disabled) {\n      this.setState({\n        isOpen: !isOpen\n      });\n    }\n  }\n}\n"]}