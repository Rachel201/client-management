{"version":3,"file":"Fabric.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,aAAa,EACb,SAAS,EACT,YAAY,EACZ,cAAc,EACd,aAAa,EACb,kBAAkB,EAClB,SAAS,EACT,oBAAoB,EACrB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAG5C,IAAM,aAAa,GAAG,kBAAkB,EAAoC,CAAC;AAG7E;IAA4B,kCAE1B;IAGA,gBAAY,KAAmB;QAA/B,YACE,kBAAM,KAAK,CAAC,SAEb;QALO,kBAAY,GAAG,SAAS,EAAkB,CAAC;QAiC3C,kBAAY,GAAG,UAAC,EAAc;YACpC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAA;QAEO,gBAAU,GAAG,UAAC,EAAiB;YACrC,IAAI,oBAAoB,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;gBAClC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;aACzC;QACH,CAAC,CAAA;QArCC,KAAI,CAAC,KAAK,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;;IACzC,CAAC;IAEM,uBAAM,GAAb;QACE,IAAM,UAAU,GAAG,aAAa,CAAC,SAAS,uBAEnC,IAAI,CAAC,KAA0B,EAC/B,IAAI,CAAC,KAAK,EACb,CAAC;QACL,IAAM,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAE3D,OAAO,CACL,gDACO,QAAQ,IACb,SAAS,EAAG,UAAU,CAAC,IAAI,EAC3B,GAAG,EAAG,IAAI,CAAC,YAAY,IACvB,CACH,CAAC;IACJ,CAAC;IAEM,kCAAiB,GAAxB;QACE,IAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAE/C,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACxD;IACH,CAAC;IAlCU,MAAM;QADlB,YAAY,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;OACrB,MAAM,CA6ClB;IAAD,aAAC;CAAA,AA7CD,CAA4B,aAAa,GA6CxC;SA7CY,MAAM","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  createRef,\n  customizable,\n  getNativeProps,\n  divProperties,\n  classNamesFunction,\n  getWindow,\n  isDirectionalKeyCode\n} from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\n\n@customizable('Fabric', ['theme'])\nexport class Fabric extends BaseComponent<IFabricProps, {\n  isFocusVisible: boolean;\n}> {\n  private _rootElement = createRef<HTMLDivElement>();\n\n  constructor(props: IFabricProps) {\n    super(props);\n    this.state = { isFocusVisible: false };\n  }\n\n  public render() {\n    const classNames = getClassNames(getStyles,\n      {\n        ...this.props as IFabricStyleProps,\n        ...this.state\n      });\n    const divProps = getNativeProps(this.props, divProperties);\n\n    return (\n      <div\n        { ...divProps }\n        className={ classNames.root }\n        ref={ this._rootElement }\n      />\n    );\n  }\n\n  public componentDidMount(): void {\n    const win = getWindow(this._rootElement.value);\n\n    if (win) {\n      this._events.on(win, 'mousedown', this._onMouseDown, true);\n      this._events.on(win, 'keydown', this._onKeyDown, true);\n    }\n  }\n\n  private _onMouseDown = (ev: MouseEvent): void => {\n    this.setState({ isFocusVisible: false });\n  }\n\n  private _onKeyDown = (ev: KeyboardEvent): void => {\n    if (isDirectionalKeyCode(ev.which)) {\n      this.setState({ isFocusVisible: true });\n    }\n  }\n}\n"]}