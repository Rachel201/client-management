{"version":3,"file":"KeytipLayer.types.js","sourceRoot":"../src/","sources":["components/KeytipLayer/KeytipLayer.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyleFunction } from '../../Utilities';\nimport { IStyle } from '../../Styling';\nimport { IKeytipTransitionKey } from '../../utilities/keytips/IKeytipTransitionKey';\n\nexport interface IKeytipLayer {\n}\n\nexport interface IKeytipLayerProps extends React.Props<IKeytipLayer> {\n  /**\n   * Optional callback to access the KeytipLayer component. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IKeytipLayer | null) => void;\n\n  /**\n   * String to put inside the layer to be used for the aria-describedby for the component with the keytip\n   * Should be one of the starting sequences\n   *\n   * @type {string}\n   */\n  content: string;\n\n  /**\n  * List of key sequences that will start keytips mode\n  *\n  * @type {KeySequence}\n  */\n  keytipStartSequences?: IKeytipTransitionKey[];\n\n  /**\n   * List of key sequences that execute the return functionality in keytips (going back to the previous level of keytips)\n   *\n   * @type {KeySequence}\n   */\n  keytipReturnSequences?: IKeytipTransitionKey[];\n\n  /**\n   * List of key sequences that will exit keytips mode\n   *\n   * @type {KeySequence}\n   */\n  keytipExitSequences?: IKeytipTransitionKey[];\n\n  /**\n   * Callback function triggered when keytip mode is exited\n   *\n   * @type {() => void}\n   */\n  onExitKeytipMode?: () => void;\n\n  /**\n   * Callback function triggered when keytip mode is entered\n   *\n   * @type {() => void)}\n   */\n  onEnterKeytipMode?: () => void;\n\n  /**\n   * getStyles function for KeytipLayer\n   */\n  getStyles?: IStyleFunction<IKeytipLayerStyleProps, IKeytipLayerStyles>;\n}\n\nexport interface IKeytipLayerStyles {\n  innerContent: IStyle;\n}\n\nexport interface IKeytipLayerStyleProps {\n}"]}