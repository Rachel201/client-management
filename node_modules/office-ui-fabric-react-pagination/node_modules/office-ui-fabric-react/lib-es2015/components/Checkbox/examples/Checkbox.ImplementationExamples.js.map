{"version":3,"file":"Checkbox.ImplementationExamples.js","sourceRoot":"../src/","sources":["components/Checkbox/examples/Checkbox.ImplementationExamples.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,QAAQ,EAGT,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EACL,OAAO,EACP,WAAW,EACZ,MAAM,oCAAoC,CAAC;AAM5C;IAAoD,0DAA+C;IAEjG,wCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAOb;QAwEO,iCAA2B,GAAG,UAAC,EAAgC,EAAE,OAAgB;YACvF,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAQ,EAAE,CAAC,CAAC;QACzC,CAAC,CAAA;QA/EC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC7D,CAAC;IAEM,+CAAM,GAAb;QACU,IAAA,gCAAS,CAAgB;QAEjC,IAAM,MAAM,GAAoB;YAC9B,IAAI,EAAE;gBACJ,SAAS,EAAE,MAAM;aAClB;SACF,CAAC;QAEF,OAAO,CACL;YACE,oBAAC,QAAQ,IACP,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,UAAU,EAAG;oBACX,OAAO,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAC,CAAC;oBACnE,MAAM,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC;iBAClE,EACD,MAAM,EAAG,MAAM,EACf,eAAe,EAAG,eAAe,GACjC;YACF,+BAAO,EAAE,EAAC,eAAe,EAAC,SAAS,EAAC,kBAAkB,wCAA0C;YAEhG,oBAAC,QAAQ,IACP,KAAK,EAAC,gDAAgD,EACtD,cAAc,EAAG,IAAI,EACrB,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,QAAQ,IACP,KAAK,EAAC,gCAAgC,EACtC,QAAQ,EAAG,IAAI,EACf,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,QAAQ,IACP,KAAK,EAAC,yDAAyD,EAC/D,QAAQ,EAAG,IAAI,EACf,cAAc,EAAG,IAAI,EACrB,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,QAAQ,IACP,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAG,SAAS,EACnB,QAAQ,EAAG,IAAI,CAAC,2BAA2B,EAC3C,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,QAAQ,IACP,KAAK,EAAC,sCAAsC,EAC5C,OAAO,EAAC,KAAK,EACb,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,QAAQ,IACP,KAAK,EAAC,kBAAkB,EACxB,MAAM,EAAG,MAAM,EACf,aAAa,EAAG,IAAI,CAAC,mBAAmB,GACxC,CACE,CACP,CAAC;IACJ,CAAC;IAEO,0DAAiB,GAAzB,UAA0B,EAAgC,EAAE,SAAkB;QAC5E,OAAO,CAAC,GAAG,CAAC,oCAAkC,SAAS,MAAG,CAAC,CAAC;IAC9D,CAAC;IAMO,4DAAmB,GAA3B,UAA4B,KAAqB;QAC/C,IAAM,iBAAiB,GAAG,iDAAiD,CAAC;QAC5E,OAAO,oBAAC,OAAO,IAAC,IAAI,EAAG,KAAK,CAAC,KAAK,EAAG,QAAQ,EAAG,iBAAiB,EAAG,IAAI,EAAG,WAAW,CAAC,MAAM,GAAK,CAAC;IACrG,CAAC;IACH,qCAAC;AAAD,CAAC,AA1FD,CAAoD,KAAK,CAAC,SAAS,GA0FlE","sourcesContent":["import * as React from 'react';\nimport {\n  Checkbox,\n  ICheckboxStyles,\n  ICheckboxProps\n} from 'office-ui-fabric-react/lib/Checkbox';\nimport {\n  Persona,\n  PersonaSize\n} from 'office-ui-fabric-react/lib/Persona';\n\nexport interface ICheckboxBasicExampleState {\n  isChecked: boolean;\n}\n\nexport class CheckboxImplementationExamples extends React.Component<{}, ICheckboxBasicExampleState> {\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isChecked: false\n    };\n\n    this._onCheckboxChange = this._onCheckboxChange.bind(this);\n  }\n\n  public render(): JSX.Element {\n    const { isChecked } = this.state;\n\n    const styles: ICheckboxStyles = {\n      root: {\n        marginTop: '10px'\n      }\n    };\n\n    return (\n      <div>\n        <Checkbox\n          label='Uncontrolled checkbox'\n          onChange={ this._onCheckboxChange }\n          inputProps={ {\n            onFocus: () => { console.log('Uncontrolled checkbox is focused'); },\n            onBlur: () => { console.log('Uncontrolled checkbox is blured'); }\n          } }\n          styles={ styles }\n          ariaDescribedBy={ 'descriptionID' }\n        />\n        <label id='descriptionID' className='screenReaderOnly'>Uncontroller checkbox description</label>\n\n        <Checkbox\n          label='Uncontrolled checkbox with defaultChecked true'\n          defaultChecked={ true }\n          onChange={ this._onCheckboxChange }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Disabled uncontrolled checkbox'\n          disabled={ true }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Disabled uncontrolled checkbox with defaultChecked true'\n          disabled={ true }\n          defaultChecked={ true }\n          onChange={ this._onCheckboxChange }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Controlled checkbox'\n          checked={ isChecked }\n          onChange={ this._onControlledCheckboxChange }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Checkbox rendered with boxSide \"end\"'\n          boxSide='end'\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Persona Checkbox'\n          styles={ styles }\n          onRenderLabel={ this._renderPersonaLabel }\n        />\n      </div>\n    );\n  }\n\n  private _onCheckboxChange(ev: React.FormEvent<HTMLElement>, isChecked: boolean): void {\n    console.log(`The option has been changed to ${isChecked}.`);\n  }\n\n  private _onControlledCheckboxChange = (ev: React.FormEvent<HTMLElement>, checked: boolean): void => {\n    this.setState({ isChecked: checked! });\n  }\n\n  private _renderPersonaLabel(props: ICheckboxProps): JSX.Element {\n    const DEFAULT_IMAGE_URL = '/_layouts/15/userphoto.aspx?size=S&accountname=';\n    return <Persona text={ props.label } imageUrl={ DEFAULT_IMAGE_URL } size={ PersonaSize.size32 } />;\n  }\n}\n"]}