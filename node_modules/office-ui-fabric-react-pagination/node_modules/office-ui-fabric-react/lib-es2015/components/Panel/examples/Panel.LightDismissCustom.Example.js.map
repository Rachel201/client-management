{"version":3,"file":"Panel.LightDismissCustom.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.LightDismissCustom.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AACjF,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAEzD;IAAoD,0DAGlD;IAEA,wCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAGb;QA0CO,gBAAU,GAAG;YACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC,CAAA;QAEO,gBAAU,GAAG;YACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAA;QAEO,iBAAW,GAAG;YACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAA;QAEO,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC,CAAA;QAEO,8BAAwB,GAAG;YACjC,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAA;QA9DC,KAAI,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;;IACtD,CAAC;IAEM,+CAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,aAAa,IACZ,IAAI,EAAC,YAAY,EACjB,OAAO,EAAG,IAAI,CAAC,UAAU,GACzB;YACF,oBAAC,KAAK,IACJ,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAC7B,cAAc,EAAG,IAAI,EACrB,UAAU,EAAC,qBAAqB,EAChC,SAAS,EAAG,IAAI,CAAC,UAAU,EAC3B,mBAAmB,EAAG,IAAI,CAAC,WAAW;gBAEtC,sHAA8F,CACxF;YACR,oBAAC,MAAM,IACL,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAC9B,SAAS,EAAG,IAAI,CAAC,YAAY,EAC7B,kBAAkB,EAAG;oBACnB,IAAI,EAAE,UAAU,CAAC,MAAM;oBACvB,KAAK,EAAE,2CAA2C;iBACnD,EACD,UAAU,EAAG;oBACX,WAAW,EAAE,WAAW;oBACxB,cAAc,EAAE,aAAa;oBAC7B,UAAU,EAAE,IAAI;oBAChB,kBAAkB,EAAE,uBAAuB;iBAC5C;gBAEC,IAAI,CAAC,qEAAqE;gBAC5E,oBAAC,YAAY;oBACX,oBAAC,aAAa,IAAC,OAAO,EAAG,IAAI,CAAC,wBAAwB,EAAG,IAAI,EAAC,KAAK,GAAG;oBACtE,oBAAC,aAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,EAAG,IAAI,EAAC,IAAI,GAAG,CAC5C,CACR,CACL,CACP,CAAC;IACJ,CAAC;IAsBH,qCAAC;AAAD,CAAC,AAvED,CAAoD,KAAK,CAAC,SAAS,GAuElE","sourcesContent":["import * as React from 'react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\n\nexport class PanelLightDismissCustomExample extends React.Component<{}, {\n  showPanel: boolean;\n  hideDialog: boolean;\n}> {\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = { showPanel: false, hideDialog: true };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <DefaultButton\n          text='Open panel'\n          onClick={ this._showPanel }\n        />\n        <Panel\n          isOpen={ this.state.showPanel }\n          isLightDismiss={ true }\n          headerText='Light Dismiss Panel'\n          onDismiss={ this._hidePanel }\n          onLightDismissClick={ this._showDialog }\n        >\n          <span>Light Dismiss usage is meant for the Contextual Menu on mobile sized breakpoints.</span>\n        </Panel>\n        <Dialog\n          hidden={ this.state.hideDialog }\n          onDismiss={ this._closeDialog }\n          dialogContentProps={ {\n            type: DialogType.normal,\n            title: 'Are you sure you want to close the panel?'\n          } }\n          modalProps={ {\n            titleAriaId: 'myLabelId',\n            subtitleAriaId: 'mySubTextId',\n            isBlocking: true,\n            containerClassName: 'ms-dialogMainOverride'\n          } }\n        >\n          { null /** You can also include null values as the result of conditionals */ }\n          <DialogFooter>\n            <PrimaryButton onClick={ this._closeDialogAndHidePanel } text='Yes' />\n            <DefaultButton onClick={ this._closeDialog } text='No' />\n          </DialogFooter>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private _showPanel = (): void => {\n    this.setState({ showPanel: true });\n  }\n\n  private _hidePanel = (): void => {\n    this.setState({ showPanel: false });\n  }\n\n  private _showDialog = (): void => {\n    this.setState({ hideDialog: false });\n  }\n\n  private _closeDialog = (): void => {\n    this.setState({ hideDialog: true });\n  }\n\n  private _closeDialogAndHidePanel = (): void => {\n    this._hidePanel();\n    this._closeDialog();\n  }\n}\n"]}