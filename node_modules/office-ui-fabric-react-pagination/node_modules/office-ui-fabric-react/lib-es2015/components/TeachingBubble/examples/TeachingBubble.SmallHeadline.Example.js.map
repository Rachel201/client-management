{"version":3,"file":"TeachingBubble.SmallHeadline.Example.js","sourceRoot":"../src/","sources":["components/TeachingBubble/examples/TeachingBubble.SmallHeadline.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAgB,MAAM,mCAAmC,CAAC;AAChF,OAAO,EAAE,cAAc,EAAE,MAAM,2CAA2C,CAAC;AAM3E;IAAwD,8DAA6D;IAGnH,4CAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAOb;QALC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAE7C,KAAI,CAAC,KAAK,GAAG;YACX,uBAAuB,EAAE,KAAK;SAC/B,CAAC;;IACJ,CAAC;IAEM,mDAAM,GAAb;QAAA,iBA8BC;QA7BS,IAAA,4DAAuB,CAAgB;QAC/C,IAAM,oBAAoB,GAAiB;YACzC,QAAQ,EAAE,YAAY;SACvB,CAAC;QAEF,OAAO,CACL,6BAAK,SAAS,EAAC,0BAA0B;YACvC,8BAAM,SAAS,EAAC,0CAA0C,EAAC,GAAG,EAAG,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,kBAAkB,GAAG,UAAW,EAArC,CAAqC;gBACpH,oBAAC,aAAa,IACZ,OAAO,EAAG,IAAI,CAAC,UAAU,EACzB,IAAI,EAAG,uBAAuB,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,qBAAqB,GAC9E,CACG;YACL,uBAAuB,CAAC,CAAC,CAAC,CAC1B;gBACE,oBAAC,cAAc,IACb,aAAa,EAAG,IAAI,CAAC,kBAAkB,EACvC,gBAAgB,EAAG,IAAI,EACvB,SAAS,EAAG,IAAI,CAAC,UAAU,EAC3B,YAAY,EAAG,IAAI,EACnB,kBAAkB,EAAG,oBAAoB,EACzC,QAAQ,EAAC,0CAAqC,8HAG/B,CACb,CACP,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACN,CACP,CAAC;IACJ,CAAC;IAEO,uDAAU,GAAlB,UAAmB,EAAO;QACxB,IAAI,CAAC,QAAQ,CAAC;YACZ,uBAAuB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,uBAAuB;SAC7D,CAAC,CAAC;IACL,CAAC;IACH,yCAAC;AAAD,CAAC,AAlDD,CAAwD,KAAK,CAAC,SAAS,GAkDtE","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { TeachingBubble } from 'office-ui-fabric-react/lib/TeachingBubble';\n\nexport interface ITeachingBubbleSmallHeadlineExampleState {\n  isTeachingBubbleVisible?: boolean;\n}\n\nexport class TeachingBubbleSmallHeadlineExample extends React.Component<{}, ITeachingBubbleSmallHeadlineExampleState> {\n  private _menuButtonElement: HTMLElement;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._onDismiss = this._onDismiss.bind(this);\n\n    this.state = {\n      isTeachingBubbleVisible: false,\n    };\n  }\n\n  public render(): JSX.Element {\n    const { isTeachingBubbleVisible } = this.state;\n    const examplePrimaryButton: IButtonProps = {\n      children: 'Try it out',\n    };\n\n    return (\n      <div className='ms-TeachingBubbleExample'>\n        <span className='ms-TeachingBubbleBasicExample-buttonArea' ref={ (menuButton) => this._menuButtonElement = menuButton! }>\n          <DefaultButton\n            onClick={ this._onDismiss }\n            text={ isTeachingBubbleVisible ? 'Hide TeachingBubble' : 'Show TeachingBubble' }\n          />\n        </span>\n        { isTeachingBubbleVisible ? (\n          <div>\n            <TeachingBubble\n              targetElement={ this._menuButtonElement }\n              hasSmallHeadline={ true }\n              onDismiss={ this._onDismiss }\n              hasCloseIcon={ true }\n              primaryButtonProps={ examplePrimaryButton }\n              headline='Discover whatâ€™s trending around you'\n            >\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere, nulla, ipsum? Molestiae quis aliquam magni harum non?\n            </TeachingBubble>\n          </div>\n        ) : (null) }\n      </div>\n    );\n  }\n\n  private _onDismiss(ev: any): void {\n    this.setState({\n      isTeachingBubbleVisible: !this.state.isTeachingBubbleVisible\n    });\n  }\n}\n"]}