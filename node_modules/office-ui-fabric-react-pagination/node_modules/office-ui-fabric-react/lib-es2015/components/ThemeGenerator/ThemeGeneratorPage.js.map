{"version":3,"file":"ThemeGeneratorPage.js","sourceRoot":"../src/","sources":["components/ThemeGenerator/ThemeGeneratorPage.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,2BAA2B,CAAC;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AAErE,OAAO,EACL,SAAS,EACV,MAAM,oCAAoC,CAAC;AAC5C,OAAO,EAEL,gBAAgB,EAChB,MAAM,GACP,MAAM,kDAAkD,CAAC;AAE1D,OAAO,EACL,cAAc,EACd,yBAAyB,EACzB,SAAS,EACT,WAAW,EAGZ,MAAM,2CAA2C,CAAC;AAEnD,OAAO,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,wCAAwC,CAAC;AAErE,OAAO,EAAE,WAAW,EAAE,MAAM,wCAAwC,CAAC;AACrE,OAAO,EAAE,0BAA0B,EAAE,MAAM,uEAAuE,CAAC;AACnH,OAAO,EAAE,qBAAqB,EAAE,MAAM,+CAA+C,CAAC;AACtF,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,6BAA6B,EAAE,MAAM,+DAA+D,CAAC;AAS9G;IAAwC,8CAA2C;IAGjF,4BAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAWb;QAkLO,2BAAqB,GAAG;YAC9B,KAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAA;QAEO,8BAAwB,GAAG,UAAC,QAAwB,EAAE,KAAa;YACzE,IAAI,KAAI,CAAC,+BAA+B,EAAE;gBACxC,YAAY,CAAC,KAAI,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,KAAI,CAAC,+BAA+B,GAAG,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC;gBACpD,IAAA,mCAAU,CAAgB;gBAElC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACrH,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;YAChE,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,kFAAkF;YAClF,0FAA0F;QAC5F,CAAC,CAAA;QAEO,oBAAc,GAAG,UAAC,QAAwB,EAAE,EAAiC;YAC7E,IAAA,gBAAwD,EAAtD,4CAAmB,EAAE,0CAAkB,CAAgB;YAE/D,IAAI,mBAAmB,KAAK,IAAI,IAAI,mBAAmB,KAAK,SAAS,IAAI,CAAC,CAAC,kBAAkB,IAAI,mBAAmB,KAAK,QAAQ,IAAI,kBAAkB,KAAK,EAAE,CAAC,MAAM,EAAE,EAAE,qBAAqB;gBAC5L,KAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAE,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;aACnG;iBAAM,EAAE,mBAAmB;gBAC1B,KAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,mBAAmB,EAAE,QAAQ,EAAE,kBAAkB,EAAE,EAAE,CAAC,MAAqB,EAAE,CAAC,CAAC;aAC1H;QACH,CAAC,CAAA;QAEO,iBAAW,GAAG,UAAC,QAAwB;YAC7C,OAAO,CACL,6BAAK,GAAG,EAAG,QAAQ,CAAC,IAAI,EAAG,SAAS,EAAC,gBAAgB;gBACjD,KAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC;gBACzC;oBACE,iCAAO,QAAQ,CAAC,IAAI,CAAQ;oBAC1B,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;wBACxB;;4BAAsB,QAAQ,CAAC,QAAS,CAAC,IAAI,CAAQ;wBACrD,CAAC,CAAC,8CAAqB,CACrB,CACF,CACP,CAAC;QACJ,CAAC,CAAA;QAEO,uBAAiB,GAAG,UAAC,UAAuB;YAClD,OAAO,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAA;QAaO,uBAAiB,GAAG,UAAC,UAAuB,EAAE,UAAuB;YAC3E,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YACzC,IAAM,GAAG,GAAW,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAM,CAAC;YAC/D,IAAM,GAAG,GAAW,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAM,CAAC;YAE/D,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACjD,IAAI,mBAAmB,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;YAChD,mBAAmB,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAAE,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1F,IAAI,aAAa,GAAG,GAAG,EAAE;gBACvB,mBAAmB,GAAG,IAAI,GAAG,mBAAmB,GAAG,IAAI,CAAC;aACzD;YAED,OAAO,CACL,4BAAI,GAAG,EAAG,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;gBAC/C,4BAAI,KAAK,EAAG,EAAE,eAAe,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,mDAAoD;gBAC5G,gCAAM,mBAAmB,CAAO;gBAChC,gCAAM,WAAW,CAAC,UAAU,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,UAAU,CAAC,CAAO,CACnE,CACN,CAAC;QACJ,CAAC,CAAA;QAEO,oBAAc,GAAG;YACvB,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAEzC,oEAAoE;YACpE,IAAM,aAAa,GAAgB,EAAE,CAAC;YACtC,KAAK,IAAM,QAAQ,IAAI,UAAU,EAAE;gBACjC,IAAI,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBACvC,IAAI,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,KAAK,cAAc,IAAI,QAAQ,KAAK,iBAAiB,IAAI,QAAQ,KAAK,iBAAiB,EAAE;wBAC5I,aAAa,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;qBAChD;iBACF;aACF;YAED,OAAO,CACL;gBACE,4BAAI,EAAE,EAAC,QAAQ,aAAY;gBAC3B,6BAAK,SAAS,EAAG,uBAAuB;oBACtC;wBACE,uCAAa;wBACb,kCACE,QAAQ,EAAG,IAAI,EACf,UAAU,EAAG,KAAK,EAClB,KAAK,EAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,GAC/E,CACE;oBACN;wBACE,uCAAa;wBACb,kCACE,QAAQ,EAAG,IAAI,EACf,UAAU,EAAG,KAAK,EAClB,KAAK,EAAG,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,GACpD,CACE;oBACN;wBACE,6CAAmB;wBACnB,kCACE,QAAQ,EAAG,IAAI,EACf,UAAU,EAAG,KAAK,EAClB,KAAK,EAAG,cAAc,CAAC,qBAAqB,CAAC,aAAa,CAAC,GAC3D,CACE,CACF,CACF,CACP,CAAC;QACJ,CAAC,CAAA;QAEO,mBAAa,GAAG;YACtB,IAAM,WAAW,GAA8B,cAAc,CAAC,cAAc,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACpG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;YAEzC,IAAM,UAAU,GAAG,SAAS,kBACvB,EAAE,OAAO,EAAE,WAAW,EAAE,IAC3B,UAAU,EAAE,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAM,CAAC,IACtF,CAAC;YAEH,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAgB,CAAC;YACnE,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC;gBACtE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC;aACvD;YAED,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC;YAC/E,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QACxC,CAAC,CAAA;QAEO,0BAAoB,GAAG,UAAC,QAAmB,EAAE,KAAa;YAChE,IAAI,kBAA0B,CAAC;YAE/B,yBAAyB,QAAgB;gBAAzC,iBAqBC;gBApBC,IAAI,kBAAkB,EAAE;oBACtB,YAAY,CAAC,kBAAkB,CAAC,CAAC;iBAClC;gBACD,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBAC1C,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;oBACzC,IAAM,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAM,CAAC,CAAC;oBACtF,cAAc,CAAC,OAAO,CACpB,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAC/B,QAAQ,EACR,aAAa,EACb,IAAI,EACJ,IAAI,CAAC,CAAC;oBACR,IAAI,aAAa,KAAK,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAM,CAAC,EAAE;wBACrF,0EAA0E;wBAC1E,cAAc,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,aAAa,CAAC,CAAC;qBACxD;oBACD,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;gBAChE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACP,kFAAkF;gBAClF,0FAA0F;YAC5F,CAAC;YAED,OAAO,CACL,6BAAK,SAAS,EAAC,uBAAuB,EAAC,GAAG,EAAG,QAAQ;gBACnD,gCAAM,KAAK,CAAO;gBAClB;oBACE,oBAAC,WAAW,IACV,GAAG,EAAG,qBAAqB,GAAG,QAAQ,EACtC,KAAK,EAAG,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAM,CAAC,GAAG;wBAC7D,gCAAgC;wBAChC,cAAc,EAAG,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,GAE3C,CACE;gBACN,6BAAK,SAAS,EAAC,oBAAoB,EAAC,KAAK,EAAG,EAAE,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAM,CAAC,GAAG,EAAE;oBACpH,6BAAK,SAAS,EAAC,kBAAkB,EAAC,KAAK,EAAG,EAAE,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAM,CAAC,GAAG,EAAE,GAAK;oBACvH,CAAC,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACvF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CACjF,CACF,CACP,CAAC;QACJ,CAAC,CAAA;QA9XC,IAAM,UAAU,GAAG,yBAAyB,EAAE,CAAC;QAC/C,cAAc,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC;QAExG,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,UAAU;YACtB,mBAAmB,EAAE,IAAI;YACzB,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,KAAK;SAC1B,CAAC;;IACJ,CAAC;IAEM,iDAAoB,GAA3B;QACE,qBAAqB;QACrB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAgB,CAAC;QACnE,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SACvB;QACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;QACzC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAE/B,qEAAqE;QACrE,IAAM,UAAU,GAAG,yBAAyB,EAAE,CAAC;QAC/C,cAAc,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC9C,SAAS,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACrC,CAAC;IAEM,mCAAM,GAAb;QACQ,IAAA,eAA4E,EAA1E,0CAAkB,EAAE,4CAAmB,EAAE,0CAAkB,CAAgB;QAEnF,IAAM,gBAAgB,GACpB,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,WAAW,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,CAAC;YAC7C,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,CAAC;YAClD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,aAAa,CAAC;YACjD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,UAAU,CAAC;YAC9C,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;QACvD,IAAM,4BAA4B,GAChC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,WAAW,CAAC;YAC/C,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,CAAC;YAClD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACrD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,gBAAgB,CAAC;YACpD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,eAAe,CAAC;SAClD,CAAC;QACJ,IAAM,4BAA4B,GAChC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,kBAAkB,CAAC;YACvD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACrD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,oBAAoB,CAAC;YACxD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,CAAC;YAClD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACrD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QAE7C,OAAO,CACL,6BAAK,SAAS,EAAC,WAAW;YACxB,6BAAK,SAAS,EAAC,UAAU;gBACvB,4BAAI,EAAE,EAAC,UAAU,eAAc;gBAC/B;;oBACiE,2BAAG,SAAS,EAAG,wBAAwB,EAAG,IAAI,EAAC,kFAAkF,oBAAkB;;oBACpN,+BAAM;oLAC6J,CAC/J;YAoBJ,kBAAkB,IAAI,mBAAmB,KAAK,IAAI,IAAI,mBAAmB,KAAK,SAAS,IAAI,kBAAkB;gBAC7G,oBAAC,OAAO,IACN,GAAG,EAAG,mBAAmB,CAAC,IAAI,EAC9B,QAAQ,EAAG,EAAE,EACb,MAAM,EAAG,kBAAkB,EAC3B,eAAe,EAAG,IAAI,EACtB,SAAS,EAAG,IAAI,CAAC,qBAAqB;oBAEtC,oBAAC,WAAW,IACV,KAAK,EAAG,mBAAmB,CAAC,KAAM,CAAC,GAAG,EACtC,cAAc,EAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,CAAC,GAC9E,CACM;YAIZ,6BAAK,KAAK,EAAG,EAAE,OAAO,EAAE,MAAM,EAAE,IAC5B,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,YAAY,EAAE,qBAAqB,CAAC;gBAC3E,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,eAAe,EAAE,iBAAiB,CAAC;gBACvE,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,eAAe,EAAE,uBAAuB,CAAC,CAAC,CAC1E;YACN,+BAAM;YAEJ,IAAI,CAAC,cAAc,EAAE;YACvB,+BAAM;YAEN,4BAAI,EAAE,EAAC,gBAAgB,qBAAoB;YAC3C,iKAAsI;YACtI,6BAAK,SAAS,EAAG,8BAA8B;gBAC7C,iCAAO,gBAAgB,CAAQ;gBAC/B;oBACE,yEAA8C;oBAC5C,4BAA4B,CAC1B;gBACN;oBACE,gEAAqC;oBACnC,4BAA4B,CAC1B,CACF;YACN,+BAAM;YAEN,4BAAI,EAAE,EAAC,SAAS,cAAa;YAC3B,6BAAK,KAAK,EAAG,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE;gBACtD,6BAAK,SAAS,EAAC,mBAAmB;oBAChC,oBAAC,qBAAqB,OAAG,CACrB;gBACN,6BAAK,SAAS,EAAC,mBAAmB;oBAChC,oBAAC,kBAAkB,OAAG;oBACtB,oBAAC,WAAW,IACV,OAAO,EAAG;4BACR;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;6BACjB;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE,IAAI;6BACd;yBAAC,EACJ,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf;oBACF,oBAAC,WAAW,IACV,OAAO,EAAG;4BACR;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,QAAQ,EAAE,IAAI;6BACf;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE,IAAI;gCACb,QAAQ,EAAE,IAAI;6BACf;yBAAC,EACJ,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf,CACE;gBACN,6BAAK,SAAS,EAAC,mBAAmB;oBAChC,oBAAC,0BAA0B,OAAG;oBAC9B,+BAAM;oBACN,oBAAC,6BAA6B,OAAG,CAC7B,CACF;YAEN,4BAAI,EAAE,EAAC,eAAe,oBAAmB;YACzC,iIAAsG;YACtG,+BAAO,SAAS,EAAC,8BAA8B;gBAC7C;oBACE,8CAAoB;oBACpB,iDAAuB;oBACvB,4CAAkB,CACZ;gBACR,mCACI,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CACnE,CACF,CACJ,CACP,CAAC;IACJ,CAAC;IAgDO,qDAAwB,GAAhC,UAAiC,QAAwB;QACvD,OAAO,CACL,6BACE,GAAG,EAAG,QAAQ,CAAC,IAAI,EACnB,SAAS,EAAC,kBAAkB,EAC5B,KAAK,EAAG,EAAE,eAAe,EAAE,QAAQ,CAAC,KAAM,CAAC,GAAG,EAAE,EAChD,OAAO,EAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,GAClD,CACH,CAAC;IACJ,CAAC;IA6IH,yBAAC;AAAD,CAAC,AArYD,CAAwC,aAAa,GAqYpD","sourcesContent":["import * as React from 'react';\nimport './ThemeGeneratorPage.scss';\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\n\nimport {\n  loadTheme\n} from 'office-ui-fabric-react/lib/Styling';\nimport {\n  IColor,\n  getContrastRatio,\n  isDark,\n} from 'office-ui-fabric-react/lib/utilities/color/index';\n\nimport {\n  ThemeGenerator,\n  themeRulesStandardCreator,\n  BaseSlots,\n  FabricSlots,\n  IThemeSlotRule,\n  IThemeRules\n} from 'office-ui-fabric-react/lib/ThemeGenerator';\n\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport { ColorPicker } from 'office-ui-fabric-react/lib/ColorPicker';\n\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { TeachingBubbleBasicExample } from '../../components/TeachingBubble/examples/TeachingBubble.Basic.Example';\nimport { TextFieldBasicExample } from '../TextField/examples/TextField.Basic.Example';\nimport { ToggleBasicExample } from '../../components/Toggle/examples/Toggle.Basic.Example';\nimport { ProgressIndicatorBasicExample } from '../ProgressIndicator/examples/ProgressIndicator.Basic.Example';\n\nexport interface IThemeGeneratorPageState {\n  themeRules: IThemeRules;\n  colorPickerSlotRule: IThemeSlotRule | null;\n  colorPickerElement: HTMLElement | null;\n  colorPickerVisible: boolean;\n}\n\nexport class ThemeGeneratorPage extends BaseComponent<{}, IThemeGeneratorPageState> {\n  private _semanticSlotColorChangeTimeout: number;\n\n  constructor(props: {}) {\n    super(props);\n\n    const themeRules = themeRulesStandardCreator();\n    ThemeGenerator.insureSlots(themeRules, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!));\n\n    this.state = {\n      themeRules: themeRules,\n      colorPickerSlotRule: null,\n      colorPickerElement: null,\n      colorPickerVisible: false\n    };\n  }\n\n  public componentWillUnmount(): void {\n    // remove temp styles\n    const root = document.querySelector('.App-content') as HTMLElement;\n    if (root) {\n      root.style.backgroundColor = '';\n      root.style.color = '';\n    }\n    document.body.style.backgroundColor = '';\n    document.body.style.color = '';\n\n    // and apply the default theme to overwrite any existing custom theme\n    const themeRules = themeRulesStandardCreator();\n    ThemeGenerator.insureSlots(themeRules, false);\n    loadTheme({ palette: themeRules });\n  }\n\n  public render(): JSX.Element {\n    const { colorPickerVisible, colorPickerSlotRule, colorPickerElement } = this.state;\n\n    const fabricThemeSlots =\n      [this._fabricSlotWidget(FabricSlots.themeDarker),\n      this._fabricSlotWidget(FabricSlots.themeDark),\n      this._fabricSlotWidget(FabricSlots.themeDarkAlt),\n      this._fabricSlotWidget(FabricSlots.themePrimary),\n      this._fabricSlotWidget(FabricSlots.themeSecondary),\n      this._fabricSlotWidget(FabricSlots.themeTertiary),\n      this._fabricSlotWidget(FabricSlots.themeLight),\n      this._fabricSlotWidget(FabricSlots.themeLighter),\n      this._fabricSlotWidget(FabricSlots.themeLighterAlt)];\n    const fabricNeutralForegroundSlots =\n      [this._fabricSlotWidget(FabricSlots.black),\n      this._fabricSlotWidget(FabricSlots.neutralDark),\n      this._fabricSlotWidget(FabricSlots.neutralPrimary),\n      this._fabricSlotWidget(FabricSlots.neutralPrimaryAlt),\n      this._fabricSlotWidget(FabricSlots.neutralSecondary),\n      this._fabricSlotWidget(FabricSlots.neutralTertiary)\n      ];\n    const fabricNeutralBackgroundSlots =\n      [this._fabricSlotWidget(FabricSlots.neutralTertiaryAlt),\n      this._fabricSlotWidget(FabricSlots.neutralQuaternary),\n      this._fabricSlotWidget(FabricSlots.neutralQuaternaryAlt),\n      this._fabricSlotWidget(FabricSlots.neutralLight),\n      this._fabricSlotWidget(FabricSlots.neutralLighter),\n      this._fabricSlotWidget(FabricSlots.neutralLighterAlt),\n      this._fabricSlotWidget(FabricSlots.white)];\n\n    return (\n      <div className='ms-themer'>\n        <div className='overview'>\n          <h2 id='Overview'>Overview</h2>\n          <p>This tool helps you easily create all the shades and slots for a custom theme.\n          The theme can be used by Fabric React's styling package, see the <a className={ 'themeGeneratorPageLink' } href='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/styling'>documentation</a>.\n          <br />\n            As you modify one of the three base colors, the theme will update automatically based on predefined rules. You can modify each individual slot below as well.</p>\n        </div>\n        {/* Hello! You've found hidden functionality for generating a theme from an image. This uses Microsoft's\n          * Cognitive Vision API, documented here:\n          * https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/javascript\n          * We use that API to identify the most prominent background and foreground colors, and the accent color,\n          * and generate a theme based off of those.\n          * Since this API requires a personal subscription key, you'll have to enlist and insert your subscription\n          * key in _makeThemeFromImg() @ https://raw.githubusercontent.com/cliffkoh/office-ui-fabric-react/9c95e9b92f8caa1fe5ffb9da769ce0921a5272ed/packages/office-ui-fabric-react/src/components/ThemeGenerator/ThemeGeneratorPage.tsx\n          * Then, just uncomment this section. */}\n        {/*}\n        <div style={ { display: 'flex' } }>\n          <div>URL to image:&nbsp;</div>\n          <input type='text' id='imageUrl' />\n          <button onClick={ this._makeThemeFromImg }>Create theme from image</button>\n        </div>\n        <div id='imageDescription' />\n        <div><img id='imagePreview' style={ { maxHeight: '500px', maxWidth: '800px' } } /></div>\n        {*/}\n\n        {/* the shared popup color picker for slots */ }\n        { colorPickerVisible && colorPickerSlotRule !== null && colorPickerSlotRule !== undefined && colorPickerElement &&\n          <Callout\n            key={ colorPickerSlotRule.name }\n            gapSpace={ 10 }\n            target={ colorPickerElement }\n            setInitialFocus={ true }\n            onDismiss={ this._colorPickerOnDismiss }\n          >\n            <ColorPicker\n              color={ colorPickerSlotRule.color!.str }\n              onColorChanged={ this._semanticSlotRuleChanged.bind(this, colorPickerSlotRule) }\n            />\n          </Callout>\n        }\n\n        {/* the three base slots, prominently displayed at the top of the page */ }\n        <div style={ { display: 'flex' } }>\n          { [this._baseColorSlotPicker(BaseSlots.primaryColor, 'Primary theme color'),\n          this._baseColorSlotPicker(BaseSlots.foregroundColor, 'Body text color'),\n          this._baseColorSlotPicker(BaseSlots.backgroundColor, 'Body background color')] }\n        </div>\n        <br />\n\n        { this._outputSection() }\n        <br />\n\n        <h2 id='Fabric palette'>Fabric palette</h2>\n        <p>The original Fabric palette slots. These are raw colors with no prescriptive uses. Each one is a shade or tint of a base color.</p>\n        <div className={ 'ms-themer-fabricPalette-root' }>\n          <div>{ fabricThemeSlots }</div>\n          <div>\n            <p>generally used for text and foregrounds</p>\n            { fabricNeutralForegroundSlots }\n          </div>\n          <div>\n            <p>generally used for backgrounds</p>\n            { fabricNeutralBackgroundSlots }\n          </div>\n        </div>\n        <br />\n\n        <h2 id='Samples'>Samples</h2>\n        { <div style={ { display: 'flex', flexDirection: 'row' } }>\n          <div className='ms-themer-example'>\n            <TextFieldBasicExample />\n          </div>\n          <div className='ms-themer-example'>\n            <ToggleBasicExample />\n            <ChoiceGroup\n              options={ [\n                {\n                  key: 'A',\n                  text: 'Option A'\n                },\n                {\n                  key: 'B',\n                  text: 'Option B',\n                  checked: true\n                }] }\n              label='Pick one'\n              required={ true }\n            />\n            <ChoiceGroup\n              options={ [\n                {\n                  key: 'C',\n                  text: 'Option C',\n                  disabled: true\n                },\n                {\n                  key: 'D',\n                  text: 'Option D',\n                  checked: true,\n                  disabled: true\n                }] }\n              label='Pick one'\n              required={ true }\n            />\n          </div>\n          <div className='ms-themer-example'>\n            <TeachingBubbleBasicExample />\n            <br />\n            <ProgressIndicatorBasicExample />\n          </div>\n        </div> }\n\n        <h2 id='Accessibility'>Accessibility</h2>\n        <p>Each pair of colors below should produce legible text and have a minimum contrast ratio of 4.5.</p>\n        <table className='ms-themer-accessibilityTable'>\n          <thead>\n            <td>Sample text</td>\n            <td>Contrast ratio</td>\n            <td>Slot pair</td>\n          </thead>\n          <tbody>\n            { [this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.white)] }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  private _colorPickerOnDismiss = (): void => {\n    this.setState({ colorPickerVisible: false });\n  }\n\n  private _semanticSlotRuleChanged = (slotRule: IThemeSlotRule, color: string): void => {\n    if (this._semanticSlotColorChangeTimeout) {\n      clearTimeout(this._semanticSlotColorChangeTimeout);\n    }\n    this._semanticSlotColorChangeTimeout = this._async.setTimeout(() => {\n      const { themeRules } = this.state;\n\n      ThemeGenerator.setSlot(slotRule, color, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!), true, true);\n      this.setState({ themeRules: themeRules }, this._makeNewTheme);\n    }, 20);\n    // 20ms is low enough that you can slowly drag to change color and see that theme,\n    // but high enough that quick changes don't get bogged down by a million changes inbetween\n  }\n\n  private _onSwatchClick = (slotRule: IThemeSlotRule, ev: React.MouseEvent<HTMLElement>): void => {\n    const { colorPickerSlotRule, colorPickerElement } = this.state;\n\n    if (colorPickerSlotRule !== null && colorPickerSlotRule !== undefined && !!colorPickerElement && colorPickerSlotRule === slotRule && colorPickerElement === ev.target) { // same one, close it\n      this.setState({ colorPickerVisible: false, colorPickerSlotRule: null, colorPickerElement: null });\n    } else { // new one, open it\n      this.setState({ colorPickerVisible: true, colorPickerSlotRule: slotRule, colorPickerElement: ev.target as HTMLElement });\n    }\n  }\n\n  private _slotWidget = (slotRule: IThemeSlotRule): JSX.Element => {\n    return (\n      <div key={ slotRule.name } className='ms-themer-slot'>\n        { this._colorSquareSwatchWidget(slotRule) }\n        <div>\n          <div>{ slotRule.name }</div>\n          { !slotRule.isCustomized ?\n            <div>Inherits from: { slotRule.inherits!.name }</div>\n            : <div>Customized</div> }\n        </div>\n      </div>\n    );\n  }\n\n  private _fabricSlotWidget = (fabricSlot: FabricSlots): JSX.Element => {\n    return this._slotWidget(this.state.themeRules[FabricSlots[fabricSlot]]);\n  }\n\n  private _colorSquareSwatchWidget(slotRule: IThemeSlotRule): JSX.Element {\n    return (\n      <div\n        key={ slotRule.name }\n        className='ms-themer-swatch'\n        style={ { backgroundColor: slotRule.color!.str } }\n        onClick={ this._onSwatchClick.bind(this, slotRule) }\n      />\n    );\n  }\n\n  private _accessibilityRow = (foreground: FabricSlots, background: FabricSlots): JSX.Element => {\n    const themeRules = this.state.themeRules;\n    const bgc: IColor = themeRules[FabricSlots[background]].color!;\n    const fgc: IColor = themeRules[FabricSlots[foreground]].color!;\n\n    const contrastRatio = getContrastRatio(bgc, fgc);\n    let contrastRatioString = String(contrastRatio);\n    contrastRatioString = contrastRatioString.substr(0, contrastRatioString.indexOf('.') + 3);\n    if (contrastRatio < 4.5) {\n      contrastRatioString = '**' + contrastRatioString + '**';\n    }\n\n    return (\n      <tr key={ String(foreground) + String(background) }>\n        <td style={ { backgroundColor: bgc.str, color: fgc.str } }>The quick brown fox jumps over the lazy dog.</td>\n        <td>{ contrastRatioString }</td>\n        <td>{ FabricSlots[foreground] + ' + ' + FabricSlots[background] }</td>\n      </tr>\n    );\n  }\n\n  private _outputSection = (): JSX.Element => {\n    const themeRules = this.state.themeRules;\n\n    // strip out the unnecessary shade slots from the final output theme\n    const abridgedTheme: IThemeRules = {};\n    for (const ruleName in themeRules) {\n      if (themeRules.hasOwnProperty(ruleName)) {\n        if (ruleName.indexOf('ColorShade') === -1 && ruleName !== 'primaryColor' && ruleName !== 'backgroundColor' && ruleName !== 'foregroundColor') {\n          abridgedTheme[ruleName] = themeRules[ruleName];\n        }\n      }\n    }\n\n    return (\n      <div>\n        <h2 id='Output'>Output</h2>\n        <div className={ 'ms-themer-output-root' }>\n          <div>\n            <h3>JSON</h3>\n            <textarea\n              readOnly={ true }\n              spellCheck={ false }\n              value={ JSON.stringify(ThemeGenerator.getThemeAsJson(abridgedTheme), void 0, 2) }\n            />\n          </div>\n          <div>\n            <h3>SASS</h3>\n            <textarea\n              readOnly={ true }\n              spellCheck={ false }\n              value={ ThemeGenerator.getThemeAsSass(abridgedTheme) }\n            />\n          </div>\n          <div>\n            <h3>PowerShell</h3>\n            <textarea\n              readOnly={ true }\n              spellCheck={ false }\n              value={ ThemeGenerator.getThemeForPowerShell(abridgedTheme) }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private _makeNewTheme = (): void => {\n    const themeAsJson: { [key: string]: string } = ThemeGenerator.getThemeAsJson(this.state.themeRules);\n    console.log('New theme...', themeAsJson);\n\n    const finalTheme = loadTheme({\n      ...{ palette: themeAsJson },\n      isInverted: isDark(this.state.themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)\n    });\n\n    const root = document.querySelector('.App-content') as HTMLElement;\n    if (root) {\n      root.style.backgroundColor = finalTheme.semanticColors.bodyBackground;\n      root.style.color = finalTheme.semanticColors.bodyText;\n    }\n\n    document.body.style.backgroundColor = finalTheme.semanticColors.bodyBackground;\n    document.body.style.color = finalTheme.semanticColors.bodyText;\n    console.log('New theme:', finalTheme);\n  }\n\n  private _baseColorSlotPicker = (baseSlot: BaseSlots, title: string): JSX.Element => {\n    let colorChangeTimeout: number;\n\n    function _onColorChanged(newColor: string): void {\n      if (colorChangeTimeout) {\n        clearTimeout(colorChangeTimeout);\n      }\n      colorChangeTimeout = this._async.setTimeout(() => {\n        const themeRules = this.state.themeRules;\n        const currentIsDark = isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!);\n        ThemeGenerator.setSlot(\n          themeRules[BaseSlots[baseSlot]],\n          newColor,\n          currentIsDark,\n          true,\n          true);\n        if (currentIsDark !== isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)) {\n          // isInverted got swapped, so need to refresh slots with new shading rules\n          ThemeGenerator.insureSlots(themeRules, !currentIsDark);\n        }\n        this.setState({ themeRules: themeRules }, this._makeNewTheme);\n      }, 20);\n      // 20ms is low enough that you can slowly drag to change color and see that theme,\n      // but high enough that quick changes don't get bogged down by a million changes inbetween\n    }\n\n    return (\n      <div className='ms-themer-paletteSlot' key={ baseSlot }>\n        <h3>{ title }</h3>\n        <div>\n          <ColorPicker\n            key={ 'baseslotcolorpicker' + baseSlot }\n            color={ this.state.themeRules[BaseSlots[baseSlot]].color!.str }\n            /* tslint:disable:jsx-no-bind */\n            onColorChanged={ _onColorChanged.bind(this) }\n          /* tslint:enable:jsx-no-bind */\n          />\n        </div>\n        <div className='ms-themer-swatchBg' style={ { backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str } }>\n          <div className='ms-themer-swatch' style={ { backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str } } />\n          { [this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade1']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade2']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade3']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade4']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade5']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade6']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade7']),\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade8'])] }\n        </div>\n      </div>\n    );\n  }\n}"]}