{"version":3,"file":"FocusTrapZone.Box.FocusOnCustomElement.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,0CAA0C,CAAC;AACzE,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,MAAM,EAAW,MAAM,mCAAmC,CAAC;AAMpE;IAAwC,sCAA8E;IAGpH,oBAAY,KAA2C;QAAvD,YACE,kBAAM,KAAK,CAAC,SAKb;QA+DO,2BAAqB,GAAG;YAC9B,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;QACL,CAAC,CAAA;QAEO,+BAAyB,GAAG;YAClC,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;QACL,CAAC,CAAA;QAEO,mCAA6B,GAAG,UAAC,SAAkB;YACzD,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,SAAS;aACrB,EAAE,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAApB,CAAoB,CAAC,CAAC;QACjC,CAAC,CAAA;QAEO,aAAO,GAAG,UAAC,MAAe;YAChC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC,CAAA;QAtFC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;;IACJ,CAAC;IAEM,2BAAM,GAAb;QAAA,iBA2BC;QA1BS,IAAA,gCAAS,CAAgB;QACjC,IAAM,SAAS,GAAG,mBAAmB,CAAC;QAEtC,OAAO,CACL;YACE,oBAAC,aAAa,IACZ,OAAO,EAAG,IAAI,CAAC,qBAAqB,EACpC,IAAI,EAAC,iBAAiB,GACtB;YACA,CAAC;gBACD,IAAI,SAAS,EAAE;oBACb,OAAO,CACL,oBAAC,aAAa,IAAC,sBAAsB,EAAG,SAAS,IAC7C,KAAI,CAAC,iBAAiB,EAAE,CACZ,CACjB,CAAC;iBACH;qBAAM;oBACL,OAAO,CACL,iCACI,KAAI,CAAC,iBAAiB,EAAE,CACtB,CACP,CAAC;iBACH;YACH,CAAC,CAAC,EAAE,CACA,CACP,CAAC;IACJ,CAAC;IAEO,sCAAiB,GAAzB;QAAA,iBA8BC;QA7BS,IAAA,gCAAS,CAAgB;QAEjC,OAAO,CACL,6BAAK,SAAS,EAAC,4BAA4B;YACzC,oBAAC,SAAS,IAAC,KAAK,EAAC,mBAAmB,EAAC,WAAW,EAAC,8BAA8B,EAAC,SAAS,EAAC,EAAE,GAAG;YAC/F,oBAAC,IAAI,IAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,qCAAuC;YAAA,+BAAM;YAAA,+BAAM;YAC7E,6BAAK,SAAS,EAAC,mBAAmB;gBAChC,oBAAC,MAAM,IACL,YAAY,EAAG,IAAI,CAAC,OAAO,EAC3B,OAAO,EAAG,SAAS,EACnB,SAAS,EAAG,IAAI,CAAC,6BAA6B,EAC9C,KAAK,EAAC,iBAAiB,EACvB,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,KAAK,GACb,CACE;YACJ,CAAC;gBACD,IAAI,SAAS,EAAE;oBACb,OAAO,CACL,oBAAC,aAAa,IACZ,aAAa,EAAC,sBAAsB,EACpC,OAAO,EAAG,KAAI,CAAC,yBAAyB,EACxC,IAAI,EAAC,sBAAsB,GAC3B,CACH,CAAC;iBACH;YACH,CAAC,CAAC,EAAE,CACA,CACP,CAAC;IACJ,CAAC;IAuBH,iBAAC;AAAD,CAAC,AA7FD,CAAwC,KAAK,CAAC,SAAS,GA6FtD","sourcesContent":["import * as React from 'react';\n\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\n\nexport interface IBoxExampleExampleState {\n  isChecked: boolean;\n}\n\nexport default class BoxExample extends React.Component<React.HTMLAttributes<HTMLDivElement>, IBoxExampleExampleState> {\n  private _toggle: IToggle;\n\n  constructor(props: React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n\n    this.state = {\n      isChecked: false,\n    };\n  }\n\n  public render() {\n    const { isChecked } = this.state;\n    const className = 'shouldFocus input';\n\n    return (\n      <div>\n        <DefaultButton\n          onClick={ this._onButtonClickHandler }\n          text='Go to Trap Zone'\n        />\n        { (() => {\n          if (isChecked) {\n            return (\n              <FocusTrapZone firstFocusableSelector={ className }>\n                { this._internalContents() }\n              </FocusTrapZone>\n            );\n          } else {\n            return (\n              <div>\n                { this._internalContents() }\n              </div>\n            );\n          }\n        })() }\n      </div>\n    );\n  }\n\n  private _internalContents() {\n    const { isChecked } = this.state;\n\n    return (\n      <div className='ms-FocusTrapZoneBoxExample'>\n        <TextField label='Default TextField' placeholder='Input inside Focus Trap Zone' className='' />\n        <Link href='' className='' >Hyperlink inside FocusTrapZone</Link><br /><br />\n        <div className='shouldFocus input'>\n          <Toggle\n            componentRef={ this._setRef }\n            checked={ isChecked }\n            onChanged={ this._onFocusTrapZoneToggleChanged }\n            label='Focus Trap Zone'\n            onText='On'\n            offText='Off'\n          />\n        </div>\n        { (() => {\n          if (isChecked) {\n            return (\n              <DefaultButton\n                secondaryText='Exit Focus Trap Zone'\n                onClick={ this._onExitButtonClickHandler }\n                text='Exit Focus Trap Zone'\n              />\n            );\n          }\n        })() }\n      </div>\n    );\n  }\n\n  private _onButtonClickHandler = (): void => {\n    this.setState({\n      isChecked: true\n    });\n  }\n\n  private _onExitButtonClickHandler = (): void => {\n    this.setState({\n      isChecked: false\n    });\n  }\n\n  private _onFocusTrapZoneToggleChanged = (isChecked: boolean): void => {\n    this.setState({\n      isChecked: isChecked\n    }, () => this._toggle.focus());\n  }\n\n  private _setRef = (toggle: IToggle): void => {\n    this._toggle = toggle;\n  }\n}"]}