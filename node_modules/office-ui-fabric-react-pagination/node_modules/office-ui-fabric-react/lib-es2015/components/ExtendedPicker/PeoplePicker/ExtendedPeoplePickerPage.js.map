{"version":3,"file":"ExtendedPeoplePickerPage.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/PeoplePicker/ExtendedPeoplePickerPage.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,WAAW,EACX,aAAa,EAEb,kBAAkB,EACnB,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,gCAAgC,EAAE,MAAM,gDAAgD,CAAC;AAElG,IAAM,oCAAoC,GAAG,OAAO,CAClD,kHAAkH,CACzG,CAAC;AAEZ;IAA8C,oDAA4C;IAA1F;;IA0DA,CAAC;IAzDQ,yCAAM,GAAb;QACE,OAAO,CACL,oBAAC,aAAa,IACZ,KAAK,EAAC,sBAAsB,EAC5B,aAAa,EAAC,6BAA6B,EAC3C,YAAY,EACV;gBACE,oBAAC,WAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,oCAAoC;oBACrF,oBAAC,gCAAgC,OAAG,CACxB,CACV,EAER,gBAAgB,EACd,oBAAC,kBAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,8FAA8F,CAAC;iBAChH,GACD,EAEJ,QAAQ,EACN;gBACE,oJAA4H;gBAC5H;oBACE,kHAAwF,CACrF,CACD,EAER,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,aAAa,EACX,ohBAIkH,EAEpH,GAAG,EACD;gBACE;oBACE,kGAAwE;oBACxE,2FAAiE;oBACjE,uGAA6E,CAC1E,CACD,EAER,KAAK,EACH;gBACE;oBACE,qGAA2E;oBAC3E,sFAA4D;oBAC5D,wFAA8D,CAC3D,CACD,GAER,CACH,CAAC;IACJ,CAAC;IAEH,+BAAC;AAAD,CAAC,AA1DD,CAA8C,KAAK,CAAC,SAAS,GA0D5D","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  ComponentPage,\n  IComponentDemoPageProps,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { ExtendedPeoplePickerTypesExample } from '../examples/ExtendedPeoplePicker.Basic.Example';\n\nconst ExtendedPeoplePickerBasicExampleCode = require(\n  '!raw-loader!office-ui-fabric-react/src/components/ExtendedPicker/examples/ExtendedPeoplePicker.Basic.Example.tsx'\n) as string;\n\nexport class ExtendedPeoplePickerPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render(): JSX.Element {\n    return (\n      <ComponentPage\n        title='ExtendedPeoplePicker'\n        componentName='ExtendedPeoplePickerExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='Extended People Picker' code={ ExtendedPeoplePickerBasicExampleCode }>\n              <ExtendedPeoplePickerTypesExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/ExtendedPicker/BaseExtendedPicker.types.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <span>ExtendedPeoplePicker are used to pick recipients. The difference between this and the current PeoplePicker are:</span>\n            <ul>\n              <li>Will remove selected items on backspace even if there is text in the input area</li>\n            </ul>\n          </div>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        bestPractices={\n          <div>The ExtendedPeoplePicker is used to select one or more entities, such as people or groups. Entry points for\n            ExtendedPeoplePicker are\n            typically specialized TextField-like input fields known as a \"well\", which are used to search for recipients from a list. When\n            a recipient is selected from the list, it is added to the well as a specialized Persona that can be interacted with or removed.\n            Clicking on a Persona from the well should invoke a PersonaCard or open a profile pane for that recipient.</div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use the ExtendedPeoplePicker to quickly search for a few people</li>\n              <li>Use the ExtendedPeoplePicker to manage a group of people</li>\n              <li>Use defaultSelectedItems when some people have already been selected</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Use the ExtendedPeoplePicker to select something other than people</li>\n              <li>Use the ExtendedPeoplePicker to only display people</li>\n              <li>Use the ExtendedPeoplePicker without sufficient space</li>\n            </ul>\n          </div>\n        }\n      />\n    );\n  }\n\n}"]}