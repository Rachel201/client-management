{"version":3,"file":"DatePicker.Required.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Required.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,UAAU,EACV,SAAS,EAEV,MAAM,uCAAuC,CAAC;AAC/C,OAAO,4BAA4B,CAAC;AAEpC,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,oBAAoB;IAE5C,wBAAwB,EAAE,sBAAsB;CACjD,CAAC;AAMF;IAA+C,qDAAoD;IACjG,mCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,SAAS,CAAC,MAAM;SACjC,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QACU,IAAA,0CAAc,CAAgB;QAEtC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;YACrC,sFAA2D;YAC3D,oBAAC,UAAU,IAAC,KAAK,EAAC,4BAA4B,EAAC,UAAU,EAAG,IAAI,EAAG,cAAc,EAAG,cAAc,EAAG,OAAO,EAAG,gBAAgB,EAAG,WAAW,EAAC,kBAAkB,GAAG;YACnK,oBAAC,UAAU,IAAC,UAAU,EAAG,IAAI,EAAG,cAAc,EAAG,cAAc,EAAG,OAAO,EAAG,gBAAgB,EAAG,WAAW,EAAC,gCAAgC,GAAG,CAC1I,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AApBD,CAA+C,KAAK,CAAC,SAAS,GAoB7D","sourcesContent":["import * as React from 'react';\nimport {\n  DatePicker,\n  DayOfWeek,\n  IDatePickerStrings\n} from 'office-ui-fabric-react/lib/DatePicker';\nimport './DatePicker.Examples.scss';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n\n  isRequiredErrorMessage: 'Field is required.',\n\n  invalidInputErrorMessage: 'Invalid date format.'\n};\n\nexport interface IDatePickerRequiredExampleState {\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class DatePickerRequiredExample extends React.Component<{}, IDatePickerRequiredExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday\n    };\n  }\n\n  public render(): JSX.Element {\n    const { firstDayOfWeek } = this.state;\n\n    return (\n      <div className='docs-DatePickerExample'>\n        <p>Validation will happen when Date Picker loses focus.</p>\n        <DatePicker label='Date required (with label)' isRequired={ true } firstDayOfWeek={ firstDayOfWeek } strings={ DayPickerStrings } placeholder='Select a date...' />\n        <DatePicker isRequired={ true } firstDayOfWeek={ firstDayOfWeek } strings={ DayPickerStrings } placeholder='Date required with no label...' />\n      </div>\n    );\n  }\n}\n"]}