{"version":3,"file":"ContextualMenuAnchor.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  anchorProperties,\n  getNativeProps,\n  createRef\n} from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = createRef<HTMLAnchorElement>();\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer';  // Safe default to prevent tabjacking\n    }\n\n    const subMenuId = this._getSubMenuId(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    return (\n      <div>\n        <KeytipData\n          keytipProps={ item.keytipProps }\n          ariaDescribedBy={ (nativeProps as any)['aria-describedby'] }\n          disabled={ disabled }\n        >\n          { (keytipAttributes: any): JSX.Element => (\n            <a\n              { ...nativeProps }\n              { ...keytipAttributes }\n              ref={ this._anchor }\n              href={ item.href }\n              target={ item.target }\n              rel={ anchorRel }\n              className={ classNames.root }\n              role='menuitem'\n              aria-owns={ item.key === expandedMenuItemKey ? subMenuId : undefined }\n              aria-haspopup={ itemHasSubmenu || undefined }\n              aria-expanded={ itemHasSubmenu ? item.key === expandedMenuItemKey : undefined }\n              aria-posinset={ focusableElementIndex + 1 }\n              aria-setsize={ totalItemCount }\n              aria-disabled={ isItemDisabled(item) }\n              style={ item.style }\n              onClick={ this._onItemClick }\n              onMouseEnter={ this._onItemMouseEnter }\n              onMouseLeave={ this._onItemMouseLeave }\n              onKeyDown={ itemHasSubmenu ? this._onItemKeyDown : null }\n            >\n              <ChildrenRenderer\n                componentRef={ item.componentRef }\n                item={ item }\n                classNames={ classNames }\n                index={ index }\n                onCheckmarkClick={ hasCheckmarks && onItemClick ? onItemClick.bind(this, item) : undefined }\n                hasIcons={ hasIcons }\n                openSubMenu={ openSubMenu }\n                dismissSubMenu={ dismissSubMenu }\n                dismissMenu={ dismissMenu }\n                getSubmenuTarget={ this._getSubmenuTarget }\n              />\n            </a>\n          ) }\n        </KeytipData>\n      </div>);\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  }\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  }\n}"]}