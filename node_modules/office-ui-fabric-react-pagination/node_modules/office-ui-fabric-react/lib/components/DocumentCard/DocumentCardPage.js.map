{"version":3,"file":"DocumentCardPage.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAMoC;AACpC,oFAAiF;AACjF,0FAAuF;AACvF,wFAAqF;AACrF,8EAA6E;AAC7E,mEAA8D;AAE9D,IAAM,4BAA4B,GAAG,OAAO,CAAC,wGAAwG,CAAW,CAAC;AACjK,IAAM,+BAA+B,GAAG,OAAO,CAAC,2GAA2G,CAAW,CAAC;AACvK,IAAM,8BAA8B,GAAG,OAAO,CAAC,0GAA0G,CAAW,CAAC;AAErK;IAAsC,4CAA4C;IAAlF;;IAmEA,CAAC;IAlEQ,iCAAM,GAAb;QACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,cAAc,EACpB,aAAa,EAAC,qBAAqB,EACnC,YAAY,EAAC,iHAAiH,EAC9H,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAG,4BAA4B;oBAC3E,yKAEI;oBACJ,oBAAC,qDAAwB,OAAG,CAChB;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,uDAAuD,EAAC,IAAI,EAAG,+BAA+B;oBAC/G,kQAEI;oBACJ,yHAEI;oBACJ,oBAAC,2DAA2B,OAAG,CACnB;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,mCAAmC,EAAC,IAAI,EAAG,8BAA8B;oBAC1F,qOAEI;oBACJ,oBAAC,yDAA0B,OAAG,CAClB,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,sFAAsF,CAAC;iBACxG,GACD,EAEJ,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,6FAA6F,CAAC,CACnG,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,wFAAwF,CAAC,CAC9F,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,0FAA0F,CAAC,CAChG,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,2CAAkB,EACvB,GAEJ,CACH,CAAC;IACJ,CAAC;IAEH,uBAAC;AAAD,CAAC,AAnED,CAAsC,KAAK,CAAC,SAAS,GAmEpD;AAnEY,4CAAgB","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PageMarkdown,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { DocumentCardBasicExample } from './examples/DocumentCard.Basic.Example';\nimport { DocumentCardCompleteExample } from './examples/DocumentCard.Complete.Example';\nimport { DocumentCardCompactExample } from './examples/DocumentCard.Compact.Example';\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\nimport { DocumentCardStatus } from './DocumentCard.checklist';\n\nconst DocumentCardBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Basic.Example.tsx') as string;\nconst DocumentCardCompleteExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Complete.Example.tsx') as string;\nconst DocumentCardCompactExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Compact.Example.tsx') as string;\n\nexport class DocumentCardPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render(): JSX.Element {\n    return (\n      <ComponentPage\n        title='DocumentCard'\n        componentName='DocumentCardExample'\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/'\n        exampleCards={\n          <div>\n            <ExampleCard title='Default DocumentCard' code={ DocumentCardBasicExampleCode }>\n              <p>\n                The default configuration for a card represents a single file, with space to denote the last significant event and the person involved.\n              </p>\n              <DocumentCardBasicExample />\n            </ExampleCard>\n            <ExampleCard title='DocumentCard with multiple items, commands, and views' code={ DocumentCardCompleteExampleCode }>\n              <p>\n                This example shows a couple of optional abilities, including being able to have a card represent multiple items, being able to expose up to three relevant commands, and showing the number of views in the bottom right corner.\n              </p>\n              <p>\n                Also show a card with Logo, text preview and status that is used for Conversation card.\n              </p>\n              <DocumentCardCompleteExample />\n            </ExampleCard>\n            <ExampleCard title='DocumentCard with compact layout ' code={ DocumentCardCompactExampleCode }>\n              <p>\n                When showing a card on a mobile device or a similarly narrow layout, you may choose this Compact layout which helps the filename remain scannable while giving roomy space for a preview thumbnail.\n              </p>\n              <DocumentCardCompactExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/DocumentCard.types.ts')\n            ] }\n          />\n        }\n        overview={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardOverview.md') }\n          </PageMarkdown>\n        }\n        bestPractices={\n          <div />\n        }\n        dos={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardDos.md') }\n          </PageMarkdown>\n        }\n        donts={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardDonts.md') }\n          </PageMarkdown>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        componentStatus={\n          <ComponentStatus\n            { ...DocumentCardStatus }\n          />\n        }\n      />\n    );\n  }\n\n}\n"]}