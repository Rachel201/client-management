{"version":3,"file":"ExtendedSelectedItem.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/Items/ExtendedSelectedItem.tsx"],"names":[],"mappings":";;;AAAA,oBAAoB;AACpB,6BAA+B;AAC/B,mBAAmB;AACnB,mDAA6E;AAC7E,4CAAwD;AAExD,0CAA6C;AAC7C,0DAA4D;AAC5D,kCAAkC;AAClC,IAAM,MAAM,GAAQ,YAAY,CAAC;AAMjC;IAA0C,gDAA+D;IAGvG,8BAAY,KAA+B;QAA3C,YACE,kBAAM,KAAK,CAAC,SAEb;QALS,aAAO,GAAG,qBAAS,EAAkB,CAAC;QAI9C,KAAI,CAAC,KAAK,GAAG,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC;;IAChD,CAAC;IAEM,qCAAM,GAAb;QACQ,IAAA,eAOQ,EANZ,cAAI,EACJ,8BAAY,EACZ,8BAAY,EACZ,gDAAqB,EACrB,gBAAK,EACL,sBAAQ,CACK;QACf,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;QACvB,OAAO,CACL,6BACE,GAAG,EAAG,IAAI,CAAC,OAAO,EAClB,SAAS,EAAG,eAAG,CACb,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,CAAC,IAAI,CAAC,OAAO,MAC1D,uBACmB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC5B,IAAI,EAAG,UAAU,qBACC,sBAAsB,GAAG,MAAM;YAEjD,6BAAK,MAAM,EAAG,CAAC,IAAI,CAAC,SAAS,IAAI,YAAY,KAAK,SAAS;gBACzD,oBAAC,mBAAU,IACT,OAAO,EAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAC/C,SAAS,EAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC5D,SAAS,EAAG,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,EACvF,SAAS,EAAG,qBAAqB,GACjC,CACE;YACN,6BAAK,SAAS,EAAG,eAAG,CAAC,MAAM,CAAC,cAAc,CAAC;gBACzC,6BACE,SAAS,EAAG,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAC5D,EAAE,EAAG,sBAAsB,GAAG,MAAM;oBAEpC,oBAAC,iBAAO,uBACD,IAAI,IACT,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAC3C,mBAAmB,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAClD,IAAI,EAAG,qBAAW,CAAC,MAAM,IACzB,CACE;gBACN,oBAAC,mBAAU,IACT,OAAO,EAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAC/C,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC/D,SAAS,EAAG,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,EACvF,SAAS,EAAG,qBAAqB,GACjC,CACG,CACF,CAAC,CAAC;;IACb,CAAC;IAEO,iDAAkB,GAA1B,UAA2B,MAAgC;QACzD,OAAO,UAAC,EAA2D;YACjE,EAAE,CAAC,eAAe,EAAE,CAAC;YACrB,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,IAAI,MAAM,EAAE;gBACV,MAAM,EAAE,CAAC;aACV;QACH,CAAC,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CAAC,AAxED,CAA0C,yBAAa,GAwEtD;AAxEY,oDAAoB","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport { BaseComponent, css, getId, createRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../Persona';\nimport { ISelectedPeopleItemProps } from '../SelectedPeopleList';\nimport { IconButton } from '../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\n// tslint:disable-next-line:no-any\nconst styles: any = stylesImport;\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport class ExtendedSelectedItem extends BaseComponent<ISelectedPeopleItemProps, IPeoplePickerItemState> {\n  protected persona = createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedPeopleItemProps) {\n    super(props);\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const {\n      item,\n      onExpandItem,\n      onRemoveItem,\n      removeButtonAriaLabel,\n      index,\n      selected\n    } = this.props;\n    const itemId = getId();\n    return (\n      <div\n        ref={ this.persona }\n        className={ css(\n          'ms-PickerPersona-container',\n          styles.personaContainer,\n          { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n          { ['is-invalid ' + styles.validationError]: !item.isValid }\n        ) }\n        data-is-focusable={ true }\n        data-is-sub-focuszone={ true }\n        data-selection-index={ index }\n        role={ 'listitem' }\n        aria-labelledby={ 'selectedItemPersona-' + itemId }\n      >\n        <div hidden={ !item.canExpand || onExpandItem === undefined }>\n          <IconButton\n            onClick={ this._onClickIconButton(onExpandItem) }\n            iconProps={ { iconName: 'Add', style: { fontSize: '14px' } } }\n            className={ css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton) }\n            ariaLabel={ removeButtonAriaLabel }\n          />\n        </div>\n        <div className={ css(styles.personaWrapper) }>\n          <div\n            className={ css('ms-PickerItem-content', styles.itemContent) }\n            id={ 'selectedItemPersona-' + itemId }\n          >\n            <Persona\n              { ...item }\n              onRenderCoin={ this.props.renderPersonaCoin }\n              onRenderPrimaryText={ this.props.renderPrimaryText }\n              size={ PersonaSize.size32 }\n            />\n          </div>\n          <IconButton\n            onClick={ this._onClickIconButton(onRemoveItem) }\n            iconProps={ { iconName: 'Cancel', style: { fontSize: '14px' } } }\n            className={ css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton) }\n            ariaLabel={ removeButtonAriaLabel }\n          />\n        </div >\n      </div >);\n  }\n\n  private _onClickIconButton(action: (() => void) | undefined): (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void {\n    return (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>): void => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if (action) {\n        action();\n      }\n    };\n  }\n}"]}