{"version":3,"file":"ChoiceGroup.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/ChoiceGroup.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../Image';\nimport { Label } from '../../Label';\nimport { Icon } from '../../Icon';\nimport { IChoiceGroupOption, IChoiceGroupProps } from './ChoiceGroup.types';\nimport {\n  assign,\n  BaseComponent,\n  css,\n  getId,\n  getNativeProps,\n  inputProperties,\n  createRef\n} from '../../Utilities';\nimport * as stylesImport from './ChoiceGroup.scss';\nconst styles: any = stylesImport;\n\nexport interface IChoiceGroupState {\n  keyChecked: string | number;\n\n  /** Is true when the control has focus. */\n  keyFocused?: string | number;\n}\n\nexport class ChoiceGroup extends BaseComponent<IChoiceGroupProps, IChoiceGroupState> {\n  public static defaultProps: IChoiceGroupProps = {\n    options: []\n  };\n\n  private _id: string;\n  private _labelId: string;\n  private _inputElement = createRef<HTMLInputElement>();\n\n  constructor(props: IChoiceGroupProps, ) {\n    super(props);\n\n    this._warnDeprecations({ 'onChanged': 'onChange' });\n    this._warnMutuallyExclusive({\n      selectedKey: 'defaultSelectedKey'\n    });\n\n    this.state = {\n      keyChecked: (props.defaultSelectedKey === undefined) ?\n        this._getKeyChecked(props)! :\n        props.defaultSelectedKey,\n      keyFocused: undefined\n    };\n\n    this._id = getId('ChoiceGroup');\n    this._labelId = getId('ChoiceGroupLabel');\n  }\n\n  public componentWillReceiveProps(newProps: IChoiceGroupProps): void {\n    const newKeyChecked = this._getKeyChecked(newProps);\n    const oldKeyCheched = this._getKeyChecked(this.props);\n\n    if (newKeyChecked !== oldKeyCheched) {\n      this.setState({\n        keyChecked: newKeyChecked!,\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const { label, options, className, required } = this.props;\n    const { keyChecked, keyFocused } = this.state;\n\n    return (\n      // Need to assign role application on containing div because JAWS doesn't call OnKeyDown without this role\n      <div role='application' className={ className }>\n        <div\n          className={ css('ms-ChoiceFieldGroup', styles.root) }\n          role='radiogroup'\n          aria-labelledby={ `${this.props.label ? this._id + '-label' : ''} ${(this.props as any)['aria-labelledby'] || ''}` }\n        >\n          { this.props.label && (\n            <Label className={ className } required={ required } id={ this._id + '-label' }>{ label }</Label>\n          ) }\n          <div\n            className={ css('ms-ChoiceFieldGroup-flexContainer', options!.some(\n              option => Boolean(option.iconProps || option.imageSrc)\n            ) && styles.optionsContainIconOrImage) }\n          >\n            { options!.map((option: IChoiceGroupOption) => {\n              const {\n                onRenderField = this._onRenderField,\n                onRenderLabel = this._onRenderLabel\n              } = option;\n\n              // Merge internal props into option\n              assign(option, {\n                checked: option.key === keyChecked,\n                disabled: option.disabled || this.props.disabled,\n                id: `${this._id}-${option.key}`,\n                labelId: `${this._labelId}-${option.key}`,\n                onRenderLabel\n              });\n\n              return (\n                <div\n                  key={ option.key }\n                  className={ css('ms-ChoiceField', styles.choiceField, {\n                    ['ms-ChoiceField--image ' + styles.choiceFieldIsImage]: !!option.imageSrc,\n                    ['ms-ChoiceField--icon ' + styles.choiceFieldIsIcon]: !!option.iconProps,\n                    ['is-inFocus ' + styles.choiceFieldIsInFocus]: option.key === keyFocused\n                  })\n                  }\n                >\n                  <div className={ css('ms-ChoiceField-wrapper', styles.choiceFieldWrapper) }>\n                    <input\n                      ref={ this._inputElement }\n                      id={ option.id }\n                      className={ css('ms-ChoiceField-input', styles.input, {\n                        ['ms-ChoiceField--image ' + styles.inputHasImage]: !!option.imageSrc,\n                        ['ms-ChoiceField--icon ' + styles.inputHasIcon]: !!option.iconProps\n                      }) }\n                      type='radio'\n                      name={ this.props.name || this._id }\n                      disabled={ option.disabled || this.props.disabled }\n                      checked={ option.key === keyChecked }\n                      required={ required }\n                      onChange={ this._onChange.bind(this, option) }\n                      onFocus={ this._onFocus.bind(this, option) }\n                      onBlur={ this._onBlur.bind(this, option) }\n                      aria-labelledby={ option.labelId }\n                      { ...getNativeProps(option, inputProperties) }\n                    />\n                    { onRenderField(option, this._onRenderField) }\n                  </div>\n                </div>\n              );\n            }) }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this._inputElement.current) {\n      this._inputElement.current.focus();\n    }\n  }\n\n  private _onFocus(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\n    this.setState({\n      keyFocused: option.key,\n      keyChecked: this.state.keyChecked\n    });\n  }\n\n  private _onBlur(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\n    this.setState({\n      keyFocused: undefined,\n      keyChecked: this.state.keyChecked\n    });\n  }\n\n  private _onRenderField(option: IChoiceGroupOption): JSX.Element {\n\n    const { onRenderLabel } = option;\n    const imageSize = option.imageSize ? option.imageSize : { width: 32, height: 32 };\n    const imageIsLarge: boolean = imageSize.width > 71 || imageSize.height > 71;\n\n    return (\n      <label\n        htmlFor={ option.id }\n        className={ css('ms-ChoiceField-field', styles.field, {\n          ['ms-ChoiceField-field--image ' + styles.fieldIsImage]: !!option.imageSrc,\n          ['ms-ChoiceField--icon ' + styles.fieldIsIcon]: !!option.iconProps,\n          ['is-checked ' + styles.fieldIsChecked]: option.checked,\n          ['is-disabled ' + styles.fieldIsDisabled]: option.disabled,\n          ['is-largeImage ' + styles.imageIsLarge]: !!option.imageSrc && imageIsLarge\n        }) }\n      >\n        {\n          option.imageSrc && (\n            <div\n              className={ css('ms-ChoiceField-innerField', styles.innerField) }\n              style={ { height: imageSize.height, width: imageSize.width } }\n            >\n              <div\n                className={ css(\n                  'ms-ChoiceField-imageWrapper',\n                  styles.imageWrapper,\n                  {\n                    ['is-hidden ' + styles.imageWrapperIsHidden]: option.checked\n                  }) }\n              >\n                <Image\n                  src={ option.imageSrc }\n                  alt={ option.imageAlt ? option.imageAlt : '' }\n                  width={ imageSize.width }\n                  height={ imageSize.height }\n                />\n              </div>\n              <div\n                className={ css(\n                  'ms-ChoiceField-imageWrapper',\n                  styles.imageWrapper,\n                  {\n                    ['is-hidden ' + styles.imageWrapperIsHidden]: !option.checked\n                  }) }\n              >\n                <Image\n                  src={ option.selectedImageSrc }\n                  alt={ option.imageAlt ? option.imageAlt : '' }\n                  width={ imageSize.width }\n                  height={ imageSize.height }\n                />\n              </div>\n            </div>\n          )\n        }\n        {\n          option.iconProps\n            ? <div className={ css('ms-ChoiceField-innerField', styles.innerField) }>\n              <div className={ css('ms-ChoiceField-iconWrapper', styles.iconWrapper) }>\n                <Icon { ...option.iconProps } />\n              </div>\n            </div>\n            : null\n        }\n        {\n          option.imageSrc || option.iconProps\n            ? (\n              <div\n                className={ css('ms-ChoiceField-labelWrapper', styles.labelWrapper) }\n                style={ { maxWidth: imageSize.width * 2 } }\n              >\n                { onRenderLabel!(option) }\n              </div>\n            ) : onRenderLabel!(option)\n        }\n      </label>\n    );\n  }\n\n  private _onRenderLabel(option: IChoiceGroupOption): JSX.Element {\n    return (\n      <span id={ option.labelId } className='ms-Label'>{ option.text }</span>\n    );\n  }\n\n  private _onChange(option: IChoiceGroupOption, evt: React.FormEvent<HTMLInputElement>): void {\n    const { onChanged, onChange, selectedKey } = this.props;\n\n    // Only manage state in uncontrolled scenarios.\n    if (selectedKey === undefined) {\n      this.setState({\n        keyChecked: option.key\n      });\n    }\n\n    // TODO: onChanged deprecated, remove else if after 07/17/2017 when onChanged has been removed.\n    if (onChange) {\n      onChange(evt, option);\n    } else if (onChanged) {\n      onChanged(option);\n    }\n  }\n\n  /**\n   * If all the isChecked property of options are falsy values, return undefined;\n   * Else return the key of the first option with the truthy isChecked property.\n   */\n  private _getKeyChecked(props: IChoiceGroupProps): string | number | undefined {\n    if (props.selectedKey !== undefined) {\n      return props.selectedKey;\n    }\n\n    const optionsChecked = props.options!.filter((option: IChoiceGroupOption) => {\n      return option.checked;\n    });\n\n    if (optionsChecked.length === 0) {\n      return undefined;\n    } else {\n      return optionsChecked[0].key;\n    }\n  }\n}\n"]}