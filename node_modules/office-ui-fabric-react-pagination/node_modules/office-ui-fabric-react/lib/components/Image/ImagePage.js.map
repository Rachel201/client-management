{"version":3,"file":"ImagePage.js","sourceRoot":"../src/","sources":["components/Image/ImagePage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAMoC;AACpC,4BAA0B;AAC1B,0EAAuE;AACvE,wEAAqE;AACrE,0EAAuE;AACvE,sEAAmE;AACnE,oEAAiE;AACjE,sFAAmF;AACnF,8EAA6E;AAC7E,qDAAgD;AAEhD,IAAM,uBAAuB,GAAG,OAAO,CAAC,4FAA4F,CAAW,CAAC;AAChJ,IAAM,sBAAsB,GAAG,OAAO,CAAC,2FAA2F,CAAW,CAAC;AAC9I,IAAM,uBAAuB,GAAG,OAAO,CAAC,4FAA4F,CAAW,CAAC;AAChJ,IAAM,qBAAqB,GAAG,OAAO,CAAC,0FAA0F,CAAW,CAAC;AAC5I,IAAM,oBAAoB,GAAG,OAAO,CAAC,yFAAyF,CAAW,CAAC;AAC1I,IAAM,6BAA6B,GAAG,OAAO,CAAC,kGAAkG,CAAW,CAAC;AAE5J;IAA+B,qCAA4C;IAA3E;;IAiEA,CAAC;IAhEQ,0BAAM,GAAb;QACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,OAAO,EACb,aAAa,EAAC,cAAc,EAC5B,YAAY,EAAC,sHAAsH,EACnI,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,yBAAyB,EAAC,IAAI,EAAG,uBAAuB;oBACzE,oBAAC,2CAAmB,OAAG,CACX;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAG,oBAAoB;oBAC7D,oBAAC,qCAAgB,OAAG,CACR;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,kBAAkB,EAAC,IAAI,EAAG,sBAAsB;oBACjE,oBAAC,yCAAkB,OAAG,CACV;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,mBAAmB,EAAC,IAAI,EAAG,uBAAuB;oBACnE,oBAAC,2CAAmB,OAAG,CACX;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAG,qBAAqB;oBAC/D,oBAAC,uCAAiB,OAAG,CACT;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,4BAA4B,EAAC,IAAI,EAAG,6BAA6B;oBAClF,oBAAC,uDAAyB,OAAG,CACjB,CACV,EAER,gBAAgB,EAAG,IAAI,EACvB,kBAAkB,EAAG,KAAK,EAC1B,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,wEAAwE,CAAC;iBAC1F,GACD,EAEJ,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,+EAA+E,CAAC,CACrF,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,0EAA0E,CAAC,CAChF,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,4EAA4E,CAAC,CAClF,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,6BAAW,EAChB,GAEJ,CACH,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CAAC,AAjED,CAA+B,KAAK,CAAC,SAAS,GAiE7C;AAjEY,8BAAS","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PageMarkdown,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport './ImagePage.scss';\nimport { ImageDefaultExample } from './examples/Image.Default.Example';\nimport { ImageCenterExample } from './examples/Image.Center.Example';\nimport { ImageContainExample } from './examples/Image.Contain.Example';\nimport { ImageCoverExample } from './examples/Image.Cover.Example';\nimport { ImageNoneExample } from './examples/Image.None.Example';\nimport { ImageMaximizeFrameExample } from './examples/Image.MaximizeFrame.Example';\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\nimport { ImageStatus } from './Image.checklist';\n\nconst ImageDefaultExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Default.Example.tsx') as string;\nconst ImageCenterExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Center.Example.tsx') as string;\nconst ImageContainExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Contain.Example.tsx') as string;\nconst ImageCoverExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Cover.Example.tsx') as string;\nconst ImageNoneExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.None.Example.tsx') as string;\nconst ImageMaximizeFrameExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.MaximizeFrame.Example.tsx') as string;\n\nexport class ImagePage extends React.Component<IComponentDemoPageProps, {}> {\n  public render(): JSX.Element {\n    return (\n      <ComponentPage\n        title='Image'\n        componentName='ImageExample'\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Image'\n        exampleCards={\n          <div>\n            <ExampleCard title='ImageFit: Not specified' code={ ImageDefaultExampleCode }>\n              <ImageDefaultExample />\n            </ExampleCard>\n            <ExampleCard title='ImageFit: None' code={ ImageNoneExampleCode }>\n              <ImageNoneExample />\n            </ExampleCard>\n            <ExampleCard title='ImageFit: Center' code={ ImageCenterExampleCode }>\n              <ImageCenterExample />\n            </ExampleCard>\n            <ExampleCard title='ImageFit: Contain' code={ ImageContainExampleCode }>\n              <ImageContainExample />\n            </ExampleCard>\n            <ExampleCard title='ImageFit: Cover' code={ ImageCoverExampleCode }>\n              <ImageCoverExample />\n            </ExampleCard>\n            <ExampleCard title='Maximizing the image frame' code={ ImageMaximizeFrameExampleCode }>\n              <ImageMaximizeFrameExample />\n            </ExampleCard>\n          </div>\n        }\n        allowNativeProps={ true }\n        nativePropsElement={ 'img' }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Image/Image.types.ts')\n            ] }\n          />\n        }\n        overview={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Image/docs/ImageOverview.md') }\n          </PageMarkdown>\n        }\n        bestPractices={\n          <div />\n        }\n        dos={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Image/docs/ImageDos.md') }\n          </PageMarkdown>\n        }\n        donts={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Image/docs/ImageDonts.md') }\n          </PageMarkdown>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        componentStatus={\n          <ComponentStatus\n            { ...ImageStatus }\n          />\n        }\n      />\n    );\n  }\n}\n"]}