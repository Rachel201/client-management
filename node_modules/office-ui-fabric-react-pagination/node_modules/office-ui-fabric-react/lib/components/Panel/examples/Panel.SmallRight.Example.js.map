{"version":3,"file":"Panel.SmallRight.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.SmallRight.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAiF;AACjF,sEAAqE;AACrE,0DAAoE;AAEpE;IAA4C,kDAE1C;IAEA,gCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAiDO,mBAAa,GAAG;YACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAA;QAEO,4BAAsB,GAAG;YAC/B,OAAO,CACL;gBACE,oBAAC,sBAAa,IACZ,OAAO,EAAG,KAAI,CAAC,aAAa,EAC5B,KAAK,EAAG,EAAE,aAAa,EAAE,KAAK,EAAE,WAGlB;gBAChB,oBAAC,sBAAa,IACZ,OAAO,EAAG,KAAI,CAAC,aAAa,aAGd,CACZ,CACP,CAAC;QACJ,CAAC,CAAA;QAEO,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC,CAAA;QA5EC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;;IACJ,CAAC;IAEM,uCAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,sBAAa,IACZ,aAAa,EAAC,wBAAwB,EACtC,OAAO,EAAG,IAAI,CAAC,YAAY,EAC3B,IAAI,EAAC,YAAY,GACjB;YACF,oBAAC,aAAK,IACJ,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAC7B,IAAI,EAAG,iBAAS,CAAC,aAAa,EAC9B,SAAS,EAAG,IAAI,CAAC,aAAa,EAC9B,UAAU,EAAC,kDAAkD,EAC7D,oBAAoB,EAAC,OAAO,EAC5B,qBAAqB,EAAG,IAAI,CAAC,sBAAsB;gBAEnD,oBAAC,yBAAW,IACV,OAAO,EAAG;wBACR;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;yBACjB;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,OAAO,EAAE,IAAI;yBACd;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,QAAQ,EAAE,IAAI;yBACf;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,OAAO,EAAE,IAAI;4BACb,QAAQ,EAAE,IAAI;yBACf;qBACF,EACD,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf,CACI,CACJ,CACP,CAAC;IACJ,CAAC;IA2BH,6BAAC;AAAD,CAAC,AAnFD,CAA4C,KAAK,CAAC,SAAS,GAmF1D;AAnFY,wDAAsB","sourcesContent":["import * as React from 'react';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\n\nexport class PanelSmallRightExample extends React.Component<{}, {\n  showPanel: boolean;\n}> {\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showPanel: false\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <DefaultButton\n          secondaryText='Opens the Sample Panel'\n          onClick={ this._onShowPanel }\n          text='Open Panel'\n        />\n        <Panel\n          isOpen={ this.state.showPanel }\n          type={ PanelType.smallFixedFar }\n          onDismiss={ this._onClosePanel }\n          headerText='Panel - Small, right-aligned, fixed, with footer'\n          closeButtonAriaLabel='Close'\n          onRenderFooterContent={ this._onRenderFooterContent }\n        >\n          <ChoiceGroup\n            options={ [\n              {\n                key: 'A',\n                text: 'Option A'\n              },\n              {\n                key: 'B',\n                text: 'Option B',\n                checked: true\n              },\n              {\n                key: 'C',\n                text: 'Option C',\n                disabled: true\n              },\n              {\n                key: 'D',\n                text: 'Option D',\n                checked: true,\n                disabled: true\n              }\n            ] }\n            label='Pick one'\n            required={ true }\n          />\n        </Panel>\n      </div>\n    );\n  }\n\n  private _onClosePanel = (): void => {\n    this.setState({ showPanel: false });\n  }\n\n  private _onRenderFooterContent = (): JSX.Element => {\n    return (\n      <div>\n        <PrimaryButton\n          onClick={ this._onClosePanel }\n          style={ { 'marginRight': '8px' } }\n        >\n          Save\n        </PrimaryButton>\n        <DefaultButton\n          onClick={ this._onClosePanel }\n        >\n          Cancel\n        </DefaultButton>\n      </div>\n    );\n  }\n\n  private _onShowPanel = (): void => {\n    this.setState({ showPanel: true });\n  }\n}\n"]}