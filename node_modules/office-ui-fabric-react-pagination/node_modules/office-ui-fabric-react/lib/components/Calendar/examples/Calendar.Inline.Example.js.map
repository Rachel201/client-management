{"version":3,"file":"Calendar.Inline.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Inline.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,mFAAoG;AACpG,gEAG6C;AAC7C,gEAAoE;AAEpE,IAAM,gBAAgB,GAAG;IACvB,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,sBAAsB,EAAE,iBAAiB;CAC1C,CAAC;AAyBF;IAA2C,iDAAyE;IAClH,+BAAmB,KAAkC;QAArD,YACE,kBAAM,KAAK,CAAC,SAWb;QATC,KAAI,CAAC,KAAK,GAAG;YACX,YAAY,EAAE,IAAI;YAClB,iBAAiB,EAAE,IAAI;SACxB,CAAC;QAEF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7C,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACvC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACjD,CAAC;IAEM,sCAAM,GAAb;QACE,IAAM,QAAQ,GAAwB;YACpC,MAAM,EAAE,OAAO;SAChB,CAAC;QAEF,IAAM,WAAW,GAAwB;YACvC,MAAM,EAAE,eAAe;SACxB,CAAC;QAEF,IAAI,eAAe,GAAkB,IAAI,CAAC;QAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YAChC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACnD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvF,eAAe,GAAG,UAAU,CAAC,kBAAkB,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;SACzF;QAED,OAAO,CACL,6BAAK,KAAK,EAAG,QAAQ;YACjB;;gBACkB,kCAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,EAAE,CAAS,CAC9G;YACN;;gBAEE;;oBAAS,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,eAAe,CAAS,CAC5D;YACJ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC1C;;oBAEE;;wBAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,SAAS;;wBAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAS,CACnK;YAER,oBAAC,mBAAQ,IACP,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,SAAS,EAAG,IAAI,CAAC,UAAU,EAC3B,oBAAoB,EAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,EACtD,aAAa,EAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,uBAAuB,EAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAC5D,aAAa,EAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,YAAa,EAChC,cAAc,EAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,oBAAS,CAAC,MAAM,EACzF,OAAO,EAAG,gBAAgB,EAC1B,qBAAqB,EAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EACxD,sBAAsB,EAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAC1D,kBAAkB,EAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAClD,wBAAwB,EAAG,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAC9D,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAC5B,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAC5B,qBAAqB,EAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EACxD,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GACtC;YACA,IAAI,CAAC,KAAK,CAAC,mBAAmB;gBAC9B;oBACE,oBAAC,sBAAa,IAAC,KAAK,EAAG,WAAW,EAAG,OAAO,EAAG,IAAI,CAAC,WAAW,EAAG,IAAI,EAAC,UAAU,GAAG;oBACpF,oBAAC,sBAAa,IAAC,KAAK,EAAG,WAAW,EAAG,OAAO,EAAG,IAAI,CAAC,OAAO,EAAG,IAAI,EAAC,MAAM,GAAG,CACxE,CAEJ,CACP,CAAC;IACJ,CAAC;IAEO,0CAAU,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;YACnD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,2CAAW,GAAnB;QAAA,iBAmBC;QAlBC,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;YACnD,IAAM,YAAY,GAAG,SAAS,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;YAC1D,IAAM,cAAc,GAAG,4BAAiB,CAAC,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;YAEnG,IAAI,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC;YAE3C,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,KAAK,wBAAa,CAAC,KAAK,EAAE;gBACpD,YAAY,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;gBAChF,cAAc,GAAG,CAAC,CAAC;aACpB;YAED,IAAM,eAAe,GAAG,kBAAO,CAAC,YAAY,EAAE,CAAC,cAAc,CAAC,CAAC;YAE/D,OAAO;gBACL,YAAY,EAAE,eAAe;aAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uCAAO,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;YACnD,IAAM,YAAY,GAAG,SAAS,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;YAC1D,IAAM,cAAc,GAAG,4BAAiB,CAAC,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;YACnG,IAAM,eAAe,GAAG,kBAAO,CAAC,cAAc,CAAC,GAAG,EAAG,EAAE,CAAC,CAAC,CAAC;YAE1D,OAAO;gBACL,YAAY,EAAE,eAAe;aAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,6CAAa,GAArB,UAAsB,IAAU,EAAE,cAAsB;QACtD,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;YACnD,OAAO;gBACL,YAAY,EAAE,IAAI;gBAClB,iBAAiB,EAAE,cAAc;aAClC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IACH,4BAAC;AAAD,CAAC,AA3HD,CAA2C,KAAK,CAAC,SAAS,GA2HzD;AA3HY,sDAAqB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { addDays, getDateRangeArray } from 'office-ui-fabric-react/lib/utilities/dateMath/DateMath';\nimport {\n  Calendar,\n  DayOfWeek\n} from 'office-ui-fabric-react/lib/Calendar';\nimport { DateRangeType } from 'office-ui-fabric-react/lib/Calendar';\n\nconst DayPickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n  weekNumberFormatString: 'Week number {0}',\n};\n\nexport interface ICalendarInlineExampleState {\n  selectedDate?: Date | null;\n  selectedDateRange?: Date[] | null;\n}\n\nexport interface ICalendarInlineExampleProps {\n  isMonthPickerVisible?: boolean;\n  dateRangeType: DateRangeType;\n  autoNavigateOnSelection: boolean;\n  showGoToToday: boolean;\n  showNavigateButtons?: boolean;\n  highlightCurrentMonth?: boolean;\n  highlightSelectedMonth?: boolean;\n  isDayPickerVisible?: boolean;\n  showMonthPickerAsOverlay?: boolean;\n  showWeekNumbers?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  showSixWeeksByDefault?: boolean;\n  workWeekDays?: DayOfWeek[];\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class CalendarInlineExample extends React.Component<ICalendarInlineExampleProps, ICalendarInlineExampleState> {\n  public constructor(props: ICalendarInlineExampleProps) {\n    super(props);\n\n    this.state = {\n      selectedDate: null,\n      selectedDateRange: null\n    };\n\n    this._onDismiss = this._onDismiss.bind(this);\n    this._onSelectDate = this._onSelectDate.bind(this);\n    this._goNext = this._goNext.bind(this);\n    this._goPrevious = this._goPrevious.bind(this);\n  }\n\n  public render(): JSX.Element {\n    const divStyle: React.CSSProperties = {\n      height: '340px'\n    };\n\n    const buttonStyle: React.CSSProperties = {\n      margin: '17px 10px 0 0'\n    };\n\n    let dateRangeString: string | null = null;\n    if (this.state.selectedDateRange) {\n      const rangeStart = this.state.selectedDateRange[0];\n      const rangeEnd = this.state.selectedDateRange[this.state.selectedDateRange.length - 1];\n      dateRangeString = rangeStart.toLocaleDateString() + '-' + rangeEnd.toLocaleDateString();\n    }\n\n    return (\n      <div style={ divStyle }>\n        { <div>\n          Selected date(s): <span>{ !this.state.selectedDate ? 'Not set' : this.state.selectedDate.toLocaleString() }</span>\n        </div> }\n        <div>\n          Selected dates:\n          <span> { !dateRangeString ? 'Not set' : dateRangeString }</span>\n        </div>\n        { (this.props.minDate || this.props.maxDate) &&\n          <div>\n            Date boundary:\n            <span> { this.props.minDate ? this.props.minDate.toLocaleDateString() : 'Not set' }-{ this.props.maxDate ? this.props.maxDate.toLocaleDateString() : 'Not set' }</span>\n          </div>\n        }\n        <Calendar\n          onSelectDate={ this._onSelectDate }\n          onDismiss={ this._onDismiss }\n          isMonthPickerVisible={ this.props.isMonthPickerVisible }\n          dateRangeType={ this.props.dateRangeType }\n          autoNavigateOnSelection={ this.props.autoNavigateOnSelection }\n          showGoToToday={ this.props.showGoToToday }\n          value={ this.state.selectedDate! }\n          firstDayOfWeek={ this.props.firstDayOfWeek ? this.props.firstDayOfWeek : DayOfWeek.Sunday }\n          strings={ DayPickerStrings }\n          highlightCurrentMonth={ this.props.highlightCurrentMonth }\n          highlightSelectedMonth={ this.props.highlightSelectedMonth }\n          isDayPickerVisible={ this.props.isDayPickerVisible }\n          showMonthPickerAsOverlay={ this.props.showMonthPickerAsOverlay }\n          showWeekNumbers={ this.props.showWeekNumbers }\n          minDate={ this.props.minDate }\n          maxDate={ this.props.maxDate }\n          showSixWeeksByDefault={ this.props.showSixWeeksByDefault }\n          workWeekDays={ this.props.workWeekDays }\n        />\n        { this.props.showNavigateButtons &&\n          <div>\n            <DefaultButton style={ buttonStyle } onClick={ this._goPrevious } text='Previous' />\n            <DefaultButton style={ buttonStyle } onClick={ this._goNext } text='Next' />\n          </div>\n        }\n      </div>\n    );\n  }\n\n  private _onDismiss(): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      return prevState;\n    });\n  }\n\n  private _goPrevious(): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      const selectedDate = prevState.selectedDate || new Date();\n      const dateRangeArray = getDateRangeArray(selectedDate, this.props.dateRangeType, DayOfWeek.Sunday);\n\n      let subtractFrom = dateRangeArray[0];\n      let daysToSubtract = dateRangeArray.length;\n\n      if (this.props.dateRangeType === DateRangeType.Month) {\n        subtractFrom = new Date(subtractFrom.getFullYear(), subtractFrom.getMonth(), 1);\n        daysToSubtract = 1;\n      }\n\n      const newSelectedDate = addDays(subtractFrom, -daysToSubtract);\n\n      return {\n        selectedDate: newSelectedDate\n      };\n    });\n  }\n\n  private _goNext(): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      const selectedDate = prevState.selectedDate || new Date();\n      const dateRangeArray = getDateRangeArray(selectedDate, this.props.dateRangeType, DayOfWeek.Sunday);\n      const newSelectedDate = addDays(dateRangeArray.pop()!, 1);\n\n      return {\n        selectedDate: newSelectedDate\n      };\n    });\n  }\n\n  private _onSelectDate(date: Date, dateRangeArray: Date[]): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      return {\n        selectedDate: date,\n        selectedDateRange: dateRangeArray\n      };\n    });\n  }\n}\n"]}