{"version":3,"file":"CalendarMonth.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarMonth.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css,\n  getRTL,\n} from '../../Utilities';\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\nimport { FocusZone } from '../../FocusZone';\nimport { addYears, setMonth, getYearStart, getYearEnd, getMonthStart, getMonthEnd, compareDatePart } from '../../utilities/dateMath/DateMath';\nimport { Icon } from '../../Icon';\nimport * as stylesImport from './Calendar.scss';\nconst styles: any = stylesImport;\n\nexport interface ICalendarMonth {\n  focus(): void;\n}\n\nexport interface ICalendarMonthProps extends React.Props<CalendarMonth> {\n  componentRef?: (c: ICalendarMonth) => void;\n  navigatedDate: Date;\n  selectedDate: Date;\n  strings: ICalendarStrings;\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n  today?: Date;\n  highlightCurrentMonth: boolean;\n  highlightSelectedMonth: boolean;\n  onHeaderSelect?: (focus: boolean) => void;\n  navigationIcons: ICalendarIconStrings;\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\n  minDate?: Date;\n  maxDate?: Date;\n}\n\nexport class CalendarMonth extends BaseComponent<ICalendarMonthProps, {}> {\n  public refs: {\n    [key: string]: React.ReactInstance;\n    navigatedMonth: HTMLElement;\n  };\n\n  private _selectMonthCallbacks: (() => void)[];\n\n  public constructor(props: ICalendarMonthProps) {\n    super(props);\n\n    this._selectMonthCallbacks = [];\n    props.strings.shortMonths.map((month, index) => {\n      this._selectMonthCallbacks[index] = this._onSelectMonth.bind(this, index);\n    });\n\n    this._isCurrentMonth = this._isCurrentMonth.bind(this);\n    this._onSelectNextYear = this._onSelectNextYear.bind(this);\n    this._onSelectPrevYear = this._onSelectPrevYear.bind(this);\n    this._onSelectMonth = this._onSelectMonth.bind(this);\n  }\n\n  public render(): JSX.Element {\n\n    const { navigatedDate, selectedDate, strings, today, highlightCurrentMonth, highlightSelectedMonth, navigationIcons, dateTimeFormatter, minDate, maxDate } = this.props;\n    const leftNavigationIcon = navigationIcons.leftNavigation;\n    const rightNavigationIcon = navigationIcons.rightNavigation;\n\n    // determine if previous/next years are in bounds\n    const isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\n    const isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\n\n    return (\n      <div className={ css('ms-DatePicker-monthPicker', styles.monthPicker) }>\n        <div className={ css('ms-DatePicker-header', styles.header) }>\n          { this.props.onHeaderSelect ?\n            <div\n              className={ css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear, styles.headerToggleView) }\n              onClick={ this._onHeaderSelect }\n              onKeyDown={ this._onHeaderKeyDown }\n              aria-label={ dateTimeFormatter.formatYear(navigatedDate) }\n              role='button'\n              tabIndex={ 0 }\n            >\n              { dateTimeFormatter.formatYear(navigatedDate) }\n            </div>\n            :\n            <div className={ css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear) }>\n              { dateTimeFormatter.formatYear(navigatedDate) }\n            </div>\n          }\n          <div className={ css('ms-DatePicker-yearComponents', styles.yearComponents) }>\n            <div className={ css('ms-DatePicker-navContainer', styles.navContainer) }>\n              <button\n                className={ css('ms-DatePicker-prevYear js-prevYear', styles.prevYear, {\n                  ['ms-DatePicker-prevYear--disabled ' + styles.prevYearIsDisabled]: !isPrevYearInBounds\n                }) }\n                disabled={ !isPrevYearInBounds }\n                onClick={ isPrevYearInBounds ? this._onSelectPrevYear : undefined }\n                onKeyDown={ isPrevYearInBounds ? this._onSelectPrevYearKeyDown : undefined }\n                aria-label={ strings.prevYearAriaLabel ? strings.prevYearAriaLabel + ' ' + dateTimeFormatter.formatYear(addYears(navigatedDate, -1)) : undefined }\n                role='button'\n              >\n                <Icon iconName={ getRTL() ? rightNavigationIcon : leftNavigationIcon } />\n              </button>\n              <button\n                className={ css('ms-DatePicker-nextYear js-nextYear', styles.nextYear, {\n                  ['ms-DatePicker-nextYear--disabled ' + styles.nextYearIsDisabled]: !isNextYearInBounds\n                }) }\n                disabled={ !isNextYearInBounds }\n                onClick={ isNextYearInBounds ? this._onSelectNextYear : undefined }\n                onKeyDown={ isNextYearInBounds ? this._onSelectNextYearKeyDown : undefined }\n                aria-label={ strings.nextYearAriaLabel ? strings.nextYearAriaLabel + ' ' + dateTimeFormatter.formatYear(addYears(navigatedDate, 1)) : undefined }\n                role='button'\n              >\n                <Icon iconName={ getRTL() ? leftNavigationIcon : rightNavigationIcon } />\n              </button>\n            </div>\n          </div>\n        </div>\n        <FocusZone>\n          <div\n            className={ css('ms-DatePicker-optionGrid', styles.optionGrid) }\n            role='grid'\n          >\n            { strings.shortMonths.map((month, index) => {\n\n              const indexedMonth = setMonth(navigatedDate, index);\n              const isCurrentMonth = this._isCurrentMonth(index, navigatedDate.getFullYear(), today!);\n              const isNavigatedMonth = navigatedDate.getMonth() === index;\n              const isSelectedMonth = selectedDate.getMonth() === index;\n              const isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\n              const isInBounds = (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) &&\n                (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\n\n              return <button\n                role={ 'gridcell' }\n                className={\n                  css('ms-DatePicker-monthOption', styles.monthOption,\n                    {\n                      ['ms-DatePicker-day--today ' + styles.monthIsCurrentMonth]: highlightCurrentMonth && isCurrentMonth!,\n                      ['ms-DatePicker-day--highlighted ' + styles.monthIsHighlighted]: (highlightCurrentMonth || highlightSelectedMonth) &&\n                        isSelectedMonth && isSelectedYear,\n                      ['ms-DatePicker-monthOption--disabled ' + styles.monthOptionIsDisabled]: !isInBounds\n                    })\n                }\n                disabled={ !isInBounds }\n                key={ index }\n                onClick={ isInBounds ? this._selectMonthCallbacks[index] : undefined }\n                onKeyDown={ isInBounds ? this._onSelectMonthKeyDown(index) : undefined }\n                aria-label={ dateTimeFormatter.formatMonthYear(indexedMonth, strings) }\n                aria-selected={ isCurrentMonth || isNavigatedMonth }\n                data-is-focusable={ isInBounds ? true : undefined }\n                ref={ isNavigatedMonth ? 'navigatedMonth' : undefined }\n              >\n                { month }\n              </button>;\n            }\n            ) }\n          </div>\n        </FocusZone>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.refs.navigatedMonth) {\n      this.refs.navigatedMonth.tabIndex = 0;\n      this.refs.navigatedMonth.focus();\n    }\n  }\n\n  private _isCurrentMonth(month: number, year: number, today: Date): boolean {\n    return today.getFullYear() === year && today.getMonth() === month;\n  }\n\n  private _onKeyDown = (callback: () => void, ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      callback();\n    }\n  }\n\n  private _onSelectNextYear = (): void => {\n    const { navigatedDate, onNavigateDate } = this.props;\n    onNavigateDate(addYears(navigatedDate, 1), false);\n  }\n\n  private _onSelectNextYearKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectNextYear, ev);\n    }\n  }\n\n  private _onSelectPrevYear = (): void => {\n    const { navigatedDate, onNavigateDate } = this.props;\n    onNavigateDate(addYears(navigatedDate, -1), false);\n  }\n\n  private _onSelectPrevYearKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectPrevYear, ev);\n    }\n  }\n\n  private _onSelectMonthKeyDown = (index: number): (ev: React.KeyboardEvent<HTMLElement>) => void => {\n    return (ev: React.KeyboardEvent<HTMLElement>) => this._onKeyDown(() => this._onSelectMonth(index), ev);\n  }\n\n  private _onSelectMonth = (newMonth: number): void => {\n    const { navigatedDate, onNavigateDate, onHeaderSelect } = this.props;\n\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\n  }\n\n  private _onHeaderSelect = (): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n  }\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      onHeaderSelect(true);\n    }\n  }\n}\n"]}