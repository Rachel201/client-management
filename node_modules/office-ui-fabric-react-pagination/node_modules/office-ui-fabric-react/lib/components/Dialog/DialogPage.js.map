{"version":3,"file":"DialogPage.js","sourceRoot":"../src/","sources":["components/Dialog/DialogPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAMoC;AACpC,wEAAqE;AACrE,oFAAiF;AACjF,8EAA2E;AAC3E,8EAA6E;AAC7E,uDAAkD;AAElD,IAAM,sBAAsB,GAAG,OAAO,CAAC,4FAA4F,CAAW,CAAC;AAC/I,IAAM,4BAA4B,GAAG,OAAO,CAAC,kGAAkG,CAAW,CAAC;AAC3J,IAAM,yBAAyB,GAAG,OAAO,CAAC,+FAA+F,CAAW,CAAC;AAErJ;IAAgC,sCAA4C;IAA5E;;IA4DA,CAAC;IA3DQ,2BAAM,GAAb;QACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,QAAQ,EACd,aAAa,EAAC,eAAe,EAC7B,YAAY,EAAC,uHAAuH,EACpI,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAG,sBAAsB;oBAC/D,oBAAC,yCAAkB,OAAG,CACV;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,0CAA0C,EAAC,IAAI,EAAG,4BAA4B;oBAC/F,wNAEI;oBACJ,oBAAC,qDAAwB,OAAG,CAChB;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAG,yBAAyB;oBACnE,oVAEI;oBACJ,oBAAC,+CAAqB,OAAG,CACb,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,0EAA0E,CAAC;iBAC5F,GACD,EAEJ,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,iFAAiF,CAAC,CACvF,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,4EAA4E,CAAC,CAClF,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,8EAA8E,CAAC,CACpF,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,+BAAY,EACjB,GAEJ,CACH,CAAC;IACJ,CAAC;IACH,iBAAC;AAAD,CAAC,AA5DD,CAAgC,KAAK,CAAC,SAAS,GA4D9C;AA5DY,gCAAU","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PageMarkdown,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { DialogBasicExample } from './examples/Dialog.Basic.Example';\nimport { DialogLargeHeaderExample } from './examples/Dialog.LargeHeader.Example';\nimport { DialogBlockingExample } from './examples/Dialog.Blocking.Example';\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\nimport { DialogStatus } from './Dialog.checklist';\n\nconst DialogBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dialog/examples/Dialog.Basic.Example.tsx') as string;\nconst DialogLargeHeaderExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dialog/examples/Dialog.LargeHeader.Example.tsx') as string;\nconst DialogBlockingExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dialog/examples/Dialog.Blocking.Example.tsx') as string;\n\nexport class DialogPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render(): JSX.Element {\n    return (\n      <ComponentPage\n        title='Dialog'\n        componentName='DialogExample'\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Dialog'\n        exampleCards={\n          <div>\n            <ExampleCard title='Default Dialog' code={ DialogBasicExampleCode }>\n              <DialogBasicExample />\n            </ExampleCard>\n            <ExampleCard title='Dialog with large header and ChoiceGroup' code={ DialogLargeHeaderExampleCode }>\n              <p>\n                Use this Dialog sparingly, when calling extra attention to the content. It can be used in situations where you want to teach the user something or notify them of an important change.\n              </p>\n              <DialogLargeHeaderExample />\n            </ExampleCard>\n            <ExampleCard title='Blocking Dialog' code={ DialogBlockingExampleCode }>\n              <p>\n                A blocking Dialog disables all other actions and commands on the page behind it. They should be used very sparingly, only when it is critical that the user makes a choice or provides information before they can proceed. Blocking Dialogs are generally used for irreversible or potentially destructive tasks.\n              </p>\n              <DialogBlockingExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Dialog/Dialog.types.ts')\n            ] }\n          />\n        }\n        overview={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Dialog/docs/DialogOverview.md') }\n          </PageMarkdown>\n        }\n        bestPractices={\n          <div />\n        }\n        dos={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Dialog/docs/DialogDos.md') }\n          </PageMarkdown>\n        }\n        donts={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Dialog/docs/DialogDonts.md') }\n          </PageMarkdown>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        componentStatus={\n          <ComponentStatus\n            { ...DialogStatus }\n          />\n        }\n      />\n    );\n  }\n}\n"]}