{"version":3,"file":"TagPicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/pickers/examples/TagPicker.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent\n} from '../../../Utilities';\nimport { TagPicker } from 'office-ui-fabric-react/lib/components/pickers/TagPicker/TagPicker';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { ITagPickerDemoPageState } from 'office-ui-fabric-react/lib/components/pickers/examples/ITagPickerDemoPageState';\nimport * as exampleStylesImport from '../../../common/_exampleStyles.scss';\nconst exampleStyles: any = exampleStylesImport;\n\nconst _testTags = [\n  'black',\n  'blue',\n  'brown',\n  'cyan',\n  'green',\n  'magenta',\n  'mauve',\n  'orange',\n  'pink',\n  'purple',\n  'red',\n  'rose',\n  'violet',\n  'white',\n  'yellow'\n].map(item => ({ key: item, name: item }));\n\nexport class TagPickerBasicExample extends BaseComponent<{}, ITagPickerDemoPageState> {\n  private _picker: TagPicker;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isPickerDisabled: false\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        <Checkbox\n          className={ exampleStyles.exampleCheckbox }\n          label='Disable Tag Picker'\n          checked={ this.state.isPickerDisabled }\n          onChange={ this._onDisabledButtonClick }\n        />\n        Filter items in suggestions: This picker will filter added items from the search suggestions.\n        <TagPicker\n          onResolveSuggestions={ this._onFilterChanged }\n          getTextFromItem={ this._getTextFromItem }\n          pickerSuggestionsProps={\n            {\n              suggestionsHeaderText: 'Suggested Tags',\n              noResultsFoundText: 'No Color Tags Found'\n            }\n          }\n          itemLimit={ 2 }\n          disabled={ this.state.isPickerDisabled }\n          inputProps={ {\n            onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n            onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n            'aria-label': 'Tag Picker'\n          } }\n        />\n        <br />\n        Filter items on selected: This picker will show already-added suggestions but will not add duplicate tags.\n        <TagPicker\n          componentRef={ this._resolveRef('_picker') }\n          onResolveSuggestions={ this._onFilterChangedNoFilter }\n          onItemSelected={ this._onItemSelected }\n          getTextFromItem={ this._getTextFromItem }\n          pickerSuggestionsProps={\n            {\n              suggestionsHeaderText: 'Suggested Tags',\n              noResultsFoundText: 'No Color Tags Found'\n            }\n          }\n          itemLimit={ 2 }\n          disabled={ this.state.isPickerDisabled }\n          inputProps={ {\n            onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n            onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n            'aria-label': 'Tag Picker'\n          } }\n        />\n      </div>\n    );\n  }\n\n  private _getTextFromItem(item: any): any {\n    return item.name;\n  }\n\n  private _onDisabledButtonClick = (): void => {\n    this.setState({\n      isPickerDisabled: !this.state.isPickerDisabled\n    });\n  }\n\n  private _onFilterChanged = (filterText: string, tagList: { key: string, name: string }[]): { key: string, name: string }[] => {\n    return filterText ? _testTags.filter(tag => tag.name.toLowerCase().indexOf(filterText.toLowerCase()) === 0)\n      .filter(tag => !this._listContainsDocument(tag, tagList)) : [];\n  }\n\n  private _onFilterChangedNoFilter = (filterText: string, tagList: { key: string, name: string }[]): { key: string, name: string }[] => {\n    return filterText ? _testTags.filter(tag => tag.name.toLowerCase().indexOf(filterText.toLowerCase()) === 0) : [];\n  }\n\n  private _onItemSelected = (item: { key: string, name: string }): { key: string, name: string } | null => {\n    if (this._listContainsDocument(item, this._picker.items)) {\n      return null;\n    }\n    return item;\n  }\n\n  private _listContainsDocument(tag: { key: string, name: string }, tagList: { key: string, name: string }[]) {\n    if (!tagList || !tagList.length || tagList.length === 0) {\n      return false;\n    }\n    return tagList.filter(compareTag => compareTag.key === tag.key).length > 0;\n  }\n}\n"]}