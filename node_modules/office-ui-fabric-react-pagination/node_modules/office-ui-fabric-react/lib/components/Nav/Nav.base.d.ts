/// <reference types="react" />
import { BaseComponent } from '../../Utilities';
import { INav, INavProps } from './Nav.types';
export declare function isRelativeUrl(url: string): boolean;
export interface INavState {
    isGroupCollapsed?: {
        [key: string]: boolean;
    };
    isLinkExpandStateChanged?: boolean;
    selectedKey?: string;
}
export declare class NavBase extends BaseComponent<INavProps, INavState> implements INav {
    static defaultProps: INavProps;
    private _focusZone;
    constructor(props: INavProps);
    componentWillReceiveProps(newProps: INavProps): void;
    render(): JSX.Element | null;
    readonly selectedKey: string | undefined;
    /**
     * Sets focus to the first tabbable item in the zone.
     * @param forceIntoFirstElement - If true, focus will be forced into the first element, even
     * if focus is already in the focus zone.
     * @returns True if focus could be set to an active element, false if no operation was taken.
     */
    focus(forceIntoFirstElement?: boolean): boolean;
    private _onRenderLink;
    private _renderNavLink(link, linkIndex, nestingLevel);
    private _renderCompositeLink(link, linkIndex, nestingLevel);
    private _renderLink(link, linkIndex, nestingLevel);
    private _renderLinks(links, nestingLevel);
    private _renderGroup;
    private _onGroupHeaderClicked(group, ev);
    private _onLinkExpandClicked(link, ev);
    private _onNavAnchorLinkClicked(link, ev);
    private _onNavButtonLinkClicked(link, ev);
    private _isLinkSelected(link);
}
