{"version":3,"file":"CommandBarPage.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBarPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAMoC;AACpC,wCAAiE;AACjE,gFAA6E;AAC7E,8FAAgG;AAChG,gGAA6F;AAC7F,8EAA6E;AAC7E,+DAA0D;AAE1D,IAAM,0BAA0B,GAAG,OAAO,CAAC,oGAAoG,CAAW,CAAC;AAC3J,IAAM,qCAAqC,GAAG,OAAO,CAAC,2GAA2G,CAAW,CAAC;AAC7K,IAAM,kCAAkC,GAAG,OAAO,CAAC,4GAA4G,CAAW,CAAC;AAE3K;IAAoC,0CAA4C;IAAhF;;IA0DA,CAAC;IAzDQ,+BAAM,GAAb;QACE,IAAM,wBAAwB,GAAQ,EAAE,KAAK,cAAA,EAAE,aAAa,sBAAA,EAAE,QAAQ,iBAAA,EAAE,CAAC;QAEzE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EAAC,2HAA2H,EACxI,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,uDAAuD,EAAC,IAAI,EAAG,0BAA0B;oBAC1G,oBAAC,iDAAsB,uBAAM,wBAAwB,EAAK,CAC9C;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,qCAAqC,EAAC,IAAI,EAAG,qCAAqC;oBACnG,oBAAC,oEAAkC,OAAG,CAC1B;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,2CAA2C,EAAC,IAAI,EAAG,kCAAkC;oBACtG,oBAAC,iEAA8B,OAAG,CACtB,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,kFAAkF,CAAC;oBACnG,OAAO,CAAS,0FAA0F,CAAC;iBAC5G,GACD,EAEJ,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,yFAAyF,CAAC,CAC/F,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,oFAAoF,CAAC,CAC1F,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,sFAAsF,CAAC,CAC5F,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,uCAAgB,EACrB,GAEJ,CACH,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CAAC,AA1DD,CAAoC,KAAK,CAAC,SAAS,GA0DlD;AA1DY,wCAAc","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PropertiesTableSet,\n  PageMarkdown,\n} from '@uifabric/example-app-base';\nimport { items, overflowItems, farItems } from './examples/data';\nimport { CommandBarBasicExample } from './examples/CommandBar.Basic.Example';\nimport { CommandBarNonFocusableItemsExample } from './examples/CommandBar.NonFocusable.Example';\nimport { CommandBarCustomizationExample } from './examples/CommandBar.Customization.Example';\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\nimport { CommandBarStatus } from './CommandBar.checklist';\n\nconst CommandBarBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Basic.Example.tsx') as string;\nconst CommandBarNoFocusableItemsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.NonFocusable.Example.tsx') as string;\nconst CommandBarCustomizationExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Customization.Example.tsx') as string;\n\nexport class CommandBarPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render(): JSX.Element {\n    const cmdBarParamsTextAndIcons: any = { items, overflowItems, farItems };\n\n    return (\n      <ComponentPage\n        title='CommandBar'\n        componentName='CommandBarExample'\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/CommandBar'\n        exampleCards={\n          <div>\n            <ExampleCard title='CommandBar with search box and overflowing menu items' code={ CommandBarBasicExampleCode }>\n              <CommandBarBasicExample { ...cmdBarParamsTextAndIcons } />\n            </ExampleCard>\n            <ExampleCard title='CommandBar with non-focusable items' code={ CommandBarNoFocusableItemsExampleCode }>\n              <CommandBarNonFocusableItemsExample />\n            </ExampleCard>\n            <ExampleCard title='CommandBar with customized rendered items' code={ CommandBarCustomizationExampleCode }>\n              <CommandBarCustomizationExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/CommandBar.types.ts'),\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/ContextualMenu.types.ts')\n            ] }\n          />\n        }\n        overview={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarOverview.md') }\n          </PageMarkdown>\n        }\n        bestPractices={\n          <div />\n        }\n        dos={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDos.md') }\n          </PageMarkdown>\n        }\n        donts={\n          <PageMarkdown>\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDonts.md') }\n          </PageMarkdown>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        componentStatus={\n          <ComponentStatus\n            { ...CommandBarStatus }\n          />\n        }\n      />\n    );\n  }\n\n}\n"]}