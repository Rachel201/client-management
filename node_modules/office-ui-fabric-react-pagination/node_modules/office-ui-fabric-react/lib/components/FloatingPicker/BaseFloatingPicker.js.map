{"version":3,"file":"BaseFloatingPicker.js","sourceRoot":"../src/","sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css,\n  getRTL,\n  createRef\n} from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { ISuggestionModel }\n  from '../../Pickers';\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps, IBaseFloatingPickerSuggestionProps } from './BaseFloatingPicker.types';\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\nimport * as stylesImport from './BaseFloatingPicker.scss';\n// tslint:disable-next-line:no-any\nconst styles: any = stylesImport;\n\nexport interface IBaseFloatingPickerState {\n  queryString: string;\n  suggestedDisplayValue?: string;\n  moreSuggestionsAvailable?: boolean;\n  isMostRecentlyUsedVisible?: boolean;\n  suggestionsVisible?: boolean;\n  suggestionsLoading?: boolean;\n  isResultsFooterVisible?: boolean;\n  didBind: boolean;\n}\n\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>> extends BaseComponent<P, IBaseFloatingPickerState>\n  implements IBaseFloatingPicker {\n  protected selection: Selection;\n\n  protected root = createRef<HTMLDivElement>();\n  protected suggestionStore: SuggestionsStore<T>;\n  protected suggestionsControl: SuggestionsControl<T>;\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T> =\n    SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\n  protected loadingTimer: number | undefined;\n  // tslint:disable-next-line:no-any\n  protected currentPromise: PromiseLike<any>;\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    this.suggestionStore = basePickerProps.suggestionsStore;\n    this.state = {\n      queryString: '',\n      suggestedDisplayValue: '',\n      isMostRecentlyUsedVisible: false,\n      moreSuggestionsAvailable: false,\n      didBind: false,\n    };\n  }\n\n  public get inputText(): string {\n    return this.state.queryString;\n  }\n\n  // tslint:disable-next-line:no-any\n  public get suggestions(): any[] {\n    return this.suggestionStore.suggestions;\n  }\n\n  public forceResolveSuggestion(): void {\n    if (this.suggestionsControl && this.suggestionsControl.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  }\n\n  public get isSuggestionsShown(): boolean {\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n  }\n\n  public onQueryStringChanged = (queryString: string): void => {\n    if (queryString !== this.state.queryString) {\n      this.setState({\n        queryString: queryString,\n        moreSuggestionsAvailable: true,\n        isMostRecentlyUsedVisible: false,\n      });\n\n      this.showPicker();\n\n      if (queryString === '') {\n        this.updateSuggestionWithZeroState();\n      } else {\n        this.updateValue(queryString);\n      }\n    }\n  }\n\n  public hidePicker = (): void => {\n    if (this.props.onSuggestionsHidden && this.isSuggestionsShown) {\n      this.props.onSuggestionsHidden();\n    }\n\n    this.setState({\n      suggestionsVisible: false,\n    });\n  }\n\n  public showPicker = (updateValue: boolean = false): void => {\n    if (this.props.onSuggestionsShown && !this.isSuggestionsShown) {\n      this.props.onSuggestionsShown();\n    }\n\n    this.setState({\n      suggestionsVisible: true,\n    });\n\n    // If updateValue AND\n    //  Either suggestionsVisible is undefined (first time the suggestions is set to visble)\n    //  OR the inputElement value is different than the query string\n    if (updateValue &&\n      (this.state.suggestionsVisible === undefined\n        || (this.props.inputElement && this.props.inputElement.value !== this.state.queryString))) {\n      if (this.state.queryString === '') {\n        this.updateSuggestionWithZeroState();\n      } else {\n        this.updateValue(this.state.queryString);\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    this._bindToInputElement();\n\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(): void {\n    this._bindToInputElement();\n  }\n\n  public componentWillUnmount(): void {\n    this._unbindFromInputElement();\n  }\n\n  public completeSuggestion = (): void => {\n    if (this.suggestionsControl && this.suggestionsControl.hasSuggestionSelected()) {\n      this.onChange(this.suggestionsControl.currentSuggestion!.item);\n    }\n  }\n\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    return (\n      <div\n        ref={ this.root }\n        className={ css('ms-BasePicker', className ? className : '') }\n      >\n        { this.renderSuggestions() }\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout\n        className={ styles.callout }\n        isBeakVisible={ false }\n        gapSpace={ 5 }\n        target={ this.props.inputElement }\n        onDismiss={ this.hidePicker }\n        directionalHint={\n          getRTL() ? (\n            DirectionalHint.bottomRightEdge\n          ) : (\n              DirectionalHint.bottomLeftEdge\n            )\n        }\n        calloutWidth={ this.props.calloutWidth ? this.props.calloutWidth : 0 }\n      >\n        <TypedSuggestionsControl\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\n          onSuggestionClick={ this.onSuggestionClick }\n          onSuggestionRemove={ this.onSuggestionRemove }\n          suggestions={ this.suggestionStore.getSuggestions() }\n          ref={ this._resolveRef('suggestionsControl') }\n          completeSuggestion={ this.completeSuggestion }\n          shouldLoopSelection={ false }\n          { ...this.props.pickerSuggestionsProps as IBaseFloatingPickerSuggestionProps }\n        />\n      </Callout>\n    ) : null;\n  }\n\n  protected onSuggestionSelect(): void {\n    if (this.suggestionsControl && this.suggestionsControl.currentSuggestion) {\n      const currentValue: string = this.state.queryString;\n      const itemValue: string = this._getTextFromItem(\n        this.suggestionsControl.currentSuggestion.item,\n        currentValue\n      );\n      this.setState({ suggestedDisplayValue: itemValue });\n    }\n  }\n\n  protected onSelectionChange(): void {\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string): void {\n    if (this.props.onInputChanged) {\n      (this.props.onInputChanged as (filter: string) => void)(updatedValue);\n    }\n\n    this._onResolveSuggestions(updatedValue);\n  }\n\n  protected updateSuggestionWithZeroState(): void {\n    if (this.props.onZeroQuerySuggestion) {\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  protected updateSuggestionsList(\n    suggestions: T[] | PromiseLike<T[]>,\n    updatedValue?: string\n  ): void {\n    const suggestionsArray: T[] = suggestions as T[];\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<\n      T[]\n      >;\n\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      if (updatedValue !== undefined) {\n        this.resolveNewValue(updatedValue, suggestionsArray);\n      } else {\n        this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\n      }\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      this.setState({\n        suggestionsLoading: true\n      });\n\n      this._updateSuggestionsVisible(updatedValue !== undefined && updatedValue !== '');\n\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      const promise: PromiseLike<\n        T[]\n        > = (this.currentPromise = suggestionsPromiseLike);\n      promise.then((newSuggestions: T[]) => {\n        if (promise === this.currentPromise) {\n          if (updatedValue !== undefined) {\n            this.resolveNewValue(updatedValue, newSuggestions);\n          } else {\n            this.updateSuggestions(newSuggestions);\n            this.setState({\n              suggestionsLoading: false\n            });\n\n            this._updateSuggestionsVisible(newSuggestions.length > 0);\n          }\n          if (this.loadingTimer) {\n            this._async.clearTimeout(this.loadingTimer);\n            this.loadingTimer = undefined;\n          }\n        }\n      });\n    }\n  }\n\n  protected resolveNewValue(updatedValue: string, suggestions: T[]): void {\n    this.updateSuggestions(suggestions);\n    let itemValue: string | undefined = undefined;\n\n    if (this.suggestionsControl && this.suggestionsControl.currentSuggestion) {\n      itemValue = this._getTextFromItem(\n        this.suggestionsControl.currentSuggestion.item,\n        updatedValue\n      );\n    }\n\n    this.setState({\n      suggestionsLoading: false,\n      suggestedDisplayValue: itemValue\n    });\n\n    this._updateSuggestionsVisible(updatedValue !== '');\n  }\n\n  protected onChange(item: T): void {\n    if (this.props.onChange) {\n      (this.props.onChange as ((items: T) => void))(item);\n    }\n  }\n\n  protected onSuggestionClick = (\n    ev: React.MouseEvent<HTMLElement>,\n    item: T,\n    index: number\n  ): void => {\n    this.onChange(item);\n  }\n\n  protected onSuggestionRemove = (\n    ev: React.MouseEvent<HTMLElement>,\n    item: T,\n    index: number\n  ): void => {\n    if (this.props.onRemoveSuggestion) {\n      (this.props.onRemoveSuggestion as ((item: T) => void))(item);\n    }\n\n    if (this.suggestionsControl) {\n      this.suggestionsControl.removeSuggestion(index);\n    }\n  }\n\n  protected onKeyDown = (ev: MouseEvent): void => {\n    if (!this.state.suggestionsVisible ||\n      (this.props.inputElement &&\n        !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))) {\n      return;\n    }\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        this.hidePicker();\n        ev.preventDefault();\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (!ev.shiftKey &&\n          !ev.ctrlKey &&\n          this.suggestionsControl &&\n          this.suggestionsControl.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._onValidateInput();\n        }\n        break;\n\n      case KeyCodes.del:\n        if (this.props.onRemoveSuggestion\n          && this.suggestionsControl\n          && this.suggestionsControl.hasSuggestionSelected\n          && this.suggestionsControl.currentSuggestion) {\n          (this.props.onRemoveSuggestion as ((item: T) => void))(\n            this.suggestionsControl.currentSuggestion!.item\n          );\n\n          this.suggestionsControl.removeSuggestion();\n          this.forceUpdate();\n        }\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.up:\n        if (this.suggestionsControl && this.suggestionsControl.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.suggestionsControl && this.suggestionsControl.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n    }\n  }\n\n  private _onResolveSuggestions(updatedValue: string): void {\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\n\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions, updatedValue);\n    }\n  }\n\n  private _onValidateInput = (): void => {\n    if (\n      this.state.queryString &&\n      this.props.onValidateInput &&\n      this.props.createGenericItem\n    ) {\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as ((\n        input: string,\n        isValid: boolean\n      ) => ISuggestionModel<T>))(\n        this.state.queryString,\n        (this.props.onValidateInput as ((input: string) => boolean))(this.state.queryString)\n      );\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n      this.onChange(convertedItems[0].item);\n    }\n  }\n\n  private _getTextFromItem(item: T, currentValue?: string): string {\n    if (this.props.getTextFromItem) {\n      return (this.props.getTextFromItem as ((item: T, currentValue?: string) => string))(item, currentValue);\n    } else {\n      return '';\n    }\n  }\n\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  private _bindToInputElement(): void {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: true });\n    }\n  }\n\n  private _unbindFromInputElement(): void {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: false });\n    }\n  }\n}"]}