{"version":3,"file":"FloatingPeoplePickerPage.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/FloatingPeoplePickerPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAKoC;AACpC,kHAA+G;AAE/G,IAAM,oCAAoC,GAAG,OAAO,CAClD,+HAA+H,CACtH,CAAC;AAEZ;IAA8C,oDAA4C;IAA1F;;IAoDA,CAAC;IAnDQ,yCAAM,GAAb;QACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,sBAAsB,EAC5B,aAAa,EAAC,6BAA6B,EAC3C,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,oCAAoC;oBACrF,oBAAC,qEAAgC,OAAG,CACxB,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,8FAA8F,CAAC;iBAChH,GACD,EAEJ,QAAQ,EACN;gBACE,0JACe,CACX,EAER,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,aAAa,EACX,6gBAG2H,EAE7H,GAAG,EACD;gBACE;oBACE,kGAAwE,CACrE,CACD,EAER,KAAK,EACH;gBACE;oBACE,qGAA2E;oBAC3E,wFAA8D,CAC3D,CACD,GAER,CACH,CAAC;IACJ,CAAC;IAEH,+BAAC;AAAD,CAAC,AApDD,CAA8C,KAAK,CAAC,SAAS,GAoD5D;AApDY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  ComponentPage,\n  IComponentDemoPageProps,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { FloatingPeoplePickerTypesExample } from '../PeoplePicker/examples/FloatingPeoplePicker.Basic.Example';\n\nconst FloatingPeoplePickerBasicExampleCode = require(\n  '!raw-loader!office-ui-fabric-react/src/components/FloatingPicker/PeoplePicker/examples/FloatingPeoplePicker.Basic.Example.tsx'\n) as string;\n\nexport class FloatingPeoplePickerPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render(): JSX.Element {\n    return (\n      <ComponentPage\n        title='FloatingPeoplePicker'\n        componentName='FloatingPeoplePickerExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='Floating People Picker' code={ FloatingPeoplePickerBasicExampleCode }>\n              <FloatingPeoplePickerTypesExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/FloatingPicker/BaseFloatingPicker.types.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <span> FloatingPeoplePicker are used to pick recipients but do not need a well or necessarily keep track of selected\n              people</span>\n          </div>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }\n        bestPractices={\n          <div>The FloatingPeoplePicker is used to select one or more entities, such as people or groups. Entry points for PeoplePickers\n            are typically specialized TextField-like input fields known as a \"well\", which are used to search for recipients from a list.\n            When a recipient is selected from the list, it is added to the well as a specialized Persona that can be interacted with or\n            removed. Clicking on a Persona from the well should invoke a PersonaCard or open a profile pane for that recipient.</div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use the FloatingPeoplePicker to quickly search for a few people</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Use the FloatingPeoplePicker to select something other than people</li>\n              <li>Use the FloatingPeoplePicker without sufficient space</li>\n            </ul>\n          </div>\n        }\n      />\n    );\n  }\n\n}"]}