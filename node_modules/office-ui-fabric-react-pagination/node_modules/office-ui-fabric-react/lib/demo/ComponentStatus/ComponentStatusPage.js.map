{"version":3,"file":"ComponentStatusPage.js","sourceRoot":"../src/","sources":["demo/ComponentStatus/ComponentStatusPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ComponentPage,\n  IComponentPageSection,\n  PageMarkdown,\n} from '@uifabric/example-app-base';\nimport { Link } from '../../Link';\nimport { AllComponentsStatus } from './AllComponents.checklist';\nimport { ComponentStatusInfoState, IComponentStatusInfoState, InformationLink } from './ComponentStatusState';\nimport { ComponentStatus } from './ComponentStatus';\nimport './ComponentStatusPage.scss';\n\nexport class ComponentStatusPage extends React.Component<{}, {}> {\n  public render(): JSX.Element {\n    const sections: IComponentPageSection[] = [{ title: 'Badges', section: this._renderStatusesInfo() }, { title: 'Status', section: this._renderComponents() }];\n\n    return (\n      <ComponentPage\n        title='Components Checklist'\n        componentName='Components Checklist'\n        editOverviewUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/demo/ComponentStatus/docs/ComponentChecklistOverview.md'\n        overview={ this._renderOverView() }\n        otherSections={ sections }\n      />\n    );\n  }\n\n  private _renderOverView(): JSX.Element {\n    return (\n      <PageMarkdown>\n        { require<string>('!raw-loader!office-ui-fabric-react/src/demo/ComponentStatus/docs/ComponentChecklistOverview.md') }\n      </PageMarkdown>\n    );\n  }\n\n  private _renderComponents(): JSX.Element {\n    return (\n      <div>\n        <table className='componentTable'>\n          <tbody>\n            { Object.keys(AllComponentsStatus).map((componentName: string, index: number) => {\n              return this._renderComponent(componentName);\n            }) }\n          </tbody>\n        </table>\n      </div >\n    );\n  }\n\n  private _renderComponent(componentName: string): JSX.Element {\n    const component = AllComponentsStatus[componentName];\n    return (\n      <tr key={ componentName + '-key' }>\n        <th className='componentCells'><h3>{ componentName } </h3> </th>\n        <td className='componentBadgeCell'><ComponentStatus\n          { ...component }\n        /></td>\n      </tr >\n    );\n  }\n\n  private _renderStatusesInfo(): JSX.Element {\n    return (\n      <div>\n        <table className='componentTable'>\n          <tbody>\n            <tr>\n              <th className='componentCells'>Name</th>\n              <th className='componentCells'>Description</th>\n              <th className='componentCells'>Success</th>\n            </tr>\n            { ComponentStatusInfoState.map((name: IComponentStatusInfoState) => {\n              return this._renderStatusInfo(name);\n            }) }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  private _renderStatusInfo(statusInfo: IComponentStatusInfoState): JSX.Element {\n    return (\n      <tr key={ statusInfo.name + '-key' }>\n        <th className='componentCells'> { statusInfo.name } </th>\n        <td className='componentCells'> { statusInfo.description } </td>\n        <td className='componentCells'> { statusInfo.success }\n          { statusInfo.link && this._createLink(statusInfo.link) }\n        </td>\n      </tr>\n    );\n  }\n\n  private _createLink(information: InformationLink): JSX.Element {\n    return (\n      <Link\n        href={ information.link }\n      >\n        { ' ' + information.renderedText }\n      </Link>\n    );\n  }\n}\n"]}