{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\client-management\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { i18n } from \"./translations/i18n\";\nimport AppNav from './components/AppNav'; // import  '../scssPages/base.scss';\n\nimport store from './store/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // useEffect(() => {\n  //   store.dispatch(loadOptions()); \n  // }, []);\n  const handleOnclick = e => {\n    e.preventDefault(); // setLanguage(e.target.value);\n\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(AppNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/client-management/src/App.tsx"],"names":["React","Provider","i18n","AppNav","store","App","handleOnclick","e","preventDefault","changeLanguage","target","value"],"mappings":";AAIA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAAkBC,QAAlB,QAA+C,aAA/C;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AAIA,OAAOC,KAAP,MAAkB,eAAlB;;;;AAMA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA,QAAMC,aAAa,GAAIC,CAAD,IAA+B;AACnDA,IAAAA,CAAC,CAACC,cAAF,GADmD,CAEnD;;AACAN,IAAAA,IAAI,CAACO,cAAL,CAAoBF,CAAC,CAACG,MAAF,CAASC,KAA7B;AACD,GAJD;;AAQA,sBACE;AAAA,2BACA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,KAAjB;AAAA,6BACM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AASD;;KArBQC,G;AAuBT,eAAeA,GAAf","sourcesContent":["\r\n\r\n\r\n\r\nimport React, { useEffect }  from 'react';\r\nimport { connect, Provider, useSelector } from 'react-redux'\r\nimport { i18n } from \"./translations/i18n\";\r\nimport AppNav from './components/AppNav';\r\n// import  '../scssPages/base.scss';\r\nimport { useState } from 'react';\r\nimport Home from './components/Home';\r\nimport { createStore } from 'redux';\r\nimport store from './store/store';\r\nimport Logout from './components/auth/Logout';\r\nimport { loadOptions } from './store/actions/dataActions';\r\n\r\n\r\n\r\nfunction App() {\r\n  // useEffect(() => {\r\n  //   store.dispatch(loadOptions()); \r\n  // }, []);\r\n  const handleOnclick = (e: React.ChangeEvent<any>) => {\r\n    e.preventDefault();\r\n    // setLanguage(e.target.value);\r\n    i18n.changeLanguage(e.target.value);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Provider store={store}> \r\n          <AppNav/>\r\n         {/* <Logout/> */}\r\n     \r\n     </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}