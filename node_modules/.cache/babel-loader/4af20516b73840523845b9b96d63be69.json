{"ast":null,"code":"var imageRoot = 'http://fabricweb.azureedge.net/fabric-website/assets/images/avatar';\n/** Sample names and images for use in Avatar examples */\n\nvar nameAndImage = [{\n  name: 'Katri Athokas',\n  image: imageRoot + \"/KatriAthokas.jpg\"\n}, {\n  name: 'Elvia Atkins',\n  image: imageRoot + \"/ElviaAtkins.jpg\"\n}, {\n  name: 'Mauricio August',\n  image: imageRoot + \"/MauricioAugust.jpg\"\n}, {\n  name: 'Colin Ballinger',\n  image: imageRoot + \"/ColinBallinger.jpg\"\n}, {\n  name: 'Lydia Bauer',\n  image: imageRoot + \"/LydiaBauer.jpg\"\n}, {\n  name: 'Amanda Brady',\n  image: imageRoot + \"/AmandaBrady.jpg\"\n}, {\n  name: 'Henry Brill',\n  image: imageRoot + \"/HenryBrill.jpg\"\n}, {\n  name: 'Celeste Burton',\n  image: imageRoot + \"/CelesteBurton.jpg\"\n}, {\n  name: 'Robin Counts',\n  image: imageRoot + \"/RobinCounts.jpg\"\n}, {\n  name: 'Tim Deboer',\n  image: imageRoot + \"/TimDeboer.jpg\"\n}, {\n  name: 'Cameron Evans',\n  image: imageRoot + \"/CameronEvans.jpg\"\n}, {\n  name: 'Isaac Fielder',\n  image: imageRoot + \"/IsaacFielder.jpg\"\n}, {\n  name: 'Cecil Folk',\n  image: imageRoot + \"/CecilFolk.jpg\"\n}, {\n  name: 'Miguel Garcia',\n  image: imageRoot + \"/MiguelGarcia.jpg\"\n}, {\n  name: 'Wanda Howard',\n  image: imageRoot + \"/WandaHoward.jpg\"\n}, {\n  name: 'Mona Kane',\n  image: imageRoot + \"/MonaKane.jpg\"\n}, {\n  name: 'Kat Larsson',\n  image: imageRoot + \"/KatLarsson.jpg\"\n}, {\n  name: 'Ashley McCarthy',\n  image: imageRoot + \"/AshleyMcCarthy.jpg\"\n}, {\n  name: 'Johnie McConnell',\n  image: imageRoot + \"/JohnieMcConnell.jpg\"\n}, {\n  name: 'Allan Munger',\n  image: imageRoot + \"/AllanMunger.jpg\"\n}, {\n  name: 'Erik Nason',\n  image: imageRoot + \"/ErikNason.jpg\"\n}, {\n  name: 'Kristin Patterson',\n  image: imageRoot + \"/KristinPatterson.jpg\"\n}, {\n  name: 'Daisy Phillips',\n  image: imageRoot + \"/DaisyPhillips.jpg\"\n}, {\n  name: 'Carole Poland',\n  image: imageRoot + \"/CarolePoland.jpg\"\n}, {\n  name: 'Carlos Slattery',\n  image: imageRoot + \"/CarlosSlattery.jpg\"\n}, {\n  name: 'Robert Tolbert',\n  image: imageRoot + \"/RobertTolbert.jpg\"\n}, {\n  name: 'Kevin Sturgis',\n  image: imageRoot + \"/KevinSturgis.jpg\"\n}, {\n  name: 'Charlotte Waltson',\n  image: imageRoot + \"/CharlotteWaltson.jpg\"\n}, {\n  name: 'Elliot Woodward',\n  image: imageRoot + \"/ElliotWoodward.jpg\"\n}];\n/** Arrays of example values for each Avatar prop */\n\nexport var AvatarExamples = {\n  size: [20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 96, 120, 128],\n  nameAndImage: nameAndImage,\n  name: nameAndImage.map(function (p) {\n    return p.name;\n  }),\n  image: nameAndImage.map(function (p) {\n    return p.image;\n  }),\n  activeDisplay: ['ring', 'ring-shadow', 'ring-glow', 'shadow', 'glow'],\n  color: ['neutral', 'brand', 'colorful'],\n  namedColors: ['darkRed', 'cranberry', 'red', 'pumpkin', 'peach', 'marigold', 'gold', 'brass', 'brown', 'forest', 'seafoam', 'darkGreen', 'lightTeal', 'teal', 'steel', 'blue', 'royalBlue', 'cornflower', 'navy', 'lavender', 'purple', 'grape', 'lilac', 'pink', 'magenta', 'plum', 'beige', 'mink', 'platinum', 'anchor'],\n\n  /** A SVG hexagon data URL used by the CustomShape example */\n  hexagon: 'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"32\" viewBox=\"0 0 36 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">' + '<path fill=\"rgb(232,232,232)\" d=\"M0.407926 17.528C-0.135976 16.5859 -0.135975 15.4141 0.407926 14.472' + 'L7.91541 1.46793C8.44076 0.557947 9.39444 0 10.4245 0H25.5755C26.6056 0 27.5592 0.557951 28.0846 1.46793' + 'L35.5921 14.472C36.136 15.4141 36.136 16.5859 35.5921 17.528L28.0846 30.5321' + 'C27.5592 31.4421 26.6056 32 25.5755 32H10.4245C9.39443 32 8.44076 31.4421 7.91541 30.5321L0.407926 17.528Z\"/>' + '</svg>'\n};","map":{"version":3,"sources":["AvatarExamples.tsx"],"names":[],"mappings":"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","sourcesContent":["const imageRoot = 'http://fabricweb.azureedge.net/fabric-website/assets/images/avatar';\n\n/** Sample names and images for use in Avatar examples */\nconst nameAndImage = [\n  { name: 'Katri Athokas', image: `${imageRoot}/KatriAthokas.jpg` },\n  { name: 'Elvia Atkins', image: `${imageRoot}/ElviaAtkins.jpg` },\n  { name: 'Mauricio August', image: `${imageRoot}/MauricioAugust.jpg` },\n  { name: 'Colin Ballinger', image: `${imageRoot}/ColinBallinger.jpg` },\n  { name: 'Lydia Bauer', image: `${imageRoot}/LydiaBauer.jpg` },\n  { name: 'Amanda Brady', image: `${imageRoot}/AmandaBrady.jpg` },\n  { name: 'Henry Brill', image: `${imageRoot}/HenryBrill.jpg` },\n  { name: 'Celeste Burton', image: `${imageRoot}/CelesteBurton.jpg` },\n  { name: 'Robin Counts', image: `${imageRoot}/RobinCounts.jpg` },\n  { name: 'Tim Deboer', image: `${imageRoot}/TimDeboer.jpg` },\n  { name: 'Cameron Evans', image: `${imageRoot}/CameronEvans.jpg` },\n  { name: 'Isaac Fielder', image: `${imageRoot}/IsaacFielder.jpg` },\n  { name: 'Cecil Folk', image: `${imageRoot}/CecilFolk.jpg` },\n  { name: 'Miguel Garcia', image: `${imageRoot}/MiguelGarcia.jpg` },\n  { name: 'Wanda Howard', image: `${imageRoot}/WandaHoward.jpg` },\n  { name: 'Mona Kane', image: `${imageRoot}/MonaKane.jpg` },\n  { name: 'Kat Larsson', image: `${imageRoot}/KatLarsson.jpg` },\n  { name: 'Ashley McCarthy', image: `${imageRoot}/AshleyMcCarthy.jpg` },\n  { name: 'Johnie McConnell', image: `${imageRoot}/JohnieMcConnell.jpg` },\n  { name: 'Allan Munger', image: `${imageRoot}/AllanMunger.jpg` },\n  { name: 'Erik Nason', image: `${imageRoot}/ErikNason.jpg` },\n  { name: 'Kristin Patterson', image: `${imageRoot}/KristinPatterson.jpg` },\n  { name: 'Daisy Phillips', image: `${imageRoot}/DaisyPhillips.jpg` },\n  { name: 'Carole Poland', image: `${imageRoot}/CarolePoland.jpg` },\n  { name: 'Carlos Slattery', image: `${imageRoot}/CarlosSlattery.jpg` },\n  { name: 'Robert Tolbert', image: `${imageRoot}/RobertTolbert.jpg` },\n  { name: 'Kevin Sturgis', image: `${imageRoot}/KevinSturgis.jpg` },\n  { name: 'Charlotte Waltson', image: `${imageRoot}/CharlotteWaltson.jpg` },\n  { name: 'Elliot Woodward', image: `${imageRoot}/ElliotWoodward.jpg` },\n];\n\n/** Arrays of example values for each Avatar prop */\nexport const AvatarExamples = {\n  size: [20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 96, 120, 128],\n  nameAndImage: nameAndImage,\n  name: nameAndImage.map(p => p.name),\n  image: nameAndImage.map(p => p.image),\n  activeDisplay: ['ring', 'ring-shadow', 'ring-glow', 'shadow', 'glow'],\n  color: ['neutral', 'brand', 'colorful'],\n  namedColors: [\n    'darkRed',\n    'cranberry',\n    'red',\n    'pumpkin',\n    'peach',\n    'marigold',\n    'gold',\n    'brass',\n    'brown',\n    'forest',\n    'seafoam',\n    'darkGreen',\n    'lightTeal',\n    'teal',\n    'steel',\n    'blue',\n    'royalBlue',\n    'cornflower',\n    'navy',\n    'lavender',\n    'purple',\n    'grape',\n    'lilac',\n    'pink',\n    'magenta',\n    'plum',\n    'beige',\n    'mink',\n    'platinum',\n    'anchor',\n  ],\n  /** A SVG hexagon data URL used by the CustomShape example */\n  hexagon:\n    'data:image/svg+xml;utf8,' +\n    '<svg width=\"36\" height=\"32\" viewBox=\"0 0 36 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">' +\n    '<path fill=\"rgb(232,232,232)\" d=\"M0.407926 17.528C-0.135976 16.5859 -0.135975 15.4141 0.407926 14.472' +\n    'L7.91541 1.46793C8.44076 0.557947 9.39444 0 10.4245 0H25.5755C26.6056 0 27.5592 0.557951 28.0846 1.46793' +\n    'L35.5921 14.472C36.136 15.4141 36.136 16.5859 35.5921 17.528L28.0846 30.5321' +\n    'C27.5592 31.4421 26.6056 32 25.5755 32H10.4245C9.39443 32 8.44076 31.4421 7.91541 30.5321L0.407926 17.528Z\"/>' +\n    '</svg>',\n} as const;\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}