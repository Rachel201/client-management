{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\client-management\\\\src\\\\components\\\\AppNav.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // import { IAppNavbar, IAuthReduxProps } from '../Models/type/interface';\n\nimport Home from './Home';\nimport { logout1 } from '../store/actions/authActions'; // import Login from './Login';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppNav = () => {\n  _s();\n\n  let check = null;\n  const dispatch = useDispatch();\n  const isLogin = useSelector(state => {\n    check = state.authReducer.isAuthentitcated;\n    console.log(check);\n    return check;\n  });\n  const [isLog, setIsLog] = useState(isLogin);\n\n  if (isLog === false) {\n    logout1(dispatch);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"check hoih\", isLogin), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // const mapStateToProps = (state: IAuthReduxProps) => ({\n//     auth: state.auth\n//   });\n\n\n_s(AppNav, \"m6UC56Yio5Bnr3GXWHs+zsIMTao=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AppNav;\nexport default AppNav; // export default connect(mapStateToProps, null)(AppNav)\n\nvar _c;\n\n$RefreshReg$(_c, \"AppNav\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/client-management/src/components/AppNav.tsx"],"names":["React","useState","useDispatch","useSelector","Home","logout1","AppNav","check","dispatch","isLogin","state","authReducer","isAuthentitcated","console","log","isLog","setIsLog"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,OAAT,QAAwB,8BAAxB,C,CACA;;;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,MAAIC,KAAK,GAAG,IAAZ;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAgB;AACxCH,IAAAA,KAAK,GAAGG,KAAK,CAACC,WAAN,CAAkBC,gBAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,WAAOA,KAAP;AACH,GAJ0B,CAA3B;AAKA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACQ,OAAD,CAAlC;;AAEA,MAAIM,KAAK,KAAK,KAAd,EAAqB;AACjBV,IAAAA,OAAO,CAACG,QAAD,CAAP;AACH;;AAED,sBACI;AAAA,eAEKK,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,OAA1B,CAFL,eAGI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAYH,CA1BD,C,CA2BA;AACA;AACA;;;GA7BMH,M;UAEeJ,W,EACDC,W;;;KAHdG,M;AA8BN,eAAeA,MAAf,C,CACA","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { IAppNavbar, IAuthReduxProps } from '../Models/type/interface';\r\nimport Home from './Home';\r\nimport Login from './auth/Login';\r\nimport { logout1 } from '../store/actions/authActions';\r\n// import Login from './Login';\r\n\r\n\r\nconst AppNav = () => {\r\n    let check = null;\r\n    const dispatch = useDispatch()\r\n    const isLogin = useSelector((state: any) => {\r\n        check = state.authReducer.isAuthentitcated;\r\n        console.log(check)\r\n        return check\r\n    })\r\n    const [isLog, setIsLog] = useState(isLogin)\r\n\r\n    if (isLog === false) {\r\n        logout1(dispatch)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Login/> */}\r\n            {console.log(\"check hoih\", isLogin)}\r\n            <Home/> \r\n            {/* {isLogin ?  <Home /> :<Login />} */}\r\n           \r\n            {/* {auth && auth.isAuthenticated ?<Home/> :<Login/> } */}\r\n        </>\r\n    );\r\n\r\n\r\n};\r\n// const mapStateToProps = (state: IAuthReduxProps) => ({\r\n//     auth: state.auth\r\n//   });\r\nexport default AppNav;\r\n// export default connect(mapStateToProps, null)(AppNav)"]},"metadata":{},"sourceType":"module"}