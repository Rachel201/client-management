{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { lorem } from './lorem';\nvar DATA = {\n  color: ['red', 'blue', 'green', 'yellow'],\n  shape: ['circle', 'square', 'triangle'],\n  location: ['Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland']\n};\n/** @internal */\n\nexport function createListItems(count, startIndex) {\n  if (startIndex === void 0) {\n    startIndex = 0;\n  }\n\n  return __spreadArrays(Array(count)).map(function (item, index) {\n    var size = 150 + Math.round(Math.random() * 100);\n    return {\n      thumbnail: \"//via.placeholder.com/\" + size + \"x\" + size,\n      key: 'item-' + (index + startIndex) + ' ' + lorem(4),\n      name: lorem(5),\n      description: lorem(10 + Math.round(Math.random() * 50)),\n      color: _randWord(DATA.color),\n      shape: _randWord(DATA.shape),\n      location: _randWord(DATA.location),\n      width: size,\n      height: size\n    };\n  });\n}\n/** @internal */\n\nexport function createGroups(groupCount, groupDepth, startIndex, itemsPerGroup, level, key, isCollapsed) {\n  if (level === void 0) {\n    level = 0;\n  }\n\n  if (key === void 0) {\n    key = '';\n  }\n\n  if (key !== '') {\n    key = key + '-';\n  }\n\n  var count = Math.pow(itemsPerGroup, groupDepth);\n  return __spreadArrays(Array(groupCount)).map(function (value, index) {\n    return {\n      count: count,\n      key: 'group' + key + index,\n      name: 'group ' + key + index,\n      startIndex: index * count + startIndex,\n      level: level,\n      isCollapsed: isCollapsed,\n      children: groupDepth > 1 ? createGroups(groupCount, groupDepth - 1, index * count + startIndex, itemsPerGroup, level + 1, key + index) : []\n    };\n  });\n}\n/** @internal */\n\nexport function isGroupable(key) {\n  return key === 'color' || key === 'shape' || key === 'location';\n}\n\nfunction _randWord(array) {\n  var index = Math.floor(Math.random() * array.length);\n  return array[index];\n}","map":{"version":3,"sources":["listItems.ts"],"names":[],"mappings":"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","sourcesContent":["import { lorem } from './lorem';\n\nconst DATA = {\n  color: ['red', 'blue', 'green', 'yellow'],\n  shape: ['circle', 'square', 'triangle'],\n  location: ['Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland'],\n};\n\n/** @internal */\nexport interface IExampleItem {\n  thumbnail: string;\n  key: string;\n  name: string;\n  description: string;\n  color: string;\n  shape: string;\n  location: string;\n  width: number;\n  height: number;\n}\n\n/** @internal */\nexport function createListItems(count: number, startIndex: number = 0): IExampleItem[] {\n  return [...Array(count)].map((item: number, index: number) => {\n    const size = 150 + Math.round(Math.random() * 100);\n\n    return {\n      thumbnail: `//via.placeholder.com/${size}x${size}`,\n      key: 'item-' + (index + startIndex) + ' ' + lorem(4),\n      name: lorem(5),\n      description: lorem(10 + Math.round(Math.random() * 50)),\n      color: _randWord(DATA.color),\n      shape: _randWord(DATA.shape),\n      location: _randWord(DATA.location),\n      width: size,\n      height: size,\n    };\n  });\n}\n\n/**\n * For use in this package only.\n * Partial mirror of IGroup from DetailsList avoid a circular dependency.\n * If the real interface changes and this one starts causing compiler errors, update it.\n * @internal\n */\nexport interface IExampleGroup {\n  count: number;\n  key: string;\n  name: string;\n  startIndex: number;\n  level?: number;\n  isCollapsed?: boolean;\n  children?: IExampleGroup[];\n}\n\n/** @internal */\nexport function createGroups(\n  groupCount: number,\n  groupDepth: number,\n  startIndex: number,\n  itemsPerGroup: number,\n  level: number = 0,\n  key: string = '',\n  isCollapsed?: boolean,\n): IExampleGroup[] {\n  if (key !== '') {\n    key = key + '-';\n  }\n  const count = Math.pow(itemsPerGroup, groupDepth);\n  return [...Array(groupCount)].map((value: number, index: number) => {\n    return {\n      count: count,\n      key: 'group' + key + index,\n      name: 'group ' + key + index,\n      startIndex: index * count + startIndex,\n      level: level,\n      isCollapsed: isCollapsed,\n      children:\n        groupDepth > 1\n          ? createGroups(groupCount, groupDepth - 1, index * count + startIndex, itemsPerGroup, level + 1, key + index)\n          : [],\n    };\n  });\n}\n\n/** @internal */\nexport function isGroupable(key: string): boolean {\n  return key === 'color' || key === 'shape' || key === 'location';\n}\n\nfunction _randWord(array: string[]): string {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}