{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\client-management\\\\src\\\\components\\\\customerDetails\\\\CustomerDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { CustomDropdown } from \"../../shared/components/Option\";\nimport { CustomTextField, CustomTextFieldAddInput } from \"../../shared/components/TextField\";\nimport { TextFeildNote } from \"../../shared/components/Note\";\nimport { CustomToggle } from \"../../shared/components/Toggle\";\nimport './customerDetails.scss';\nimport { Icons } from \"../../modelsType/Icon\";\nimport Subtitle from \"../../shared/components/Subtitle\";\nimport '../../scssPages/sub-header.scss';\nimport { DefaultButton, IconButton, PrimaryButton } from \"@fluentui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Title from \"../../shared/components/Title\";\nimport { createCustomer, readCustomerId } from \"../../store/actions/customerActioin\";\nimport { loadOptions } from \"../../store/actions/dataActions\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blankCustomer = {\n  gender: 1,\n  otherGender: \"\",\n  CustomerStatus: 0,\n  entityStatusId: 0,\n  firstName: \"\",\n  note: \"\",\n  lastName: \"\",\n  isLocked: false,\n  dateBirth: \"\",\n  genderOther: \"\",\n  middleName: \"\",\n  otherCustomerStatus: \"\",\n  classId: 1,\n  entitySubTypeId: 1,\n  ViewNoteWhenPerformingAction: false,\n  industryId: 0,\n  CreditGroup: 0,\n  idAffiliate: 0,\n  idTypeId: \"\",\n  idNumber: \"\",\n  idTypeOther: \"\",\n  addressCountryCode: \"\",\n  idIdentifier: 0,\n  address: \"\",\n  addressNumber: \"\",\n  addressCity: \"\",\n  iDCountryCode: \"\",\n  telephone: \"\",\n  telephoneCountryCode: 0,\n  email: \"\",\n  entityNumber: \"\"\n};\n\nconst CustomerDetails = () => {\n  _s();\n\n  const options = {\n    genders: [],\n    typeIdentityNumbers: [],\n    customersStatus: [],\n    customersCondition: [],\n    customersType: []\n  };\n  const [t, i18n] = useTranslation();\n  const dispatch = useDispatch();\n  const [readOnly, setReadOnly] = useState(false);\n  const [update, setUpdate] = useState(true);\n  const [typeButton, setTypeButton] = useState();\n  const [customer, setCustomer] = useState(blankCustomer);\n  const [optionsForm, setOptionsForm] = useState(options); // const [fieldsOptionsMap,setFieldsOptionsMap]=useState(null)\n\n  const [msgIsCreated, setMsgIsCreated] = useState(\"\");\n  const {\n    dataCustomer\n  } = useSelector(({\n    customerReducer\n  }) => customerReducer);\n  const fieldsOptionsMapFromReducer = useSelector(({\n    dataReducer\n  }) => dataReducer);\n  const [userCredentials, setUserCredentials] = useState(null);\n  const {\n    user\n  } = useSelector(({\n    authReducer\n  }) => authReducer);\n  const params = useParams(); //details of user login\n\n  useEffect(() => {\n    if (!user) return;\n    const userObj = JSON.parse(user);\n    if (!userObj) return;\n    console.log(\"userObj: \", userObj);\n    setUserCredentials({\n      \"idInitiator\": userObj.data.user.id_entity,\n      \"idClient\": userObj.data.client.id_entity,\n      \"idBranch\": userObj.data.branch.id_entity\n    });\n    console.log(\"UserCredentials : \", userCredentials);\n  }, []); //id of customer frrom search\n\n  useEffect(() => {\n    console.log(\"params : \", params);\n\n    if (params === null || params === void 0 ? void 0 : params.userId) {\n      const userId = params.userId;\n      callReadCustomer(userId, userCredentials);\n    }\n  }, [params]);\n\n  const callReadCustomer = async (userId, listIdUser) => {\n    dispatch(readCustomerId(userId, listIdUser));\n  }; //call to option in dropDwan  \n\n\n  useEffect(() => {\n    var _fieldsOptionsMapFrom;\n\n    if (!(fieldsOptionsMapFromReducer === null || fieldsOptionsMapFromReducer === void 0 ? void 0 : (_fieldsOptionsMapFrom = fieldsOptionsMapFromReducer.data) === null || _fieldsOptionsMapFrom === void 0 ? void 0 : _fieldsOptionsMapFrom.generalFormOptionsMa)) {\n      callLoadOptions();\n    }\n  }, []);\n\n  const callLoadOptions = async () => {\n    try {\n      await dispatch(loadOptions());\n      console.log(\"good\");\n    } catch (error) {\n      console.log(\"error in call load options\", error);\n    }\n  }; //build the option in dropdwan\n\n\n  const buildObjecOptions = nameOption => {\n    fieldsOptionsMapFromReducer.data.generalFormOptionsMap[nameOption].map((objOptin, index) => {\n      //@ts-ignore\n      options[nameOption][index] = {\n        key: objOptin.enum_id,\n        text: objOptin.enum_value\n      };\n    });\n  }; //update the object  option \n\n\n  useEffect(() => {\n    var _fieldsOptionsMapFrom2;\n\n    if (!(fieldsOptionsMapFromReducer === null || fieldsOptionsMapFromReducer === void 0 ? void 0 : (_fieldsOptionsMapFrom2 = fieldsOptionsMapFromReducer.data) === null || _fieldsOptionsMapFrom2 === void 0 ? void 0 : _fieldsOptionsMapFrom2.generalFormOptionsMap)) return;\n    const nameOptions = [\"customersCondition\", \"customersType\", \"genders\", \"typeIdentityNumbers\", \"customersStatus\"];\n\n    for (let value of nameOptions) {\n      buildObjecOptions(value);\n    }\n\n    console.log(\"option customer before state\", options);\n    setOptionsForm({ ...options\n    });\n  }, [fieldsOptionsMapFromReducer]); //function called to options\n  //function created customer\n\n  useEffect(() => {\n    if ((dataCustomer === null || dataCustomer === void 0 ? void 0 : dataCustomer.err_code) === 0) {\n      setUpdate(false);\n      console.log(\"typeButton\", typeButton);\n\n      if (typeButton === \"creat\") {\n        setMsgIsCreated(\"Customer created successfully\");\n      } else {\n        if (dataCustomer === null || dataCustomer === void 0 ? void 0 : dataCustomer.err_code) {\n          if ((dataCustomer === null || dataCustomer === void 0 ? void 0 : dataCustomer.err_code) !== 0) setMsgIsCreated(\"The customer's details are incorrect  try again\");\n        } else {\n          setMsgIsCreated(\"\");\n        }\n      }\n    }\n\n    if (!(dataCustomer === null || dataCustomer === void 0 ? void 0 : dataCustomer.data)) return;\n    setCustomer({ ...customer,\n      classId: dataCustomer.data.class.class_id,\n      dateBirth: dataCustomer.data.properties.date_birth,\n      firstName: dataCustomer.data.properties.first_name,\n      lastName: dataCustomer.data.properties.last_name,\n      entitySubTypeId: dataCustomer.data.types.entity_sub_type_id,\n      isLocked: dataCustomer.data.properties.is_locked,\n      note: dataCustomer.data.properties.note,\n      gender: dataCustomer.data.gender.gender_id,\n      CustomerStatus: dataCustomer.data.status.status_id,\n      // address: dataCustomer.data.addresses.address_name,\n      telephone: dataCustomer.data.telephones.telephone_number,\n      email: dataCustomer.data.emails.email_address,\n      entityNumber: dataCustomer.data.id_entity\n    });\n    setReadOnly(true);\n    console.log(\"customer : \", customer);\n  }, [dataCustomer]); //check what event in button\n\n  const activeButton = e => {\n    const {\n      name\n    } = e.target;\n    setTypeButton(name);\n\n    if (name === \"read\" || name === \"creat\") {\n      setReadOnly(false);\n    }\n  }; //send the update on customer\n\n\n  const handleSubmit = e => {\n    const {\n      name\n    } = e.target;\n    setTypeButton(name);\n    const requestMethod = typeButton;\n    e.preventDefault();\n    console.log(\"listIdUser : \", userCredentials);\n\n    if (userCredentials) {\n      dispatch(createCustomer(customer, userCredentials));\n    } //TODO: fill the entire function\n\n  }; //update sate customer in form\n\n\n  const updateCustomer = (key, value) => {\n    setCustomer({ ...customer,\n      [key]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: t(\"customers\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        className: \"button\",\n        onClick: activeButton,\n        checked: false,\n        text: t('createCustomer'),\n        iconProps: Icons.addFriend,\n        name: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultButton, {\n        className: \"button edit-button\",\n        onClick: activeButton,\n        checked: false,\n        text: t('editing'),\n        iconProps: Icons.editContact,\n        disabled: update,\n        name: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultButton, {\n        className: \"button delete-button\",\n        checked: false,\n        iconProps: Icons.userRemove,\n        text: t('deletion'),\n        id: 'Deletion',\n        name: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultButton, {\n        className: \"button save-upload\",\n        type: \"submit\",\n        checked: false,\n        text: t('save'),\n        iconProps: Icons.cloudUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        iconProps: Icons.pdf,\n        styles: {\n          icon: {\n            color: 'red',\n            fontSize: 36\n          }\n        },\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        iconProps: Icons.print,\n        styles: {\n          icon: {\n            color: 'black',\n            fontSize: 36\n          }\n        },\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        iconProps: Icons.print,\n        styles: {\n          icon: {\n            color: 'black',\n            fontSize: 36\n          }\n        },\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper customerDetail-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n        title: t(\"customerDetails\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-text\",\n        children: msgIsCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-text\",\n        children: t('personalDetails')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomToggle, {\n        onText: t('customerLock'),\n        onChange: updateCustomer,\n        id: 'isLocked',\n        defaultChecked: customer.isLocked,\n        offText: t('customerLock')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr text-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          hasOtherValue: false,\n          options: optionsForm.customersType,\n          label: t('customerType'),\n          onChange: updateCustomer,\n          selectedKey: customer.entitySubTypeId,\n          id: 'entitySubTypeId',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CustomTextFieldAddInput, {\n          value: customer.firstName,\n          readOnly: readOnly,\n          required: true,\n          label: t('firstName'),\n          onChange: updateCustomer,\n          id: 'firstName',\n          iconProps: Icons.add,\n          otherInputId: 'MiddleName',\n          othertextItnput: t(\"middleName\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.lastName,\n          required: true,\n          label: t('lastName'),\n          onChange: updateCustomer,\n          id: 'lastName'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.dateBirth,\n          type: \"date\",\n          required: true,\n          label: t('dateOfBirth'),\n          onChange: updateCustomer,\n          id: 'dateBirth',\n          iconProps: Icons.calendar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: 'OtherGender',\n          hasOtherValue: true,\n          options: optionsForm.genders,\n          label: t('gander'),\n          onChange: updateCustomer,\n          selectedKey: customer.gender,\n          id: 'gender',\n          othertextInput: t('other')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-text\",\n          children: t('contactInformation')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.idNumber,\n          required: true,\n          label: t('identityNumber'),\n          onChange: updateCustomer,\n          id: 'idNumber'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          hasOtherValue: false,\n          options: [],\n          label: t('countryIdentityNumber'),\n          onChange: updateCustomer,\n          selectedKey: customer.iDCountryCode,\n          id: 'iDCountryCode',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: 'idTypeOther',\n          hasOtherValue: true,\n          options: optionsForm.typeIdentityNumbers,\n          label: t('typeIdentityNumber'),\n          onChange: updateCustomer,\n          selectedKey: customer.idTypeId,\n          id: 'idTypeId',\n          othertextInput: t('typeIdentityNumberOther')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr text-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-text\",\n          children: t('address')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr text-width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.address,\n          readOnly: readOnly,\n          required: true,\n          label: t('address'),\n          onChange: updateCustomer,\n          id: 'address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.addressNumber,\n          readOnly: readOnly,\n          label: t('houseNumber'),\n          onChange: updateCustomer,\n          id: 'addressNumber'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          readOnly: readOnly,\n          otherInputId: '',\n          hasOtherValue: false,\n          options: [],\n          label: t('city'),\n          onChange: updateCustomer,\n          selectedKey: customer.addressCity,\n          id: 'addressCity',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          readOnly: readOnly,\n          otherInputId: '',\n          hasOtherValue: false,\n          options: [],\n          label: t('country'),\n          onChange: updateCustomer,\n          selectedKey: customer.addressCountryCode,\n          id: 'addressCountryCode',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-text\",\n          children: t('moreDetails')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-text\",\n          children: t('phone')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr text-width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          readOnly: readOnly,\n          value: customer.telephone,\n          required: true,\n          label: t('phone'),\n          onChange: updateCustomer,\n          id: 'telephone'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          readOnly: readOnly,\n          otherInputId: '',\n          hasOtherValue: false,\n          options: [],\n          label: t('countryPhone'),\n          onChange: updateCustomer,\n          selectedKey: customer.telephoneCountryCode,\n          id: 'telephoneCountryCode',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-text\",\n          children: t('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr text-width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.email,\n          readOnly: readOnly,\n          required: true,\n          label: t('emailAddress'),\n          onChange: updateCustomer,\n          id: 'email',\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr text-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          readOnly: readOnly,\n          hasOtherValue: false,\n          options: optionsForm.customersStatus,\n          label: t('customerStatus'),\n          onChange: updateCustomer,\n          selectedKey: customer.entityStatusId,\n          id: 'entityStatusId',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          value: customer.entityNumber,\n          readOnly: readOnly,\n          label: t('customerNumber'),\n          onChange: updateCustomer,\n          id: 'entityNumber'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          hasOtherValue: false,\n          options: [],\n          label: t('nameIDEmployee'),\n          onChange: updateCustomer,\n          selectedKey: customer.idIdentifier,\n          id: 'idIdentifier',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          readOnly: readOnly,\n          hasOtherValue: false,\n          options: [],\n          label: t('areaOfPracticeOrIndustry'),\n          onChange: updateCustomer,\n          selectedKey: customer.industryId,\n          id: 'industryId',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          readOnly: readOnly,\n          hasOtherValue: false,\n          options: [],\n          label: t('creditGroup'),\n          onChange: updateCustomer,\n          selectedKey: customer.CreditGroup,\n          id: 'CreditGroup',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n          otherInputId: '',\n          readOnly: readOnly,\n          hasOtherValue: false,\n          options: [],\n          label: t('agent'),\n          onChange: updateCustomer,\n          selectedKey: customer.idAffiliate,\n          id: 'idAffiliate',\n          othertextInput: t('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-text\",\n        children: t('note')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomToggle, {\n          onText: t('viewNoteWhenPerformingAction'),\n          onChange: updateCustomer,\n          id: 'ViewNoteWhenPerformingAnAction',\n          defaultChecked: true,\n          offText: t('viewNoteWhenPerformingAction')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr text-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextFeildNote, {\n      label: t(''),\n      onChange: updateCustomer,\n      id: 'note'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerDetails, \"L7PMSi0Imwnww2P0/f3AzNWXK04=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, useSelector, useSelector, useParams];\n});\n\n_c = CustomerDetails;\nexport default CustomerDetails; //send to detail customer to save\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerDetails\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/client-management/src/components/customerDetails/CustomerDetails.tsx"],"names":["useEffect","useState","useTranslation","CustomDropdown","CustomTextField","CustomTextFieldAddInput","TextFeildNote","CustomToggle","Icons","Subtitle","DefaultButton","IconButton","PrimaryButton","useDispatch","useSelector","Title","createCustomer","readCustomerId","loadOptions","useParams","blankCustomer","gender","otherGender","CustomerStatus","entityStatusId","firstName","note","lastName","isLocked","dateBirth","genderOther","middleName","otherCustomerStatus","classId","entitySubTypeId","ViewNoteWhenPerformingAction","industryId","CreditGroup","idAffiliate","idTypeId","idNumber","idTypeOther","addressCountryCode","idIdentifier","address","addressNumber","addressCity","iDCountryCode","telephone","telephoneCountryCode","email","entityNumber","CustomerDetails","options","genders","typeIdentityNumbers","customersStatus","customersCondition","customersType","t","i18n","dispatch","readOnly","setReadOnly","update","setUpdate","typeButton","setTypeButton","customer","setCustomer","optionsForm","setOptionsForm","msgIsCreated","setMsgIsCreated","dataCustomer","customerReducer","fieldsOptionsMapFromReducer","dataReducer","userCredentials","setUserCredentials","user","authReducer","params","userObj","JSON","parse","console","log","data","id_entity","client","branch","userId","callReadCustomer","listIdUser","generalFormOptionsMa","callLoadOptions","error","buildObjecOptions","nameOption","generalFormOptionsMap","map","objOptin","index","key","enum_id","text","enum_value","nameOptions","value","err_code","class","class_id","properties","date_birth","first_name","last_name","types","entity_sub_type_id","is_locked","gender_id","status","status_id","telephones","telephone_number","emails","email_address","activeButton","e","name","target","handleSubmit","requestMethod","preventDefault","updateCustomer","addFriend","editContact","userRemove","cloudUpload","pdf","icon","color","fontSize","print","add","calendar"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CustomDropdown } from \"../../shared/components/Option\";\r\nimport { CustomTextField, CustomTextFieldAddInput } from \"../../shared/components/TextField\";\r\nimport { TextFeildNote } from \"../../shared/components/Note\";\r\nimport { CustomToggle } from \"../../shared/components/Toggle\";\r\nimport './customerDetails.scss'\r\nimport { Icons } from \"../../modelsType/Icon\";\r\nimport Subtitle from \"../../shared/components/Subtitle\";\r\nimport '../../scssPages/sub-header.scss';\r\nimport { DefaultButton, IconButton, List, PrimaryButton } from \"@fluentui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Title from \"../../shared/components/Title\";\r\nimport { createCustomer, readCustomerId } from \"../../store/actions/customerActioin\"\r\nimport { loadOptions } from \"../../store/actions/dataActions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isNullishCoalesce } from \"typescript\";\r\n\r\n\r\n\r\n\r\n//form's object\r\nexport interface ICustomer {\r\n  [x: string]: any;\r\n  gender: Number;\r\n  otherGender: String;\r\n  otherCustomerStatus: string;\r\n  entityStatusId: Number;\r\n  firstName: string;\r\n  lastName: string;\r\n  isLocked: boolean;\r\n  note: string;\r\n  dateBirth: string;\r\n  middleName: string;\r\n  classId: Number;\r\n  entitySubTypeId: Number;\r\n  ViewNoteWhenPerformingAction: boolean;\r\n  industryId: Number;\r\n  CreditGroup: Number;\r\n  idAffiliate: Number;\r\n  idNumber: string;\r\n  idTypeId: string;\r\n  idTypeOther: string;\r\n  addressCountryCode: string;\r\n  idIdentifier: Number;\r\n  address: string;\r\n  addressNumber: string;\r\n  addressCity: string\r\n  iDCountryCode: string;\r\n  telephone: string;\r\n  telephoneCountryCode: Number;\r\n  email: string;\r\n  entityNumber: string;\r\n}\r\n\r\nconst blankCustomer: ICustomer = {\r\n  gender: 1,\r\n  otherGender: \"\",\r\n  CustomerStatus: 0,\r\n  entityStatusId: 0,\r\n  firstName: \"\",\r\n  note: \"\",\r\n  lastName: \"\",\r\n  isLocked: false,\r\n  dateBirth: \"\",\r\n  genderOther: \"\",\r\n  middleName: \"\",\r\n  otherCustomerStatus: \"\",\r\n  classId: 1,\r\n  entitySubTypeId: 1,\r\n  ViewNoteWhenPerformingAction: false,\r\n  industryId: 0,\r\n  CreditGroup: 0,\r\n  idAffiliate: 0,\r\n  idTypeId: \"\",\r\n  idNumber: \"\",\r\n  idTypeOther: \"\",\r\n  addressCountryCode: \"\",\r\n  idIdentifier: 0,\r\n  address: \"\",\r\n  addressNumber: \"\",\r\n  addressCity: \"\",\r\n  iDCountryCode: \"\",\r\n  telephone: \"\",\r\n  telephoneCountryCode: 0,\r\n  email: \"\",\r\n  entityNumber: \"\",\r\n}\r\n\r\n\r\n\r\ninterface Iparms {\r\n  userId: string\r\n}\r\n\r\nexport interface IUserCredentials{\r\n  \"idInitiator\":any,\r\n  \"idClient\":any,\r\n  \"idBranch\":any\r\n}\r\nconst CustomerDetails = () => {\r\n\r\n  const options = {\r\n    genders: [],\r\n    typeIdentityNumbers: [],\r\n    customersStatus: [],\r\n    customersCondition: [],\r\n    customersType: []\r\n  }\r\n\r\n  const [t, i18n] = useTranslation();\r\n  const dispatch = useDispatch()\r\n  const [readOnly, setReadOnly] = useState(false)\r\n  const [update, setUpdate] = useState(true)\r\n  const [typeButton, setTypeButton] = useState()\r\n  const [customer, setCustomer] = useState(blankCustomer)\r\n  const [optionsForm, setOptionsForm] = useState(options)\r\n  // const [fieldsOptionsMap,setFieldsOptionsMap]=useState(null)\r\n  const [msgIsCreated, setMsgIsCreated] = useState(\"\")\r\n  const { dataCustomer } = useSelector(({ customerReducer }: any) => customerReducer)\r\n  const fieldsOptionsMapFromReducer = useSelector(({ dataReducer }: any) => dataReducer)\r\n   const [userCredentials,setUserCredentials] = useState<IUserCredentials|null>(null)\r\n  const { user } = useSelector(({ authReducer }: any) => authReducer)\r\n  const params = useParams<Iparms>()\r\n\r\n  //details of user login\r\n  useEffect(() => {\r\n    if (!user) return\r\n    const userObj = JSON.parse(user)\r\n    if (!userObj) return\r\n    console.log(\"userObj: \", userObj)\r\n    setUserCredentials({\"idInitiator\":userObj.data.user.id_entity,\r\n                       \"idClient\":userObj.data.client.id_entity,\r\n                        \"idBranch\": userObj.data.branch.id_entity \r\n    })\r\n    console.log(\"UserCredentials : \",userCredentials)\r\n  }, []);\r\n\r\n  //id of customer frrom search\r\n  useEffect(() => {\r\n    console.log(\"params : \", params);\r\n    if (params?.userId) {\r\n      const userId = params.userId\r\n      callReadCustomer(userId, userCredentials)\r\n    }\r\n  }, [params])\r\n\r\n  const callReadCustomer = async (userId: string, listIdUser: any) => {\r\n    dispatch(readCustomerId(userId, listIdUser))\r\n  }\r\n\r\n  //call to option in dropDwan  \r\n  useEffect(() => {\r\n    if (!fieldsOptionsMapFromReducer?.data?.generalFormOptionsMa) {\r\n      callLoadOptions()\r\n    }\r\n  }, [])\r\n\r\n  const callLoadOptions = async () => {\r\n    try {\r\n      await dispatch(loadOptions())\r\n      console.log(\"good\")\r\n\r\n    } catch (error) {\r\n      console.log(\"error in call load options\", error)\r\n    }\r\n  }\r\n\r\n  //build the option in dropdwan\r\n  const buildObjecOptions = (nameOption: string) => {\r\n    fieldsOptionsMapFromReducer.data.generalFormOptionsMap[nameOption].map((objOptin: { key: string | number; }, index: string | number) => {\r\n      //@ts-ignore\r\n      options[nameOption][index] = { key: objOptin.enum_id, text: objOptin.enum_value }\r\n    });\r\n  }\r\n\r\n  //update the object  option \r\n  useEffect(() => {\r\n    if (!fieldsOptionsMapFromReducer?.data?.generalFormOptionsMap) return\r\n    const nameOptions = [\"customersCondition\", \"customersType\", \"genders\", \"typeIdentityNumbers\", \"customersStatus\"]\r\n    for (let value of nameOptions) {\r\n      buildObjecOptions(value)\r\n    }\r\n    console.log(\"option customer before state\", options)\r\n    setOptionsForm({ ...options })\r\n  }, [fieldsOptionsMapFromReducer])\r\n\r\n\r\n  //function called to options\r\n\r\n\r\n  //function created customer\r\n  useEffect(() => {\r\n\r\n    if (dataCustomer?.err_code === 0) {\r\n      setUpdate(false)\r\n      console.log(\"typeButton\",typeButton)\r\n      if (typeButton === \"creat\") {\r\n        setMsgIsCreated(\"Customer created successfully\")\r\n      }\r\n      else {\r\n        if (dataCustomer?.err_code) {\r\n          if (dataCustomer?.err_code !== 0)\r\n            setMsgIsCreated(\"The customer's details are incorrect  try again\")\r\n        }\r\n        else {\r\n          setMsgIsCreated(\"\")\r\n        }\r\n      }\r\n    }\r\n    if (!dataCustomer?.data) return\r\n    setCustomer({\r\n      ...customer,\r\n      classId: dataCustomer.data.class.class_id,\r\n      dateBirth: dataCustomer.data.properties.date_birth,\r\n      firstName: dataCustomer.data.properties.first_name,\r\n      lastName: dataCustomer.data.properties.last_name,\r\n      entitySubTypeId: dataCustomer.data.types.entity_sub_type_id,\r\n      isLocked: dataCustomer.data.properties.is_locked,\r\n      note: dataCustomer.data.properties.note,\r\n      gender: dataCustomer.data.gender.gender_id,\r\n      CustomerStatus: dataCustomer.data.status.status_id,\r\n      // address: dataCustomer.data.addresses.address_name,\r\n      telephone: dataCustomer.data.telephones.telephone_number,\r\n      email: dataCustomer.data.emails.email_address,\r\n      entityNumber: dataCustomer.data.id_entity\r\n    })\r\n    setReadOnly(true)\r\n   \r\n    console.log(\"customer : \",customer)\r\n  }, [dataCustomer])\r\n\r\n\r\n  //check what event in button\r\n  const activeButton = (e: any) => {\r\n    const { name } = e.target;\r\n    setTypeButton(name)\r\n    if (name === \"read\" || name === \"creat\") {\r\n      setReadOnly(false)\r\n    }\r\n  }\r\n\r\n  //send the update on customer\r\n  const handleSubmit = (e: any) => {\r\n    const { name } = e.target;\r\n    setTypeButton(name)\r\n    const requestMethod = typeButton;\r\n    e.preventDefault()\r\n    console.log(\"listIdUser : \", userCredentials)\r\n    if(userCredentials){\r\n      dispatch(createCustomer(customer, userCredentials))\r\n    }\r\n   \r\n    //TODO: fill the entire function\r\n  }\r\n\r\n  //update sate customer in form\r\n  const updateCustomer = (key: string, value: any) => {\r\n    setCustomer({\r\n      ...customer,\r\n      [key]: value\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"sub-header\">\r\n        <Title\r\n          title={t(\"customers\")} />\r\n        <div className=\"divider\"></div>\r\n        <PrimaryButton className='button' onClick={activeButton} checked={false} text={t('createCustomer')} iconProps={Icons.addFriend} name=\"create\" />\r\n        <DefaultButton className='button edit-button' onClick={activeButton} checked={false} text={t('editing')} iconProps={Icons.editContact} disabled={update} name=\"update\" />\r\n        <DefaultButton className='button delete-button' checked={false} iconProps={Icons.userRemove} text={t('deletion')} id={'Deletion'} name=\"delete\" />\r\n        <DefaultButton className='button save-upload' type=\"submit\" checked={false} text={t('save')} iconProps={Icons.cloudUpload} />\r\n        <IconButton\r\n          iconProps={Icons.pdf}\r\n          styles={{\r\n            icon: { color: 'red', fontSize: 36 }\r\n          }}\r\n          className=\"button\"\r\n        />\r\n        <IconButton\r\n          iconProps={Icons.print}\r\n          styles={{\r\n            icon: { color: 'black', fontSize: 36 }\r\n          }}\r\n          className=\"button\"\r\n        />\r\n        <IconButton\r\n          iconProps={Icons.print}\r\n          styles={{\r\n            icon: { color: 'black', fontSize: 36 }\r\n          }}\r\n          className=\"button\"\r\n        />\r\n      </div>\r\n      <hr className=\"hr\"></hr>\r\n      <div className=\"content-wrapper customerDetail-wrapper\">\r\n        <Subtitle title={t(\"customerDetails\")} />\r\n        <p className=\"title-text\">{msgIsCreated}</p>\r\n        <p className=\"title-text\">{t('personalDetails')}</p>\r\n        <CustomToggle onText={t('customerLock')} onChange={updateCustomer} id={'isLocked'} defaultChecked={customer.isLocked} offText={t('customerLock')} />\r\n        <hr className=\"hr\"></hr>\r\n        <hr className=\"hr text-width\"></hr>\r\n        <div>\r\n          <CustomDropdown otherInputId={''} hasOtherValue={false} options={optionsForm.customersType} label={t('customerType')} onChange={updateCustomer} selectedKey={customer.entitySubTypeId} id={'entitySubTypeId'} othertextInput={t('')} />\r\n        </div>\r\n        <div></div>\r\n        <div>\r\n          <CustomTextFieldAddInput value={customer.firstName} readOnly={readOnly} required={true} label={t('firstName')} onChange={updateCustomer} id={'firstName'} iconProps={Icons.add} otherInputId={'MiddleName'} othertextItnput={t(\"middleName\")} />\r\n          <CustomTextField value={customer.lastName} required={true} label={t('lastName')} onChange={updateCustomer} id={'lastName'} />\r\n          <CustomTextField value={customer.dateBirth} type=\"date\" required={true} label={t('dateOfBirth')} onChange={updateCustomer} id={'dateBirth'} iconProps={Icons.calendar} />\r\n          <CustomDropdown otherInputId={'OtherGender'} hasOtherValue={true} options={optionsForm.genders} label={t('gander')} onChange={updateCustomer} selectedKey={customer.gender} id={'gender'} othertextInput={t('other')} />\r\n          <p className=\"title-text\">{t('contactInformation')}</p>\r\n        </div>\r\n        <div>\r\n          <CustomTextField value={customer.idNumber} required={true} label={t('identityNumber')} onChange={updateCustomer} id={'idNumber'} />\r\n          <CustomDropdown otherInputId={''} hasOtherValue={false} options={[]} label={t('countryIdentityNumber')} onChange={updateCustomer} selectedKey={customer.iDCountryCode} id={'iDCountryCode'} othertextInput={t('')} />\r\n          <CustomDropdown otherInputId={'idTypeOther'} hasOtherValue={true} options={optionsForm.typeIdentityNumbers} label={t('typeIdentityNumber')} onChange={updateCustomer} selectedKey={customer.idTypeId} id={'idTypeId'} othertextInput={t('typeIdentityNumberOther')} />\r\n        </div>\r\n        <hr className=\"hr\"></hr>\r\n        <hr className=\"hr text-width\"></hr>\r\n\r\n        <div>\r\n          <p className=\"title-text\">{t('address')}</p>\r\n          <hr className=\"hr text-width\"></hr>\r\n          <CustomTextField value={customer.address} readOnly={readOnly} required={true} label={t('address')} onChange={updateCustomer} id={'address'} />\r\n          <CustomTextField value={customer.addressNumber} readOnly={readOnly} label={t('houseNumber')} onChange={updateCustomer} id={'addressNumber'} />\r\n          <CustomDropdown readOnly={readOnly} otherInputId={''} hasOtherValue={false} options={[]} label={t('city')} onChange={updateCustomer} selectedKey={customer.addressCity} id={'addressCity'} othertextInput={t('')} />\r\n          <CustomDropdown readOnly={readOnly} otherInputId={''} hasOtherValue={false} options={[]} label={t('country')} onChange={updateCustomer} selectedKey={customer.addressCountryCode} id={'addressCountryCode'} othertextInput={t('')} />\r\n\r\n          <p className=\"title-text\">{t('moreDetails')}</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"title-text\">{t('phone')}</p>\r\n          <hr className=\"hr text-width\"></hr>\r\n          <CustomTextField readOnly={readOnly} value={customer.telephone} required={true} label={t('phone')} onChange={updateCustomer} id={'telephone'} />\r\n          <CustomDropdown readOnly={readOnly} otherInputId={''} hasOtherValue={false} options={[]} label={t('countryPhone')} onChange={updateCustomer} selectedKey={customer.telephoneCountryCode} id={'telephoneCountryCode'} othertextInput={t('')} />\r\n          <p className=\"title-text\">{t('email')}</p>\r\n          <hr className=\"hr text-width\"></hr>\r\n          <CustomTextField value={customer.email} readOnly={readOnly} required={true} label={t('emailAddress')} onChange={updateCustomer} id={'email'} type='email' />\r\n\r\n        </div>\r\n\r\n        <hr className=\"hr\"></hr>\r\n        <hr className=\"hr text-width\"></hr>\r\n        <div>\r\n          <CustomDropdown otherInputId={''} readOnly={readOnly} hasOtherValue={false} options={optionsForm.customersStatus} label={t('customerStatus')} onChange={updateCustomer} selectedKey={customer.entityStatusId} id={'entityStatusId'} othertextInput={t('')} />\r\n          <CustomTextField value={customer.entityNumber} readOnly={readOnly} label={t('customerNumber')} onChange={updateCustomer} id={'entityNumber'} />\r\n          <CustomDropdown otherInputId={''} hasOtherValue={false} options={[]} label={t('nameIDEmployee')} onChange={updateCustomer} selectedKey={customer.idIdentifier} id={'idIdentifier'} othertextInput={t('')} />\r\n        </div>\r\n\r\n        <div>\r\n          <CustomDropdown otherInputId={''} readOnly={readOnly} hasOtherValue={false} options={[]} label={t('areaOfPracticeOrIndustry')} onChange={updateCustomer} selectedKey={customer.industryId} id={'industryId'} othertextInput={t('')} />\r\n          <CustomDropdown otherInputId={''} readOnly={readOnly} hasOtherValue={false} options={[]} label={t('creditGroup')} onChange={updateCustomer} selectedKey={customer.CreditGroup} id={'CreditGroup'} othertextInput={t('')} />\r\n          <CustomDropdown otherInputId={''} readOnly={readOnly} hasOtherValue={false} options={[]} label={t('agent')} onChange={updateCustomer} selectedKey={customer.idAffiliate} id={'idAffiliate'} othertextInput={t('')} />\r\n\r\n        </div>\r\n        <p className=\"title-text\">{t('note')}</p>\r\n        <div>\r\n          <p></p>\r\n          <CustomToggle onText={t('viewNoteWhenPerformingAction')} onChange={updateCustomer} id={'ViewNoteWhenPerformingAnAction'} defaultChecked={true} offText={t('viewNoteWhenPerformingAction')} />\r\n        </div>\r\n        <hr className=\"hr\"></hr>\r\n        <hr className=\"hr text-width\"></hr>\r\n      </div>\r\n      <TextFeildNote label={t('')} onChange={updateCustomer} id={'note'} />\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nexport default CustomerDetails;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//send to detail customer to save\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}