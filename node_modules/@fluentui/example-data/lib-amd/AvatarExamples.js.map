{"version":3,"file":"AvatarExamples.js","sourceRoot":"../src/","sources":["AvatarExamples.tsx"],"names":[],"mappings":"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","sourcesContent":["const imageRoot = 'http://fabricweb.azureedge.net/fabric-website/assets/images/avatar';\n\n/** Sample names and images for use in Avatar examples */\nconst nameAndImage = [\n  { name: 'Katri Athokas', image: `${imageRoot}/KatriAthokas.jpg` },\n  { name: 'Elvia Atkins', image: `${imageRoot}/ElviaAtkins.jpg` },\n  { name: 'Mauricio August', image: `${imageRoot}/MauricioAugust.jpg` },\n  { name: 'Colin Ballinger', image: `${imageRoot}/ColinBallinger.jpg` },\n  { name: 'Lydia Bauer', image: `${imageRoot}/LydiaBauer.jpg` },\n  { name: 'Amanda Brady', image: `${imageRoot}/AmandaBrady.jpg` },\n  { name: 'Henry Brill', image: `${imageRoot}/HenryBrill.jpg` },\n  { name: 'Celeste Burton', image: `${imageRoot}/CelesteBurton.jpg` },\n  { name: 'Robin Counts', image: `${imageRoot}/RobinCounts.jpg` },\n  { name: 'Tim Deboer', image: `${imageRoot}/TimDeboer.jpg` },\n  { name: 'Cameron Evans', image: `${imageRoot}/CameronEvans.jpg` },\n  { name: 'Isaac Fielder', image: `${imageRoot}/IsaacFielder.jpg` },\n  { name: 'Cecil Folk', image: `${imageRoot}/CecilFolk.jpg` },\n  { name: 'Miguel Garcia', image: `${imageRoot}/MiguelGarcia.jpg` },\n  { name: 'Wanda Howard', image: `${imageRoot}/WandaHoward.jpg` },\n  { name: 'Mona Kane', image: `${imageRoot}/MonaKane.jpg` },\n  { name: 'Kat Larsson', image: `${imageRoot}/KatLarsson.jpg` },\n  { name: 'Ashley McCarthy', image: `${imageRoot}/AshleyMcCarthy.jpg` },\n  { name: 'Johnie McConnell', image: `${imageRoot}/JohnieMcConnell.jpg` },\n  { name: 'Allan Munger', image: `${imageRoot}/AllanMunger.jpg` },\n  { name: 'Erik Nason', image: `${imageRoot}/ErikNason.jpg` },\n  { name: 'Kristin Patterson', image: `${imageRoot}/KristinPatterson.jpg` },\n  { name: 'Daisy Phillips', image: `${imageRoot}/DaisyPhillips.jpg` },\n  { name: 'Carole Poland', image: `${imageRoot}/CarolePoland.jpg` },\n  { name: 'Carlos Slattery', image: `${imageRoot}/CarlosSlattery.jpg` },\n  { name: 'Robert Tolbert', image: `${imageRoot}/RobertTolbert.jpg` },\n  { name: 'Kevin Sturgis', image: `${imageRoot}/KevinSturgis.jpg` },\n  { name: 'Charlotte Waltson', image: `${imageRoot}/CharlotteWaltson.jpg` },\n  { name: 'Elliot Woodward', image: `${imageRoot}/ElliotWoodward.jpg` },\n];\n\n/** Arrays of example values for each Avatar prop */\nexport const AvatarExamples = {\n  size: [20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 96, 120, 128],\n  nameAndImage: nameAndImage,\n  name: nameAndImage.map(p => p.name),\n  image: nameAndImage.map(p => p.image),\n  activeDisplay: ['ring', 'ring-shadow', 'ring-glow', 'shadow', 'glow'],\n  color: ['neutral', 'brand', 'colorful'],\n  namedColors: [\n    'darkRed',\n    'cranberry',\n    'red',\n    'pumpkin',\n    'peach',\n    'marigold',\n    'gold',\n    'brass',\n    'brown',\n    'forest',\n    'seafoam',\n    'darkGreen',\n    'lightTeal',\n    'teal',\n    'steel',\n    'blue',\n    'royalBlue',\n    'cornflower',\n    'navy',\n    'lavender',\n    'purple',\n    'grape',\n    'lilac',\n    'pink',\n    'magenta',\n    'plum',\n    'beige',\n    'mink',\n    'platinum',\n    'anchor',\n  ],\n  /** A SVG hexagon data URL used by the CustomShape example */\n  hexagon:\n    'data:image/svg+xml;utf8,' +\n    '<svg width=\"36\" height=\"32\" viewBox=\"0 0 36 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">' +\n    '<path fill=\"rgb(232,232,232)\" d=\"M0.407926 17.528C-0.135976 16.5859 -0.135975 15.4141 0.407926 14.472' +\n    'L7.91541 1.46793C8.44076 0.557947 9.39444 0 10.4245 0H25.5755C26.6056 0 27.5592 0.557951 28.0846 1.46793' +\n    'L35.5921 14.472C36.136 15.4141 36.136 16.5859 35.5921 17.528L28.0846 30.5321' +\n    'C27.5592 31.4421 26.6056 32 25.5755 32H10.4245C9.39443 32 8.44076 31.4421 7.91541 30.5321L0.407926 17.528Z\"/>' +\n    '</svg>',\n} as const;\n"]}