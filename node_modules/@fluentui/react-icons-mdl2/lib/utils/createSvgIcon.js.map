{"version":3,"file":"createSvgIcon.js","sourceRoot":"../src/","sources":["utils/createSvgIcon.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAE,cAAc,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AACjF,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAC;AAG1C,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAE9D,IAAM,aAAa,GAAG,UAAc,EAAmD;QAAjD,GAAG,SAAA,EAAE,WAAW,iBAAA;IACpD,IAAM,SAAS,GAA6E,UAAA,KAAK;;;QACvF,IAAA,SAAS,GAAiB,KAAK,UAAtB,EAAE,KAAe,KAAK,MAAV,EAAV,KAAK,mBAAG,EAAE,KAAA,CAAW;QACxC,IAAM,KAAK,GAAG,aAAa,EAAE,CAAC,CAAC,mCAAmC;QAElE,IAAM,WAAW,GAAG,cAAc,CAAoC,KAAK,EAAE,qBAAqB,CAAC,CAAC;QACpG,IAAM,cAAc,GAClB,KAAK,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,KAAK;YAC5D,CAAC,CAAC;gBACE,IAAI,EAAE,KAAK;aACZ;YACH,CAAC;gBACG,GAAC,aAAa,IAAG,IAAI;mBACtB,CAAC;QAER,OAAO,KAAK,CAAC,aAAa,CACxB,MAAM,iCAED,cAAc,GACd,WAAW,KACd,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EACvC,KAAK,OAAA,KAEP,OAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAG,WAAW,GAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,CAAC,CACjF,CAAC;IACJ,CAAC,CAAC;IAEF,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;IAEpC,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import * as React from 'react';\nimport { css, getNativeProps, htmlElementProperties } from '@fluentui/utilities';\nimport * as classes from './SvgIcon.scss';\nimport { ISvgIconProps } from './SvgIcon.types';\nimport { SvgIconCreateFnParams } from './types';\nimport { useIconSubset } from '@fluentui/react-icon-provider';\n\nconst createSvgIcon = <TProps = {}>({ svg, displayName }: SvgIconCreateFnParams<TProps>) => {\n  const Component: React.FC<React.HTMLAttributes<HTMLSpanElement> & TProps & ISvgIconProps> = props => {\n    const { className, style = {} } = props;\n    const icons = useIconSubset(); // TODO: handle fontFace and styles\n\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLElement>>(props, htmlElementProperties);\n    const containerProps =\n      props['aria-label'] || props['aria-labelledby'] || props.title\n        ? {\n            role: 'img',\n          }\n        : {\n            ['aria-hidden']: true,\n          };\n\n    return React.createElement(\n      'span',\n      {\n        ...containerProps,\n        ...nativeProps,\n        className: css(classes.root, className),\n        style,\n      },\n      icons?.icons?.[displayName] ? icons.icons[displayName] : svg({ classes, props }),\n    );\n  };\n\n  Component.displayName = displayName;\n\n  return Component;\n};\n\nexport default createSvgIcon;\n"]}